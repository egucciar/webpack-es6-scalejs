{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap e361f65b40435f9e7a43","webpack:///./~/knockout/build/output/knockout-latest.debug.js","webpack:///./~/scalejs/dist/scalejs.core.js","webpack:///./~/scalejs/dist/scalejs.sandbox.js","webpack:///./~/scalejs/dist/scalejs.base.object.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/lodash/lodash.js","webpack:///./~/scalejs.mvvm/dist/scalejs.mvvm.js","webpack:///./~/scalejs/dist/scalejs.base.type.js","webpack:///./es6/app/app.js","webpack:///./es6/app/main/mainModule.js","webpack:///./es6/app/modules.js","webpack:///./es6/app/template/templateModule.js","webpack:///./es6/app/template/templateViewModel.js","webpack:///./es6/extensions/scalejs.extensions.js","webpack:///./es6/extensions/scalejs.metadataFactory.js","webpack:///./es6/app/main/main.html","webpack:///./es6/app/template/template.html","webpack:///./es6/extensions/metadataFactory.html","webpack:///./~/jquery/dist/jquery.js","webpack:///./~/knockout.mapping/knockout.mapping.js","webpack:///./~/scalejs/dist/scalejs.application.js","webpack:///./~/scalejs/dist/scalejs.base.array.js","webpack:///./~/scalejs/dist/scalejs.base.js","webpack:///./~/scalejs/dist/scalejs.base.log.js","webpack:///./~/scalejs/dist/scalejs.es6.core.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/hot/dev-server.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","0","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","c","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","DEBUG","this","eval","navigator","jQueryInstance","JSON","factory","koExports","amdRequire","valuesArePrimitiveAndEqual","a","b","oldValueIsPrimitive","primitiveTypes","throttle","timeout","timeoutInstance","ko","utils","setTimeout","debounce","clearTimeout","applyExtenders","requestedExtenders","target","objectForEach","key","value","extenderHandler","extenders","limitNotifySubscribers","event","defaultEvent","_limitBeforeChange","_origNotifySubscribers","_limitChange","computedDisposeDependencyCallback","entryToDispose","dispose","computedBeginDependencyDetectionCallback","subscribable","computedObservable","state","computedState","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","_target","subscribeToDependency","makeEventHandlerShortcut","eventName","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","newValueAccessor","result","makeWithIfBinding","bindingKey","isWith","isNot","makeContextCallback","didDisplayOnLastUpdate","savedNodes","computed","dataValue","unwrapObservable","shouldDisplay","isFirstRender","needsRefresh","computedContext","getDependenciesCount","cloneNodes","virtualElements","childNodes","setDomNodeChildren","applyBindingsToDescendants","emptyNode","disposeWhenNodeIsRemoved","controlsDescendantBindings","expressionRewriting","bindingRewriteValidators","allowedBindings","exportSymbol","koPath","object","tokens","split","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","obj","action","prop","hasOwnProperty","extend","source","setPrototypeOf","proto","__proto__","isClickOnCheckableElement","eventType","tagNameLower","toLowerCase","inputType","toggleDomNodeCssClass","node","classNames","shouldHaveClass","addOrRemoveFn","classList","arrayForEach","match","cssClassNameRegex","className","toggleObjectClassPropertyString","currentClassNames","addOrRemoveItem","join","canSetPrototype","Array","canUseSymbols","Symbol","knownEvents","knownEventTypesByEventName","keyEventTypeName","test","userAgent","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","iElems","innerHTML","isIe6","isIe7","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","prototype","indexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","arrayGetDistinctValues","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","templateDocument","ownerDocument","container","cleanNode","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagName","catchFunctionErrors","delegate","arguments","handler","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","isObservable","peek","setTextContent","textContent","innerTextNode","createTextNode","data","forceRefresh","setElementName","name","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getAll","createIfNotFound","dataStoreKey","dataStoreKeyExpandoPropertyName","hasExistingDataStore","dataStore","uniqueId","Date","getTime","get","allDataForNode","set","clear","nextKey","getDisposeCallbacksCollection","allDisposeCallbacks","domDataKey","destroyCallbacksCollection","cleanSingleNode","cleanableNodeTypesWithDescendants","cleanImmediateCommentTypeChildren","nodeWithChildren","child","nextChild","cleanableNodeTypes","1","8","9","removeDisposeCallback","callbacksCollection","descendants","cleanExternalData","getWrap","tags","lookup","none","simpleHtmlParse","html","documentContext","windowContext","wrap","depth","markup","mayRequireCreateElementHack","lastChild","jQueryHtmlParse","elems","table","tbody","tr","select","thead","tfoot","td","th","option","optgroup","parseHtmlFragment","setHtml","parsedNodes","memoization","randomMax8HexChars","Math","random","generateRandomId","findMemoNodes","rootNode","appendToArray","memoId","parseMemoText","nodeValue","memos","memoize","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","combinedParams","memoText","tasks","processTasks","taskQueueLength","task","mark","countMarks","nextIndexToProcess","taskQueue","ex","scheduledProcess","scheduleTaskProcessing","scheduler","nextHandle","MutationObserver","observe","attributes","toggle","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","writeTimeoutInstance","dependentObservable","read","write","rateLimit","limitFunction","_deferUpdates","limit","deferred","notify","notifyWhen","boolean","number","subscription","disposeCallback","ko_subscribable_fn","instance","_subscriptions","_versionNumber","subscribe","callbackTarget","self","boundCallback","bind","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","previousValue","pendingValue","selfIsObservable","beforeChange","finish","_notificationIsPending","isDifferent","getSubscriptionsCount","total","subscriptions","oldValue","newValue","isSubscribable","getId","lastId","outerFrames","currentFrame","pop","registerDependency","_id","ignore","callbackArgs","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","trackChanges","trackingChanges","underlyingNotifySubscribersFunction","pendingNotifications","previousContents","cachedDiff","arrayChangeSubscription","currentContents","changes","getChanges","compareArrays","compareArrayOptions","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","rawArray","operationName","pushDiff","status","diff","arrayLength","argsLength","offset","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","isStale","haveDependenciesChanged","evaluateImmediate","latestValue","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","dependency","markDirty","_evalDelayed","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","dependeciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","mapJsObjectGraph","rootObject","mapInputCallback","visitedObjects","objectLookup","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","visitorCallback","propertyName","keys","values","maxNestedObservableDepth","toJS","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","hasDomDataExpandoProperty","selectExtensions","readValue","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","getWriteableValue","expression","javaScriptReservedWords","javaScriptAssignmentTarget","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","bindingToken","tok","unknown","divisionLookBehind","keywordRegexLookBehind","substr","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","callPreprocessHook","writableVal","bindingParams","twoWayBindings","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","stringDouble","stringSingle","stringRegexp","specials","everyThingElse","oneNotSpace","in","return","typeof","keyValueArrayContainsKey","writeValueToProperty","property","checkIfDifferent","propWriters","isStartComment","startCommentRegex","commentNodesHaveTextProperty","isEndComment","endCommentRegex","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","createComment","htmlTagsWithOptionallyClosingChildren","ul","ol","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","createBindingsStringEvaluatorViaCache","bindingsString","cache","cacheKey","createBindingsStringEvaluator","rewrittenBindings","functionBody","defaultBindingAttributeName","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","bindingFunction","message","makeValueAccessor","evaluateValueAccessor","makeAccessorsFromFunction","makeBindingAccessors","bindings","context","getBindingsAndMakeAccessors","validateThatBindingIsAllowedForVirtualElements","bindingName","validator","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingDoesNotRecurseIntoElementTypes","topologicalSortBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","sourceBindings","bindingsUpdater","alreadyBound","boundElementDomDataKey","storedBindingContextForNode","_subscribable","bindingHandlerThatControlsDescendantBindings","getValueAccessor","orderedBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","initResult","getBindingContext","viewModelOrBindingContext","textarea","template","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_addNode","unshift","properties","storedBindingContextDomDataKey","applyBindingAccessorsToNode","applyBindingsToNode","applyBindings","contextFor","dataFor","getObjectOwnProperty","propName","loadComponentAndNotify","componentName","completedAsync","loadingSubscribablesCache","beginLoadingComponent","definition","config","isSynchronousComponent","loadedDefinitionsCache","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","cachedDefinition","clearCachedDefinition","_getFirstResultFromLoaders","resolveConfig","errorCallback","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","possiblyGetConfigFromAmd","loadedConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveTemplate","isDocumentFragment","isDomElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveViewModel","fixedInstance","componentInfo","content","HTMLElement","DocumentFragment","makeErrorCallback","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","loadTemplate","loadViewModel","_allRegisteredComponents","getComponentParamsFromCustomElement","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","componentBindingValue","createDocumentFragment","newDocFrag","allComponents","cloneTemplateIntoElement","componentDefinition","clonedNodesArray","createViewModel","originalChildNodes","componentParams","componentViewModelFactory","templateNodes","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","loadingOperationId","componentViewModel","childBindingContext","ctx","attrHtmlToJavascriptMap","class","for","update","attrName","attrValue","toRemove","removeAttribute","after","updateModel","isChecked","checked","elemValue","useCheckedValue","checkedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","updateView","isCheckbox","rawValue","classesWrittenByBindingKey","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","hasfocusUpdatingProperty","hasfocusLastValue","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","applyToObject","defaultValue","predicateType","optionForArrayItem","arrayEntry","oldOptions","previousSelectedValues","valueAllowUnset","itemUpdate","optionText","setSelectionCallback","newOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","arrayToDomNodeChildrenOptions","setDomNodeChildrenFromArrayMapping","selectionChanged","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","isCurrentlyVisible","templateSource","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","validateDataBindValuesForRewriting","allValidators","possibleErrorMessage","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","getTemplateDomData","templatesDomDataKey","setTemplateDomData","templateScript","templateTextArea","templateTemplate","templateElement","templateType","elemContentsProperty","dataDomDataPrefix","templateData","containerData","textData","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","_templateEngine","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","disposeOldComputedAndStoreNewOne","newComputed","oldComputed","templateComputedDomDataKey","setTemplateEngine","renderTemplate","dataOrBindingContext","whenToDispose","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","bindingValue","templateComputed","dataArray","innerBindingContext","parsedBindingValue","left","right","limitFailedCompares","failedCompares","l","r","leftItem","rightItem","oldArray","newArray","dontLimitMoves","compareSmallArrayToBigArray","statusNotInOld","statusNotInNew","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","itemMovedOrRetained","editScriptIndex","oldPosition","mapData","lastMappingResult","newMappingResultIndex","itemsForMoveCallbacks","indexObservable","newMappingResult","itemsToProcess","callCallback","items","editScriptItem","movedIndex","isFirstExecution","lastArray","x","lastMappingResultIndex","nodesToDelete","itemsForBeforeRemoveCallbacks","itemsForAfterAddCallbacks","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","ensureHasReferencedJQueryTemplates","jQueryTmplVersion","compiledTemplate","jQueryTemplateOptions","precompiled","koBindingContext","resultNodes","templateMarkup","open","close","jqueryTmplTemplateEngineInstance","_interopRequireDefault","__esModule","default","_scalejsEs","_scalejsEs2","Object","defineProperty","_scalejs","_scalejs2","sandbox","buildSandbox","merge","has","o","is","mix","receiver","supplier","len","clone","extension","path","props","success","valueOrDefault","_typeof","iterator","_scalejsBase","_scalejsBase2","webpackPolyfill","deprecate","paths","global","addMapEntry","map","pair","addSetEntry","add","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","indexOfNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseReduce","baseSortBy","comparer","sort","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","getValue","other","isHostObject","iteratorToArray","next","done","mapToArray","forEach","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","reHasComplexSymbol","reComplexSymbol","lastIndex","stringToArray","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","baseAt","isNil","baseClamp","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseCreate","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGt","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","nativeKeys","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","getAllKeysIn","baseProperty","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBaseWrapper","wrapper","fn","root","Ctor","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","charAt","trailing","createCompounder","words","deburr","reApos","thisBinding","createCurryWrapper","arity","getHolder","createRecurryWrapper","createHybridWrapper","createFind","findIndexFunc","createFlow","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","createOver","arrayFunc","isFlattenableIteratee","createPadding","chars","charsLength","createPartialWrapper","createRange","toNumber","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","precision","createToPairs","mapTag","setTag","createWrapper","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","arrayBufferTag","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","nativeGetPrototype","getOwnPropertySymbols","objectToString","transforms","hasPath","hasFunc","isLength","isString","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","pairs","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","sample","sampleSize","rand","shuffle","some","now","before","curry","curryRight","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","flush","debounced","isInvoking","flip","resolver","memoized","Cache","negate","once","otherArgs","spread","unary","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","toFinite","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","create","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","transform","unset","updateWith","valuesIn","clamp","inRange","floating","temp","freeParseFloat","capitalize","upperFirst","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","nativeSplit","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","toUpper","toUpperCase","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","prefix","idCounter","maxBy","mean","meanBy","minBy","sum","sumBy","defaults","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","enumerate","ceil","floor","getPrototypeOf","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","thisGlobal","__WEBPACK_LOCAL_MODULE_0__","__WEBPACK_LOCAL_MODULE_1__","__WEBPACK_LOCAL_MODULE_2__","__WEBPACK_LOCAL_MODULE_3__","__WEBPACK_LOCAL_MODULE_4__","__WEBPACK_LOCAL_MODULE_5__","__WEBPACK_LOCAL_MODULE_6__","dummyDiv","isMinified","subscribableName","addNodeName","dummySubscribable","classBindingsProvider","existingProvider","loggedBindings","attribute","virtualAttribute","fallback","bindingRouter","classPath","bindingObject","registerBindings","newBindings","getBindingsFunction","getAccessors","bindingAccessor","classes","$data","log","classBindingProvider","core","registerTemplates","templatesHtml","WinJS","Utilities","setInnerHTMLUnsafe","templates","getRegisteredTemplates","makeTemplateSource","Element","unwrap","opts","ensureIsSelectedExists","isSelectedPath","selectedItem","selectionPolicy","unwrapped","ClassBindingProvider","htmlTemplateSource","selectableArray","koUtils","toJson","toObject","toViewModel","mappings","knockoutStyleMappings","k","fromJS","dataBinding","dataClass","viewmodel","getElement","opening_comment","closing_comment","parentElement","el","doNotRender","scalejs-shell","render","warn","mvvm","allBindingsAccessor","bindPropertyChangeHandler","h","currentValue","subscribeChangeHandler","changeHandler","changeBinding","renderBinding","change","registerExtension","load","req","onLoad","isBuild","views","typeOf","t","typeOfType","internalClass","undef","v","_toConsumableArray","arr","arr2","from","_modules","_modules2","_knockout","registerModules","run","main","walkGetTypes","types","resolveModule","moduleType","require","loadMetadata","md","_lodash2","metadataFactory","getRegisteredTypes","console","metadata","counter","endpoint","_main","_main2","_lodash","_mainModule","_mainModule2","_templateModule","_templateModule2","_templateViewModel","_templateViewModel2","_template","_template2","registerViewModels","createViewModels","_knockout2","mappedChildNodes","_jquery2","ajax","results","_error","_jquery","rendered","mappedNode","viewModels","defaultViewModel","userservice","role","metadataContext","noticeboard","dictionary","identifiers","vm","createTemplate","contextViewModel","newContextProps","useDefault","newViewModels","registerIdentifiers","ids","_metadataFactory","_metadataFactory2","","disposeMetadata","prevMetadata","metadataTemplate","w","noGlobal","jQuery","isWindow","winnow","elements","qualifier","not","grep","risSimple","sibling","cur","createOptions","rnotwhite","flag","completed","removeEventListener","ready","Data","expando","dataAttr","rmultiDash","rbrace","parseJSON","dataUser","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","css","unit","cssNumber","initialInUnit","rcssNum","ret","querySelectorAll","setGlobalEval","refElements","dataPriv","buildFragment","scripts","ignored","tmp","fragment","rhtml","rtagName","wrapMap","_default","htmlPrefilter","inArray","rscriptType","returnTrue","returnFalse","safeActiveElement","err","on","selector","one","origFn","off","guid","manipulationTarget","disableScript","restoreScript","rscriptTypeMasked","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","fixInput","rcheckableType","domManip","hasScripts","doc","iNoClone","support","checkClone","rchecked","_evalUrl","globalEval","rcleanScript","keepData","cleanData","actualDisplay","appendTo","detach","defaultDisplay","elemdisplay","iframe","contentDocument","curCSS","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","cssPrefixes","setPositiveNumber","augmentWidthOrHeight","extra","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","boxSizingReliable","showHide","show","hidden","isHidden","Tween","easing","createFxNow","fxNow","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","hooks","oldfire","checkDisplay","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","hide","propFilter","specialEasing","cssHooks","expand","stopped","prefilters","Deferred","tick","currentTime","startTime","duration","percent","tweens","notifyWith","resolveWith","promise","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","fx","timer","progress","complete","fail","getClass","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspect","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","conv","prev","responseFields","dataFilter","buildParams","traditional","rbracket","getWindow","defaultView","class2type","hasOwn","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","jquery","num","pushStack","prevObject","copyIsArray","isReady","msg","isNumeric","realStringObj","code","indirect","second","callbackInverse","callbackExpect","arg","Sizzle","seed","nid","nidselect","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rescape","tokenize","ridentifier","toSelector","rsibling","testContext","qsaError","createCache","Expr","cacheLength","markFunction","assert","addHandle","attrHandle","siblingCheck","sourceIndex","MAX_NEGATIVE","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","addCombinator","matcher","combinator","base","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","pseudos","rwhitespace","rcomma","rcombinators","rattributeQuotes","rpseudo","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","fromCharCode","unloadHandler","els","hasCompare","top","getById","getElementsByName","attrId","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","duplicates","detectDuplicates","sortStable","selectors","createPseudo"," ","+","~","excess","unquoted","nodeNameSelector","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","matched","innerText","lang","elemLang","location","hasFocus","href","tabIndex","enabled","header","button","even","odd","radio","checkbox","file","password","image","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","div1","unique","isXMLDoc","until","siblings","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","targets","closest","pos","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","Callbacks","firing","memory","fired","locked","firingIndex","stopOnFalse","disable","lock","fireWith","tuples","then","fns","newDefer","tuple","returned","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","triggerHandler","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","writable","configurable","stored","camel","removeData","_data","_removeData","camelKey","dequeue","startLength","clearQueue","pnum","col","colgroup","caption","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","handleObj","special","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","sel","fixHooks","keyHooks","original","charCode","keyCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","clientTop","originalEvent","fixHook","Event","noBubble","trigger","beforeunload","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","append","replaceWith","replaceChild","prependTo","replaceAll","insert","HTML","BODY","opener","getComputedStyle","swap","old","computeStyleTests","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","orphans","widows","zIndex","cssProps","float","origName","getBoundingClientRect","margin","padding","border","suffix","expanded","parts","propHooks","eased","linear","swing","cos","PI","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","rclass","addClass","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","hasClass","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","lastModified","etag","isLocal","protocol","processData","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","ajaxPrefilter","ajaxTransport","nativeStatusText","headers","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","abort","finalText","crossDomain","host","param","hasContent","beforeSend","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","visible","getClientRects","r20","rCRLF","rsubmitterTypes","rsubmittable","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","1223","xhrSupported","cors","username","xhrFields","onload","onerror","onabort","responseType","responseText","binary","text script","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","defaultExtra","unbind","undelegate","andSelf","_jQuery","_$","$","unionArrays","res","extendObject","destination","destType","getType","bothArrays","obj1","obj2","merged","fillOptions","rawOptions","otherOptions","recognizedRootProperties","mergeArrays","include","defaultOptions","mappedProperties","copiedProperties","withProxyDependentObservable","dependentObservables","localDO","realDeferEvaluation","deferEvaluation","isRemoved","DO","realKoDependentObservable","isWriteable","_wrapper","__DO","realDependentObservable","updateViewModel","mappedRootObject","parentName","parentPropertyName","mappedParent","isMapped","previousMapping","mappingProperty","hasCreateCallback","createCallback","skip","emptyReturn","hasUpdateCallback","updateCallback","alreadyMapped","hasKeyCallback","keyCallback","mappedRemove","mappedRemoveAll","arrayOfKeys","filterArrayByKey","mappedDestroy","mappedDestroyAll","mappedIndexOf","mappedGet","mappedCreate","currentArrayKeys","newArrayKeys","ignoreIndexOf","unwrappedRootObject","itemsByKey","optimizedKeys","newContents","passedOver","mappedItem","fullPropertyName","getItemByKey","ignorableIndexOf","arrayChanged","prevMappedProperty","retval","hasCreateOrUpdateCallback","ignoreIndices","mapKey","getPropertyName","simpleObjectLookup","buckets","findBucket","bucketKey","bucket","mappingNesting","_defaultOptions","jsObject","fromJSON","argArray","updateFromJS","updateFromJSON","resetDefaultOptions","visitModel","isApplicationRunning","moduleRegistrations","createModule","moduleInstance","addOne","moduleInstances","createAll","startAll","debug","notifyApplicationStarted","stopAll","notifyApplicationStopped","exit","removeOne","found","f","_scalejsBase3","_scalejsBase4","_scalejsBase5","_scalejsBase6","_scalejsBase7","_scalejsBase8","level","outstring","IE","formatException","info","ext","buildCore","extensions","onApplicationEvent","listener","applicationEventListeners","_isApplicationRunning"],"mappings":"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,EAAAie,eACAje,EAAAke,gBACAle,EAAAujB,QACAvjB,EAAA80B,QACA90B,EAAA+0B,aACA/0B,EAAAme,aACAne,EAAAwnB,aACAxnB,EAAAynB,eACAznB,EAAAwyB,WACAxyB,EAAAqe,WACAre,EAAAqxB,gBACArxB,EAAAuxB,kBACAvxB,EAAAwxB,oBACAxxB,EAAA+zB,UACA/zB,EAAAg0B,YACAh0B,EAAAyyB,aACAzyB,EAAAtE,YACAsE,EAAA2yB,SACA3yB,EAAAzpB,QACAypB,EAAAoN,UACApN,EAAA7E,OACA6E,EAAA6nB,WACA7nB,EAAA8nB,aACA9nB,EAAA58B,WACA48B,EAAAitB,mBACAjtB,EAAA12B,WACA02B,EAAApG,SACAoG,EAAA8zB,aACA9zB,EAAA57B,UACA47B,EAAAg1B,YACAh1B,EAAAktB,SACAltB,EAAA2jB,UACA3jB,EAAAwtB,UACAxtB,EAAAk0B,QACAl0B,EAAA+nB,UACA/nB,EAAA4jB,QACA5jB,EAAAshB,WACAthB,EAAAi1B,QACAj1B,EAAAizB,YACAjzB,EAAAk1B,aACAl1B,EAAAm1B,YACAn1B,EAAAgkB,WACAhkB,EAAAmzB,gBACAnzB,EAAA4yB,aACA5yB,EAAA0uB,QACA1uB,EAAAgoB,UACAhoB,EAAA1lB,YACA0lB,EAAAytB,cACAztB,EAAAyxB,QACAzxB,EAAA0e,WACA1e,EAAA2e,aACA3e,EAAA4e,eACA5e,EAAA0xB,UACA1xB,EAAAz9B,SACAy9B,EAAAo1B,cACAp1B,EAAAozB,SACApzB,EAAAyhB,UACAzhB,EAAAjwB,UACAiwB,EAAA2U,QACA3U,EAAA5J,WACA4J,EAAA2hB,cACA3hB,EAAAv6B,OACAu6B,EAAAioB,WACAjoB,EAAA6hB,WACA7hB,EAAAr7B,SACAq7B,EAAA6yB,UACA7yB,EAAAof,cACApf,EAAAqf,gBACArf,EAAAroC,SACAqoC,EAAA8jB,UACA9jB,EAAAsf,QACAtf,EAAAuf,QACAvf,EAAAwf,aACAxf,EAAAyf,kBACAzf,EAAA0f,aACA1f,EAAAogB,OACApgB,EAAAptC,YACAotC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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t0:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".bundle.js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(30);\n\tmodule.exports = __webpack_require__(9);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {/*!\n\t * Knockout JavaScript library v3.4.0\n\t * (c) Steven Sanderson - http://knockoutjs.com/\n\t * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n\t */\n\t\n\t(function(){\n\tvar DEBUG=true;\n\t(function(undefined){\n\t    // (0, eval)('this') is a robust way of getting a reference to the global object\n\t    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n\t    var window = this || (0, eval)('this'),\n\t        document = window['document'],\n\t        navigator = window['navigator'],\n\t        jQueryInstance = window[\"jQuery\"],\n\t        JSON = window[\"JSON\"];\n\t(function(factory) {\n\t    // Support three module loading scenarios\n\t    if (\"function\" === 'function' && __webpack_require__(29)['amd']) {\n\t        // [1] AMD anonymous module\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (true) {\n\t        // [2] CommonJS/Node.js\n\t        factory(module['exports'] || exports);  // module.exports is for Node.js\n\t    } else {\n\t        // [3] No module loader (plain <script> tag) - put directly in global namespace\n\t        factory(window['ko'] = {});\n\t    }\n\t}(function(koExports, amdRequire){\n\t// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n\t// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\n\tvar ko = typeof koExports !== 'undefined' ? koExports : {};\n\t// Google Closure Compiler helpers (used only to make the minified file smaller)\n\tko.exportSymbol = function(koPath, object) {\n\t    var tokens = koPath.split(\".\");\n\t\n\t    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n\t    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n\t    var target = ko;\n\t\n\t    for (var i = 0; i < tokens.length - 1; i++)\n\t        target = target[tokens[i]];\n\t    target[tokens[tokens.length - 1]] = object;\n\t};\n\tko.exportProperty = function(owner, publicName, object) {\n\t    owner[publicName] = object;\n\t};\n\tko.version = \"3.4.0\";\n\t\n\tko.exportSymbol('version', ko.version);\n\t// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\n\tko.options = {\n\t    'deferUpdates': false,\n\t    'useOnlyNativeEvents': false\n\t};\n\t\n\t//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\n\tko.utils = (function () {\n\t    function objectForEach(obj, action) {\n\t        for (var prop in obj) {\n\t            if (obj.hasOwnProperty(prop)) {\n\t                action(prop, obj[prop]);\n\t            }\n\t        }\n\t    }\n\t\n\t    function extend(target, source) {\n\t        if (source) {\n\t            for(var prop in source) {\n\t                if(source.hasOwnProperty(prop)) {\n\t                    target[prop] = source[prop];\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    function setPrototypeOf(obj, proto) {\n\t        obj.__proto__ = proto;\n\t        return obj;\n\t    }\n\t\n\t    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n\t    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\t\n\t    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n\t    var knownEvents = {}, knownEventTypesByEventName = {};\n\t    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n\t    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n\t    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n\t    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n\t        if (knownEventsForType.length) {\n\t            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n\t                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n\t        }\n\t    });\n\t    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\t\n\t    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n\t    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n\t    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n\t    // If there is a future need to detect specific versions of IE10+, we will amend this.\n\t    var ieVersion = document && (function() {\n\t        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\t\n\t        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n\t        while (\n\t            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n\t            iElems[0]\n\t        ) {}\n\t        return version > 4 ? version : undefined;\n\t    }());\n\t    var isIe6 = ieVersion === 6,\n\t        isIe7 = ieVersion === 7;\n\t\n\t    function isClickOnCheckableElement(element, eventType) {\n\t        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n\t        if (eventType.toLowerCase() != \"click\") return false;\n\t        var inputType = element.type;\n\t        return (inputType == \"checkbox\") || (inputType == \"radio\");\n\t    }\n\t\n\t    // For details on the pattern for changing node classes\n\t    // see: https://github.com/knockout/knockout/issues/1597\n\t    var cssClassNameRegex = /\\S+/g;\n\t\n\t    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n\t        var addOrRemoveFn;\n\t        if (classNames) {\n\t            if (typeof node.classList === 'object') {\n\t                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n\t                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n\t                    addOrRemoveFn.call(node.classList, className);\n\t                });\n\t            } else if (typeof node.className['baseVal'] === 'string') {\n\t                // SVG tag .classNames is an SVGAnimatedString instance\n\t                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n\t            } else {\n\t                // node.className ought to be a string.\n\t                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n\t            }\n\t        }\n\t    }\n\t\n\t    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n\t        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n\t        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n\t        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n\t            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n\t        });\n\t        obj[prop] = currentClassNames.join(\" \");\n\t    }\n\t\n\t    return {\n\t        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\t\n\t        arrayForEach: function (array, action) {\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                action(array[i], i);\n\t        },\n\t\n\t        arrayIndexOf: function (array, item) {\n\t            if (typeof Array.prototype.indexOf == \"function\")\n\t                return Array.prototype.indexOf.call(array, item);\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                if (array[i] === item)\n\t                    return i;\n\t            return -1;\n\t        },\n\t\n\t        arrayFirst: function (array, predicate, predicateOwner) {\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                if (predicate.call(predicateOwner, array[i], i))\n\t                    return array[i];\n\t            return null;\n\t        },\n\t\n\t        arrayRemoveItem: function (array, itemToRemove) {\n\t            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n\t            if (index > 0) {\n\t                array.splice(index, 1);\n\t            }\n\t            else if (index === 0) {\n\t                array.shift();\n\t            }\n\t        },\n\t\n\t        arrayGetDistinctValues: function (array) {\n\t            array = array || [];\n\t            var result = [];\n\t            for (var i = 0, j = array.length; i < j; i++) {\n\t                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n\t                    result.push(array[i]);\n\t            }\n\t            return result;\n\t        },\n\t\n\t        arrayMap: function (array, mapping) {\n\t            array = array || [];\n\t            var result = [];\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                result.push(mapping(array[i], i));\n\t            return result;\n\t        },\n\t\n\t        arrayFilter: function (array, predicate) {\n\t            array = array || [];\n\t            var result = [];\n\t            for (var i = 0, j = array.length; i < j; i++)\n\t                if (predicate(array[i], i))\n\t                    result.push(array[i]);\n\t            return result;\n\t        },\n\t\n\t        arrayPushAll: function (array, valuesToPush) {\n\t            if (valuesToPush instanceof Array)\n\t                array.push.apply(array, valuesToPush);\n\t            else\n\t                for (var i = 0, j = valuesToPush.length; i < j; i++)\n\t                    array.push(valuesToPush[i]);\n\t            return array;\n\t        },\n\t\n\t        addOrRemoveItem: function(array, value, included) {\n\t            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n\t            if (existingEntryIndex < 0) {\n\t                if (included)\n\t                    array.push(value);\n\t            } else {\n\t                if (!included)\n\t                    array.splice(existingEntryIndex, 1);\n\t            }\n\t        },\n\t\n\t        canSetPrototype: canSetPrototype,\n\t\n\t        extend: extend,\n\t\n\t        setPrototypeOf: setPrototypeOf,\n\t\n\t        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\t\n\t        objectForEach: objectForEach,\n\t\n\t        objectMap: function(source, mapping) {\n\t            if (!source)\n\t                return source;\n\t            var target = {};\n\t            for (var prop in source) {\n\t                if (source.hasOwnProperty(prop)) {\n\t                    target[prop] = mapping(source[prop], prop, source);\n\t                }\n\t            }\n\t            return target;\n\t        },\n\t\n\t        emptyDomNode: function (domNode) {\n\t            while (domNode.firstChild) {\n\t                ko.removeNode(domNode.firstChild);\n\t            }\n\t        },\n\t\n\t        moveCleanedNodesToContainerElement: function(nodes) {\n\t            // Ensure it's a real array, as we're about to reparent the nodes and\n\t            // we don't want the underlying collection to change while we're doing that.\n\t            var nodesArray = ko.utils.makeArray(nodes);\n\t            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\t\n\t            var container = templateDocument.createElement('div');\n\t            for (var i = 0, j = nodesArray.length; i < j; i++) {\n\t                container.appendChild(ko.cleanNode(nodesArray[i]));\n\t            }\n\t            return container;\n\t        },\n\t\n\t        cloneNodes: function (nodesArray, shouldCleanNodes) {\n\t            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n\t                var clonedNode = nodesArray[i].cloneNode(true);\n\t                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n\t            }\n\t            return newNodesArray;\n\t        },\n\t\n\t        setDomNodeChildren: function (domNode, childNodes) {\n\t            ko.utils.emptyDomNode(domNode);\n\t            if (childNodes) {\n\t                for (var i = 0, j = childNodes.length; i < j; i++)\n\t                    domNode.appendChild(childNodes[i]);\n\t            }\n\t        },\n\t\n\t        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n\t            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n\t            if (nodesToReplaceArray.length > 0) {\n\t                var insertionPoint = nodesToReplaceArray[0];\n\t                var parent = insertionPoint.parentNode;\n\t                for (var i = 0, j = newNodesArray.length; i < j; i++)\n\t                    parent.insertBefore(newNodesArray[i], insertionPoint);\n\t                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n\t                    ko.removeNode(nodesToReplaceArray[i]);\n\t                }\n\t            }\n\t        },\n\t\n\t        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n\t            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n\t            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n\t            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n\t            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n\t            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n\t            //\n\t            // Rules:\n\t            //   [A] Any leading nodes that have been removed should be ignored\n\t            //       These most likely correspond to memoization nodes that were already removed during binding\n\t            //       See https://github.com/knockout/knockout/pull/440\n\t            //   [B] Any trailing nodes that have been remove should be ignored\n\t            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n\t            //       See https://github.com/knockout/knockout/pull/1903\n\t            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n\t            //       and include any nodes that have been inserted among the previous collection\n\t\n\t            if (continuousNodeArray.length) {\n\t                // The parent node can be a virtual element; so get the real parent node\n\t                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\t\n\t                // Rule [A]\n\t                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n\t                    continuousNodeArray.splice(0, 1);\n\t\n\t                // Rule [B]\n\t                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n\t                    continuousNodeArray.length--;\n\t\n\t                // Rule [C]\n\t                if (continuousNodeArray.length > 1) {\n\t                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n\t                    // Replace with the actual new continuous node set\n\t                    continuousNodeArray.length = 0;\n\t                    while (current !== last) {\n\t                        continuousNodeArray.push(current);\n\t                        current = current.nextSibling;\n\t                    }\n\t                    continuousNodeArray.push(last);\n\t                }\n\t            }\n\t            return continuousNodeArray;\n\t        },\n\t\n\t        setOptionNodeSelectionState: function (optionNode, isSelected) {\n\t            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n\t            if (ieVersion < 7)\n\t                optionNode.setAttribute(\"selected\", isSelected);\n\t            else\n\t                optionNode.selected = isSelected;\n\t        },\n\t\n\t        stringTrim: function (string) {\n\t            return string === null || string === undefined ? '' :\n\t                string.trim ?\n\t                    string.trim() :\n\t                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n\t        },\n\t\n\t        stringStartsWith: function (string, startsWith) {\n\t            string = string || \"\";\n\t            if (startsWith.length > string.length)\n\t                return false;\n\t            return string.substring(0, startsWith.length) === startsWith;\n\t        },\n\t\n\t        domNodeIsContainedBy: function (node, containedByNode) {\n\t            if (node === containedByNode)\n\t                return true;\n\t            if (node.nodeType === 11)\n\t                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n\t            if (containedByNode.contains)\n\t                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n\t            if (containedByNode.compareDocumentPosition)\n\t                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n\t            while (node && node != containedByNode) {\n\t                node = node.parentNode;\n\t            }\n\t            return !!node;\n\t        },\n\t\n\t        domNodeIsAttachedToDocument: function (node) {\n\t            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n\t        },\n\t\n\t        anyDomNodeIsAttachedToDocument: function(nodes) {\n\t            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n\t        },\n\t\n\t        tagNameLower: function(element) {\n\t            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n\t            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n\t            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n\t            return element && element.tagName && element.tagName.toLowerCase();\n\t        },\n\t\n\t        catchFunctionErrors: function (delegate) {\n\t            return ko['onError'] ? function () {\n\t                try {\n\t                    return delegate.apply(this, arguments);\n\t                } catch (e) {\n\t                    ko['onError'] && ko['onError'](e);\n\t                    throw e;\n\t                }\n\t            } : delegate;\n\t        },\n\t\n\t        setTimeout: function (handler, timeout) {\n\t            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n\t        },\n\t\n\t        deferError: function (error) {\n\t            setTimeout(function () {\n\t                ko['onError'] && ko['onError'](error);\n\t                throw error;\n\t            }, 0);\n\t        },\n\t\n\t        registerEventHandler: function (element, eventType, handler) {\n\t            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\t\n\t            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n\t            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n\t                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n\t            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n\t                element.addEventListener(eventType, wrappedHandler, false);\n\t            else if (typeof element.attachEvent != \"undefined\") {\n\t                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n\t                    attachEventName = \"on\" + eventType;\n\t                element.attachEvent(attachEventName, attachEventHandler);\n\t\n\t                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n\t                // so to avoid leaks, we have to remove them manually. See bug #856\n\t                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n\t                    element.detachEvent(attachEventName, attachEventHandler);\n\t                });\n\t            } else\n\t                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n\t        },\n\t\n\t        triggerEvent: function (element, eventType) {\n\t            if (!(element && element.nodeType))\n\t                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\t\n\t            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n\t            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n\t            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n\t            // In both cases, we'll use the click method instead.\n\t            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\t\n\t            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n\t                jQueryInstance(element)['trigger'](eventType);\n\t            } else if (typeof document.createEvent == \"function\") {\n\t                if (typeof element.dispatchEvent == \"function\") {\n\t                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n\t                    var event = document.createEvent(eventCategory);\n\t                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n\t                    element.dispatchEvent(event);\n\t                }\n\t                else\n\t                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n\t            } else if (useClickWorkaround && element.click) {\n\t                element.click();\n\t            } else if (typeof element.fireEvent != \"undefined\") {\n\t                element.fireEvent(\"on\" + eventType);\n\t            } else {\n\t                throw new Error(\"Browser doesn't support triggering events\");\n\t            }\n\t        },\n\t\n\t        unwrapObservable: function (value) {\n\t            return ko.isObservable(value) ? value() : value;\n\t        },\n\t\n\t        peekObservable: function (value) {\n\t            return ko.isObservable(value) ? value.peek() : value;\n\t        },\n\t\n\t        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\t\n\t        setTextContent: function(element, textContent) {\n\t            var value = ko.utils.unwrapObservable(textContent);\n\t            if ((value === null) || (value === undefined))\n\t                value = \"\";\n\t\n\t            // We need there to be exactly one child: a text node.\n\t            // If there are no children, more than one, or if it's not a text node,\n\t            // we'll clear everything and create a single text node.\n\t            var innerTextNode = ko.virtualElements.firstChild(element);\n\t            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n\t                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n\t            } else {\n\t                innerTextNode.data = value;\n\t            }\n\t\n\t            ko.utils.forceRefresh(element);\n\t        },\n\t\n\t        setElementName: function(element, name) {\n\t            element.name = name;\n\t\n\t            // Workaround IE 6/7 issue\n\t            // - https://github.com/SteveSanderson/knockout/issues/197\n\t            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n\t            if (ieVersion <= 7) {\n\t                try {\n\t                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n\t                }\n\t                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n\t            }\n\t        },\n\t\n\t        forceRefresh: function(node) {\n\t            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n\t            if (ieVersion >= 9) {\n\t                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n\t                var elem = node.nodeType == 1 ? node : node.parentNode;\n\t                if (elem.style)\n\t                    elem.style.zoom = elem.style.zoom;\n\t            }\n\t        },\n\t\n\t        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n\t            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n\t            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n\t            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n\t            if (ieVersion) {\n\t                var originalWidth = selectElement.style.width;\n\t                selectElement.style.width = 0;\n\t                selectElement.style.width = originalWidth;\n\t            }\n\t        },\n\t\n\t        range: function (min, max) {\n\t            min = ko.utils.unwrapObservable(min);\n\t            max = ko.utils.unwrapObservable(max);\n\t            var result = [];\n\t            for (var i = min; i <= max; i++)\n\t                result.push(i);\n\t            return result;\n\t        },\n\t\n\t        makeArray: function(arrayLikeObject) {\n\t            var result = [];\n\t            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n\t                result.push(arrayLikeObject[i]);\n\t            };\n\t            return result;\n\t        },\n\t\n\t        createSymbolOrString: function(identifier) {\n\t            return canUseSymbols ? Symbol(identifier) : identifier;\n\t        },\n\t\n\t        isIe6 : isIe6,\n\t        isIe7 : isIe7,\n\t        ieVersion : ieVersion,\n\t\n\t        getFormFields: function(form, fieldName) {\n\t            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n\t            var isMatchingField = (typeof fieldName == 'string')\n\t                ? function(field) { return field.name === fieldName }\n\t                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n\t            var matches = [];\n\t            for (var i = fields.length - 1; i >= 0; i--) {\n\t                if (isMatchingField(fields[i]))\n\t                    matches.push(fields[i]);\n\t            };\n\t            return matches;\n\t        },\n\t\n\t        parseJson: function (jsonString) {\n\t            if (typeof jsonString == \"string\") {\n\t                jsonString = ko.utils.stringTrim(jsonString);\n\t                if (jsonString) {\n\t                    if (JSON && JSON.parse) // Use native parsing where available\n\t                        return JSON.parse(jsonString);\n\t                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n\t                }\n\t            }\n\t            return null;\n\t        },\n\t\n\t        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n\t            if (!JSON || !JSON.stringify)\n\t                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n\t            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n\t        },\n\t\n\t        postJson: function (urlOrForm, data, options) {\n\t            options = options || {};\n\t            var params = options['params'] || {};\n\t            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n\t            var url = urlOrForm;\n\t\n\t            // If we were given a form, use its 'action' URL and pick out any requested field values\n\t            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n\t                var originalForm = urlOrForm;\n\t                url = originalForm.action;\n\t                for (var i = includeFields.length - 1; i >= 0; i--) {\n\t                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n\t                    for (var j = fields.length - 1; j >= 0; j--)\n\t                        params[fields[j].name] = fields[j].value;\n\t                }\n\t            }\n\t\n\t            data = ko.utils.unwrapObservable(data);\n\t            var form = document.createElement(\"form\");\n\t            form.style.display = \"none\";\n\t            form.action = url;\n\t            form.method = \"post\";\n\t            for (var key in data) {\n\t                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n\t                var input = document.createElement(\"input\");\n\t                input.type = \"hidden\";\n\t                input.name = key;\n\t                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n\t                form.appendChild(input);\n\t            }\n\t            objectForEach(params, function(key, value) {\n\t                var input = document.createElement(\"input\");\n\t                input.type = \"hidden\";\n\t                input.name = key;\n\t                input.value = value;\n\t                form.appendChild(input);\n\t            });\n\t            document.body.appendChild(form);\n\t            options['submitter'] ? options['submitter'](form) : form.submit();\n\t            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n\t        }\n\t    }\n\t}());\n\t\n\tko.exportSymbol('utils', ko.utils);\n\tko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\n\tko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\n\tko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\n\tko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\n\tko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\n\tko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\n\tko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\n\tko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\n\tko.exportSymbol('utils.extend', ko.utils.extend);\n\tko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\n\tko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\n\tko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\n\tko.exportSymbol('utils.postJson', ko.utils.postJson);\n\tko.exportSymbol('utils.parseJson', ko.utils.parseJson);\n\tko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\n\tko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\n\tko.exportSymbol('utils.range', ko.utils.range);\n\tko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\n\tko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\n\tko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\n\tko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\n\tko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\n\tko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\n\tko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\t\n\tif (!Function.prototype['bind']) {\n\t    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n\t    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n\t    Function.prototype['bind'] = function (object) {\n\t        var originalFunction = this;\n\t        if (arguments.length === 1) {\n\t            return function () {\n\t                return originalFunction.apply(object, arguments);\n\t            };\n\t        } else {\n\t            var partialArgs = Array.prototype.slice.call(arguments, 1);\n\t            return function () {\n\t                var args = partialArgs.slice(0);\n\t                args.push.apply(args, arguments);\n\t                return originalFunction.apply(object, args);\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\tko.utils.domData = new (function () {\n\t    var uniqueId = 0;\n\t    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n\t    var dataStore = {};\n\t\n\t    function getAll(node, createIfNotFound) {\n\t        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n\t        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n\t        if (!hasExistingDataStore) {\n\t            if (!createIfNotFound)\n\t                return undefined;\n\t            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n\t            dataStore[dataStoreKey] = {};\n\t        }\n\t        return dataStore[dataStoreKey];\n\t    }\n\t\n\t    return {\n\t        get: function (node, key) {\n\t            var allDataForNode = getAll(node, false);\n\t            return allDataForNode === undefined ? undefined : allDataForNode[key];\n\t        },\n\t        set: function (node, key, value) {\n\t            if (value === undefined) {\n\t                // Make sure we don't actually create a new domData key if we are actually deleting a value\n\t                if (getAll(node, false) === undefined)\n\t                    return;\n\t            }\n\t            var allDataForNode = getAll(node, true);\n\t            allDataForNode[key] = value;\n\t        },\n\t        clear: function (node) {\n\t            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n\t            if (dataStoreKey) {\n\t                delete dataStore[dataStoreKey];\n\t                node[dataStoreKeyExpandoPropertyName] = null;\n\t                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n\t            }\n\t            return false;\n\t        },\n\t\n\t        nextKey: function () {\n\t            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('utils.domData', ko.utils.domData);\n\tko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\t\n\tko.utils.domNodeDisposal = new (function () {\n\t    var domDataKey = ko.utils.domData.nextKey();\n\t    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n\t    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\t\n\t    function getDisposeCallbacksCollection(node, createIfNotFound) {\n\t        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n\t        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n\t            allDisposeCallbacks = [];\n\t            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n\t        }\n\t        return allDisposeCallbacks;\n\t    }\n\t    function destroyCallbacksCollection(node) {\n\t        ko.utils.domData.set(node, domDataKey, undefined);\n\t    }\n\t\n\t    function cleanSingleNode(node) {\n\t        // Run all the dispose callbacks\n\t        var callbacks = getDisposeCallbacksCollection(node, false);\n\t        if (callbacks) {\n\t            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n\t            for (var i = 0; i < callbacks.length; i++)\n\t                callbacks[i](node);\n\t        }\n\t\n\t        // Erase the DOM data\n\t        ko.utils.domData.clear(node);\n\t\n\t        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n\t        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\t\n\t        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n\t        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n\t        if (cleanableNodeTypesWithDescendants[node.nodeType])\n\t            cleanImmediateCommentTypeChildren(node);\n\t    }\n\t\n\t    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n\t        var child, nextChild = nodeWithChildren.firstChild;\n\t        while (child = nextChild) {\n\t            nextChild = child.nextSibling;\n\t            if (child.nodeType === 8)\n\t                cleanSingleNode(child);\n\t        }\n\t    }\n\t\n\t    return {\n\t        addDisposeCallback : function(node, callback) {\n\t            if (typeof callback != \"function\")\n\t                throw new Error(\"Callback must be a function\");\n\t            getDisposeCallbacksCollection(node, true).push(callback);\n\t        },\n\t\n\t        removeDisposeCallback : function(node, callback) {\n\t            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n\t            if (callbacksCollection) {\n\t                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n\t                if (callbacksCollection.length == 0)\n\t                    destroyCallbacksCollection(node);\n\t            }\n\t        },\n\t\n\t        cleanNode : function(node) {\n\t            // First clean this node, where applicable\n\t            if (cleanableNodeTypes[node.nodeType]) {\n\t                cleanSingleNode(node);\n\t\n\t                // ... then its descendants, where applicable\n\t                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n\t                    // Clone the descendants list in case it changes during iteration\n\t                    var descendants = [];\n\t                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n\t                    for (var i = 0, j = descendants.length; i < j; i++)\n\t                        cleanSingleNode(descendants[i]);\n\t                }\n\t            }\n\t            return node;\n\t        },\n\t\n\t        removeNode : function(node) {\n\t            ko.cleanNode(node);\n\t            if (node.parentNode)\n\t                node.parentNode.removeChild(node);\n\t        },\n\t\n\t        \"cleanExternalData\" : function (node) {\n\t            // Special support for jQuery here because it's so commonly used.\n\t            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n\t            // so notify it to tear down any resources associated with the node & descendants here.\n\t            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n\t                jQueryInstance['cleanData']([node]);\n\t        }\n\t    };\n\t})();\n\tko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\n\tko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\n\tko.exportSymbol('cleanNode', ko.cleanNode);\n\tko.exportSymbol('removeNode', ko.removeNode);\n\tko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\n\tko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\n\tko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n\t(function () {\n\t    var none = [0, \"\", \"\"],\n\t        table = [1, \"<table>\", \"</table>\"],\n\t        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t        lookup = {\n\t            'thead': table,\n\t            'tbody': table,\n\t            'tfoot': table,\n\t            'tr': tbody,\n\t            'td': tr,\n\t            'th': tr,\n\t            'option': select,\n\t            'optgroup': select\n\t        },\n\t\n\t        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n\t        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\t\n\t    function getWrap(tags) {\n\t        var m = tags.match(/^<([a-z]+)[ >]/);\n\t        return (m && lookup[m[1]]) || none;\n\t    }\n\t\n\t    function simpleHtmlParse(html, documentContext) {\n\t        documentContext || (documentContext = document);\n\t        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\t\n\t        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n\t        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\t\n\t        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n\t        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n\t        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n\t        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\t\n\t        // Trim whitespace, otherwise indexOf won't work as expected\n\t        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n\t            wrap = getWrap(tags),\n\t            depth = wrap[0];\n\t\n\t        // Go to html and back, then peel off extra wrappers\n\t        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n\t        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n\t        if (typeof windowContext['innerShiv'] == \"function\") {\n\t            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n\t            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n\t            // somehow shims the native APIs so it just works anyway)\n\t            div.appendChild(windowContext['innerShiv'](markup));\n\t        } else {\n\t            if (mayRequireCreateElementHack) {\n\t                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n\t                // only works if we assign innerHTML on an element associated with that document.\n\t                documentContext.appendChild(div);\n\t            }\n\t\n\t            div.innerHTML = markup;\n\t\n\t            if (mayRequireCreateElementHack) {\n\t                div.parentNode.removeChild(div);\n\t            }\n\t        }\n\t\n\t        // Move to the right depth\n\t        while (depth--)\n\t            div = div.lastChild;\n\t\n\t        return ko.utils.makeArray(div.lastChild.childNodes);\n\t    }\n\t\n\t    function jQueryHtmlParse(html, documentContext) {\n\t        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n\t        if (jQueryInstance['parseHTML']) {\n\t            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n\t        } else {\n\t            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n\t            var elems = jQueryInstance['clean']([html], documentContext);\n\t\n\t            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n\t            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n\t            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n\t            if (elems && elems[0]) {\n\t                // Find the top-most parent element that's a direct child of a document fragment\n\t                var elem = elems[0];\n\t                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n\t                    elem = elem.parentNode;\n\t                // ... then detach it\n\t                if (elem.parentNode)\n\t                    elem.parentNode.removeChild(elem);\n\t            }\n\t\n\t            return elems;\n\t        }\n\t    }\n\t\n\t    ko.utils.parseHtmlFragment = function(html, documentContext) {\n\t        return jQueryInstance ?\n\t            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n\t            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n\t    };\n\t\n\t    ko.utils.setHtml = function(node, html) {\n\t        ko.utils.emptyDomNode(node);\n\t\n\t        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n\t        html = ko.utils.unwrapObservable(html);\n\t\n\t        if ((html !== null) && (html !== undefined)) {\n\t            if (typeof html != 'string')\n\t                html = html.toString();\n\t\n\t            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n\t            // for example <tr> elements which are not normally allowed to exist on their own.\n\t            // If you've referenced jQuery we'll use that rather than duplicating its code.\n\t            if (jQueryInstance) {\n\t                jQueryInstance(node)['html'](html);\n\t            } else {\n\t                // ... otherwise, use KO's own parsing logic.\n\t                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n\t                for (var i = 0; i < parsedNodes.length; i++)\n\t                    node.appendChild(parsedNodes[i]);\n\t            }\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\n\tko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\t\n\tko.memoization = (function () {\n\t    var memos = {};\n\t\n\t    function randomMax8HexChars() {\n\t        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n\t    }\n\t    function generateRandomId() {\n\t        return randomMax8HexChars() + randomMax8HexChars();\n\t    }\n\t    function findMemoNodes(rootNode, appendToArray) {\n\t        if (!rootNode)\n\t            return;\n\t        if (rootNode.nodeType == 8) {\n\t            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n\t            if (memoId != null)\n\t                appendToArray.push({ domNode: rootNode, memoId: memoId });\n\t        } else if (rootNode.nodeType == 1) {\n\t            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n\t                findMemoNodes(childNodes[i], appendToArray);\n\t        }\n\t    }\n\t\n\t    return {\n\t        memoize: function (callback) {\n\t            if (typeof callback != \"function\")\n\t                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n\t            var memoId = generateRandomId();\n\t            memos[memoId] = callback;\n\t            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n\t        },\n\t\n\t        unmemoize: function (memoId, callbackParams) {\n\t            var callback = memos[memoId];\n\t            if (callback === undefined)\n\t                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n\t            try {\n\t                callback.apply(null, callbackParams || []);\n\t                return true;\n\t            }\n\t            finally { delete memos[memoId]; }\n\t        },\n\t\n\t        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n\t            var memos = [];\n\t            findMemoNodes(domNode, memos);\n\t            for (var i = 0, j = memos.length; i < j; i++) {\n\t                var node = memos[i].domNode;\n\t                var combinedParams = [node];\n\t                if (extraCallbackParamsArray)\n\t                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n\t                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n\t                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n\t                if (node.parentNode)\n\t                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n\t            }\n\t        },\n\t\n\t        parseMemoText: function (memoText) {\n\t            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n\t            return match ? match[1] : null;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('memoization', ko.memoization);\n\tko.exportSymbol('memoization.memoize', ko.memoization.memoize);\n\tko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\n\tko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\n\tko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\n\tko.tasks = (function () {\n\t    var scheduler,\n\t        taskQueue = [],\n\t        taskQueueLength = 0,\n\t        nextHandle = 1,\n\t        nextIndexToProcess = 0;\n\t\n\t    if (window['MutationObserver']) {\n\t        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n\t        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n\t        scheduler = (function (callback) {\n\t            var div = document.createElement(\"div\");\n\t            new MutationObserver(callback).observe(div, {attributes: true});\n\t            return function () { div.classList.toggle(\"foo\"); };\n\t        })(scheduledProcess);\n\t    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n\t        // IE 6-10\n\t        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n\t        scheduler = function (callback) {\n\t            var script = document.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                script.onreadystatechange = null;\n\t                document.documentElement.removeChild(script);\n\t                script = null;\n\t                callback();\n\t            };\n\t            document.documentElement.appendChild(script);\n\t        };\n\t    } else {\n\t        scheduler = function (callback) {\n\t            setTimeout(callback, 0);\n\t        };\n\t    }\n\t\n\t    function processTasks() {\n\t        if (taskQueueLength) {\n\t            // Each mark represents the end of a logical group of tasks and the number of these groups is\n\t            // limited to prevent unchecked recursion.\n\t            var mark = taskQueueLength, countMarks = 0;\n\t\n\t            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n\t            for (var task; nextIndexToProcess < taskQueueLength; ) {\n\t                if (task = taskQueue[nextIndexToProcess++]) {\n\t                    if (nextIndexToProcess > mark) {\n\t                        if (++countMarks >= 5000) {\n\t                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n\t                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n\t                            break;\n\t                        }\n\t                        mark = taskQueueLength;\n\t                    }\n\t                    try {\n\t                        task();\n\t                    } catch (ex) {\n\t                        ko.utils.deferError(ex);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function scheduledProcess() {\n\t        processTasks();\n\t\n\t        // Reset the queue\n\t        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n\t    }\n\t\n\t    function scheduleTaskProcessing() {\n\t        ko.tasks['scheduler'](scheduledProcess);\n\t    }\n\t\n\t    var tasks = {\n\t        'scheduler': scheduler,     // Allow overriding the scheduler\n\t\n\t        schedule: function (func) {\n\t            if (!taskQueueLength) {\n\t                scheduleTaskProcessing();\n\t            }\n\t\n\t            taskQueue[taskQueueLength++] = func;\n\t            return nextHandle++;\n\t        },\n\t\n\t        cancel: function (handle) {\n\t            var index = handle - (nextHandle - taskQueueLength);\n\t            if (index >= nextIndexToProcess && index < taskQueueLength) {\n\t                taskQueue[index] = null;\n\t            }\n\t        },\n\t\n\t        // For testing only: reset the queue and return the previous queue length\n\t        'resetForTesting': function () {\n\t            var length = taskQueueLength - nextIndexToProcess;\n\t            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n\t            return length;\n\t        },\n\t\n\t        runEarly: processTasks\n\t    };\n\t\n\t    return tasks;\n\t})();\n\t\n\tko.exportSymbol('tasks', ko.tasks);\n\tko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n\t//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\n\tko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\n\tko.extenders = {\n\t    'throttle': function(target, timeout) {\n\t        // Throttling means two things:\n\t\n\t        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n\t        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n\t        target['throttleEvaluation'] = timeout;\n\t\n\t        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n\t        //     so the target cannot change value synchronously or faster than a certain rate\n\t        var writeTimeoutInstance = null;\n\t        return ko.dependentObservable({\n\t            'read': target,\n\t            'write': function(value) {\n\t                clearTimeout(writeTimeoutInstance);\n\t                writeTimeoutInstance = ko.utils.setTimeout(function() {\n\t                    target(value);\n\t                }, timeout);\n\t            }\n\t        });\n\t    },\n\t\n\t    'rateLimit': function(target, options) {\n\t        var timeout, method, limitFunction;\n\t\n\t        if (typeof options == 'number') {\n\t            timeout = options;\n\t        } else {\n\t            timeout = options['timeout'];\n\t            method = options['method'];\n\t        }\n\t\n\t        // rateLimit supersedes deferred updates\n\t        target._deferUpdates = false;\n\t\n\t        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n\t        target.limit(function(callback) {\n\t            return limitFunction(callback, timeout);\n\t        });\n\t    },\n\t\n\t    'deferred': function(target, options) {\n\t        if (options !== true) {\n\t            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n\t        }\n\t\n\t        if (!target._deferUpdates) {\n\t            target._deferUpdates = true;\n\t            target.limit(function (callback) {\n\t                var handle;\n\t                return function () {\n\t                    ko.tasks.cancel(handle);\n\t                    handle = ko.tasks.schedule(callback);\n\t                    target['notifySubscribers'](undefined, 'dirty');\n\t                };\n\t            });\n\t        }\n\t    },\n\t\n\t    'notify': function(target, notifyWhen) {\n\t        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n\t            null :  // null equalityComparer means to always notify\n\t            valuesArePrimitiveAndEqual;\n\t    }\n\t};\n\t\n\tvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\n\tfunction valuesArePrimitiveAndEqual(a, b) {\n\t    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n\t    return oldValueIsPrimitive ? (a === b) : false;\n\t}\n\t\n\tfunction throttle(callback, timeout) {\n\t    var timeoutInstance;\n\t    return function () {\n\t        if (!timeoutInstance) {\n\t            timeoutInstance = ko.utils.setTimeout(function () {\n\t                timeoutInstance = undefined;\n\t                callback();\n\t            }, timeout);\n\t        }\n\t    };\n\t}\n\t\n\tfunction debounce(callback, timeout) {\n\t    var timeoutInstance;\n\t    return function () {\n\t        clearTimeout(timeoutInstance);\n\t        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n\t    };\n\t}\n\t\n\tfunction applyExtenders(requestedExtenders) {\n\t    var target = this;\n\t    if (requestedExtenders) {\n\t        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n\t            var extenderHandler = ko.extenders[key];\n\t            if (typeof extenderHandler == 'function') {\n\t                target = extenderHandler(target, value) || target;\n\t            }\n\t        });\n\t    }\n\t    return target;\n\t}\n\t\n\tko.exportSymbol('extenders', ko.extenders);\n\t\n\tko.subscription = function (target, callback, disposeCallback) {\n\t    this._target = target;\n\t    this.callback = callback;\n\t    this.disposeCallback = disposeCallback;\n\t    this.isDisposed = false;\n\t    ko.exportProperty(this, 'dispose', this.dispose);\n\t};\n\tko.subscription.prototype.dispose = function () {\n\t    this.isDisposed = true;\n\t    this.disposeCallback();\n\t};\n\t\n\tko.subscribable = function () {\n\t    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n\t    ko_subscribable_fn.init(this);\n\t}\n\t\n\tvar defaultEvent = \"change\";\n\t\n\t// Moved out of \"limit\" to avoid the extra closure\n\tfunction limitNotifySubscribers(value, event) {\n\t    if (!event || event === defaultEvent) {\n\t        this._limitChange(value);\n\t    } else if (event === 'beforeChange') {\n\t        this._limitBeforeChange(value);\n\t    } else {\n\t        this._origNotifySubscribers(value, event);\n\t    }\n\t}\n\t\n\tvar ko_subscribable_fn = {\n\t    init: function(instance) {\n\t        instance._subscriptions = {};\n\t        instance._versionNumber = 1;\n\t    },\n\t\n\t    subscribe: function (callback, callbackTarget, event) {\n\t        var self = this;\n\t\n\t        event = event || defaultEvent;\n\t        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\t\n\t        var subscription = new ko.subscription(self, boundCallback, function () {\n\t            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n\t            if (self.afterSubscriptionRemove)\n\t                self.afterSubscriptionRemove(event);\n\t        });\n\t\n\t        if (self.beforeSubscriptionAdd)\n\t            self.beforeSubscriptionAdd(event);\n\t\n\t        if (!self._subscriptions[event])\n\t            self._subscriptions[event] = [];\n\t        self._subscriptions[event].push(subscription);\n\t\n\t        return subscription;\n\t    },\n\t\n\t    \"notifySubscribers\": function (valueToNotify, event) {\n\t        event = event || defaultEvent;\n\t        if (event === defaultEvent) {\n\t            this.updateVersion();\n\t        }\n\t        if (this.hasSubscriptionsForEvent(event)) {\n\t            try {\n\t                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n\t                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n\t                    // In case a subscription was disposed during the arrayForEach cycle, check\n\t                    // for isDisposed on each subscription before invoking its callback\n\t                    if (!subscription.isDisposed)\n\t                        subscription.callback(valueToNotify);\n\t                }\n\t            } finally {\n\t                ko.dependencyDetection.end(); // End suppressing dependency detection\n\t            }\n\t        }\n\t    },\n\t\n\t    getVersion: function () {\n\t        return this._versionNumber;\n\t    },\n\t\n\t    hasChanged: function (versionToCheck) {\n\t        return this.getVersion() !== versionToCheck;\n\t    },\n\t\n\t    updateVersion: function () {\n\t        ++this._versionNumber;\n\t    },\n\t\n\t    limit: function(limitFunction) {\n\t        var self = this, selfIsObservable = ko.isObservable(self),\n\t            ignoreBeforeChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\t\n\t        if (!self._origNotifySubscribers) {\n\t            self._origNotifySubscribers = self[\"notifySubscribers\"];\n\t            self[\"notifySubscribers\"] = limitNotifySubscribers;\n\t        }\n\t\n\t        var finish = limitFunction(function() {\n\t            self._notificationIsPending = false;\n\t\n\t            // If an observable provided a reference to itself, access it to get the latest value.\n\t            // This allows computed observables to delay calculating their value until needed.\n\t            if (selfIsObservable && pendingValue === self) {\n\t                pendingValue = self();\n\t            }\n\t            ignoreBeforeChange = false;\n\t            if (self.isDifferent(previousValue, pendingValue)) {\n\t                self._origNotifySubscribers(previousValue = pendingValue);\n\t            }\n\t        });\n\t\n\t        self._limitChange = function(value) {\n\t            self._notificationIsPending = ignoreBeforeChange = true;\n\t            pendingValue = value;\n\t            finish();\n\t        };\n\t        self._limitBeforeChange = function(value) {\n\t            if (!ignoreBeforeChange) {\n\t                previousValue = value;\n\t                self._origNotifySubscribers(value, beforeChange);\n\t            }\n\t        };\n\t    },\n\t\n\t    hasSubscriptionsForEvent: function(event) {\n\t        return this._subscriptions[event] && this._subscriptions[event].length;\n\t    },\n\t\n\t    getSubscriptionsCount: function (event) {\n\t        if (event) {\n\t            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n\t        } else {\n\t            var total = 0;\n\t            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n\t                if (eventName !== 'dirty')\n\t                    total += subscriptions.length;\n\t            });\n\t            return total;\n\t        }\n\t    },\n\t\n\t    isDifferent: function(oldValue, newValue) {\n\t        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n\t    },\n\t\n\t    extend: applyExtenders\n\t};\n\t\n\tko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\n\tko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\n\tko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\t\n\t// For browsers that support proto assignment, we overwrite the prototype of each\n\t// observable instance. Since observables are functions, we need Function.prototype\n\t// to still be in the prototype chain.\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n\t}\n\t\n\tko.subscribable['fn'] = ko_subscribable_fn;\n\t\n\t\n\tko.isSubscribable = function (instance) {\n\t    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n\t};\n\t\n\tko.exportSymbol('subscribable', ko.subscribable);\n\tko.exportSymbol('isSubscribable', ko.isSubscribable);\n\t\n\tko.computedContext = ko.dependencyDetection = (function () {\n\t    var outerFrames = [],\n\t        currentFrame,\n\t        lastId = 0;\n\t\n\t    // Return a unique ID that can be assigned to an observable for dependency tracking.\n\t    // Theoretically, you could eventually overflow the number storage size, resulting\n\t    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n\t    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n\t    // take over 285 years to reach that number.\n\t    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n\t    function getId() {\n\t        return ++lastId;\n\t    }\n\t\n\t    function begin(options) {\n\t        outerFrames.push(currentFrame);\n\t        currentFrame = options;\n\t    }\n\t\n\t    function end() {\n\t        currentFrame = outerFrames.pop();\n\t    }\n\t\n\t    return {\n\t        begin: begin,\n\t\n\t        end: end,\n\t\n\t        registerDependency: function (subscribable) {\n\t            if (currentFrame) {\n\t                if (!ko.isSubscribable(subscribable))\n\t                    throw new Error(\"Only subscribable things can act as dependencies\");\n\t                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n\t            }\n\t        },\n\t\n\t        ignore: function (callback, callbackTarget, callbackArgs) {\n\t            try {\n\t                begin();\n\t                return callback.apply(callbackTarget, callbackArgs || []);\n\t            } finally {\n\t                end();\n\t            }\n\t        },\n\t\n\t        getDependenciesCount: function () {\n\t            if (currentFrame)\n\t                return currentFrame.computed.getDependenciesCount();\n\t        },\n\t\n\t        isInitial: function() {\n\t            if (currentFrame)\n\t                return currentFrame.isInitial;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('computedContext', ko.computedContext);\n\tko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\n\tko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\t\n\tko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\n\tvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\t\n\tko.observable = function (initialValue) {\n\t    function observable() {\n\t        if (arguments.length > 0) {\n\t            // Write\n\t\n\t            // Ignore writes if the value hasn't changed\n\t            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n\t                observable.valueWillMutate();\n\t                observable[observableLatestValue] = arguments[0];\n\t                observable.valueHasMutated();\n\t            }\n\t            return this; // Permits chained assignments\n\t        }\n\t        else {\n\t            // Read\n\t            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n\t            return observable[observableLatestValue];\n\t        }\n\t    }\n\t\n\t    observable[observableLatestValue] = initialValue;\n\t\n\t    // Inherit from 'subscribable'\n\t    if (!ko.utils.canSetPrototype) {\n\t        // 'subscribable' won't be on the prototype chain unless we put it there directly\n\t        ko.utils.extend(observable, ko.subscribable['fn']);\n\t    }\n\t    ko.subscribable['fn'].init(observable);\n\t\n\t    // Inherit from 'observable'\n\t    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\t\n\t    if (ko.options['deferUpdates']) {\n\t        ko.extenders['deferred'](observable, true);\n\t    }\n\t\n\t    return observable;\n\t}\n\t\n\t// Define prototype for observables\n\tvar observableFn = {\n\t    'equalityComparer': valuesArePrimitiveAndEqual,\n\t    peek: function() { return this[observableLatestValue]; },\n\t    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n\t    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n\t};\n\t\n\t// Note that for browsers that don't support proto assignment, the\n\t// inheritance chain is created manually in the ko.observable constructor\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n\t}\n\t\n\tvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\n\tobservableFn[protoProperty] = ko.observable;\n\t\n\tko.hasPrototype = function(instance, prototype) {\n\t    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n\t    if (instance[protoProperty] === prototype) return true;\n\t    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n\t};\n\t\n\tko.isObservable = function (instance) {\n\t    return ko.hasPrototype(instance, ko.observable);\n\t}\n\tko.isWriteableObservable = function (instance) {\n\t    // Observable\n\t    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n\t        return true;\n\t    // Writeable dependent observable\n\t    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n\t        return true;\n\t    // Anything else\n\t    return false;\n\t}\n\t\n\tko.exportSymbol('observable', ko.observable);\n\tko.exportSymbol('isObservable', ko.isObservable);\n\tko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\n\tko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\n\tko.exportSymbol('observable.fn', observableFn);\n\tko.exportProperty(observableFn, 'peek', observableFn.peek);\n\tko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\n\tko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\n\tko.observableArray = function (initialValues) {\n\t    initialValues = initialValues || [];\n\t\n\t    if (typeof initialValues != 'object' || !('length' in initialValues))\n\t        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\t\n\t    var result = ko.observable(initialValues);\n\t    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n\t    return result.extend({'trackArrayChanges':true});\n\t};\n\t\n\tko.observableArray['fn'] = {\n\t    'remove': function (valueOrPredicate) {\n\t        var underlyingArray = this.peek();\n\t        var removedValues = [];\n\t        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n\t        for (var i = 0; i < underlyingArray.length; i++) {\n\t            var value = underlyingArray[i];\n\t            if (predicate(value)) {\n\t                if (removedValues.length === 0) {\n\t                    this.valueWillMutate();\n\t                }\n\t                removedValues.push(value);\n\t                underlyingArray.splice(i, 1);\n\t                i--;\n\t            }\n\t        }\n\t        if (removedValues.length) {\n\t            this.valueHasMutated();\n\t        }\n\t        return removedValues;\n\t    },\n\t\n\t    'removeAll': function (arrayOfValues) {\n\t        // If you passed zero args, we remove everything\n\t        if (arrayOfValues === undefined) {\n\t            var underlyingArray = this.peek();\n\t            var allValues = underlyingArray.slice(0);\n\t            this.valueWillMutate();\n\t            underlyingArray.splice(0, underlyingArray.length);\n\t            this.valueHasMutated();\n\t            return allValues;\n\t        }\n\t        // If you passed an arg, we interpret it as an array of entries to remove\n\t        if (!arrayOfValues)\n\t            return [];\n\t        return this['remove'](function (value) {\n\t            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n\t        });\n\t    },\n\t\n\t    'destroy': function (valueOrPredicate) {\n\t        var underlyingArray = this.peek();\n\t        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n\t        this.valueWillMutate();\n\t        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n\t            var value = underlyingArray[i];\n\t            if (predicate(value))\n\t                underlyingArray[i][\"_destroy\"] = true;\n\t        }\n\t        this.valueHasMutated();\n\t    },\n\t\n\t    'destroyAll': function (arrayOfValues) {\n\t        // If you passed zero args, we destroy everything\n\t        if (arrayOfValues === undefined)\n\t            return this['destroy'](function() { return true });\n\t\n\t        // If you passed an arg, we interpret it as an array of entries to destroy\n\t        if (!arrayOfValues)\n\t            return [];\n\t        return this['destroy'](function (value) {\n\t            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n\t        });\n\t    },\n\t\n\t    'indexOf': function (item) {\n\t        var underlyingArray = this();\n\t        return ko.utils.arrayIndexOf(underlyingArray, item);\n\t    },\n\t\n\t    'replace': function(oldItem, newItem) {\n\t        var index = this['indexOf'](oldItem);\n\t        if (index >= 0) {\n\t            this.valueWillMutate();\n\t            this.peek()[index] = newItem;\n\t            this.valueHasMutated();\n\t        }\n\t    }\n\t};\n\t\n\t// Note that for browsers that don't support proto assignment, the\n\t// inheritance chain is created manually in the ko.observableArray constructor\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n\t}\n\t\n\t// Populate ko.observableArray.fn with read/write functions from native arrays\n\t// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n\t// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\n\tko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n\t    ko.observableArray['fn'][methodName] = function () {\n\t        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n\t        // (for consistency with mutating regular observables)\n\t        var underlyingArray = this.peek();\n\t        this.valueWillMutate();\n\t        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n\t        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n\t        this.valueHasMutated();\n\t        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n\t        return methodCallResult === underlyingArray ? this : methodCallResult;\n\t    };\n\t});\n\t\n\t// Populate ko.observableArray.fn with read-only functions from native arrays\n\tko.utils.arrayForEach([\"slice\"], function (methodName) {\n\t    ko.observableArray['fn'][methodName] = function () {\n\t        var underlyingArray = this();\n\t        return underlyingArray[methodName].apply(underlyingArray, arguments);\n\t    };\n\t});\n\t\n\tko.exportSymbol('observableArray', ko.observableArray);\n\tvar arrayChangeEventName = 'arrayChange';\n\tko.extenders['trackArrayChanges'] = function(target, options) {\n\t    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n\t    target.compareArrayOptions = {};\n\t    if (options && typeof options == \"object\") {\n\t        ko.utils.extend(target.compareArrayOptions, options);\n\t    }\n\t    target.compareArrayOptions['sparse'] = true;\n\t\n\t    // Only modify the target observable once\n\t    if (target.cacheDiffForKnownOperation) {\n\t        return;\n\t    }\n\t    var trackingChanges = false,\n\t        cachedDiff = null,\n\t        arrayChangeSubscription,\n\t        pendingNotifications = 0,\n\t        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n\t        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\t\n\t    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n\t    target.beforeSubscriptionAdd = function (event) {\n\t        if (underlyingBeforeSubscriptionAddFunction)\n\t            underlyingBeforeSubscriptionAddFunction.call(target, event);\n\t        if (event === arrayChangeEventName) {\n\t            trackChanges();\n\t        }\n\t    };\n\t    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n\t    target.afterSubscriptionRemove = function (event) {\n\t        if (underlyingAfterSubscriptionRemoveFunction)\n\t            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n\t        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n\t            arrayChangeSubscription.dispose();\n\t            trackingChanges = false;\n\t        }\n\t    };\n\t\n\t    function trackChanges() {\n\t        // Calling 'trackChanges' multiple times is the same as calling it once\n\t        if (trackingChanges) {\n\t            return;\n\t        }\n\t\n\t        trackingChanges = true;\n\t\n\t        // Intercept \"notifySubscribers\" to track how many times it was called.\n\t        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n\t        target['notifySubscribers'] = function(valueToNotify, event) {\n\t            if (!event || event === defaultEvent) {\n\t                ++pendingNotifications;\n\t            }\n\t            return underlyingNotifySubscribersFunction.apply(this, arguments);\n\t        };\n\t\n\t        // Each time the array changes value, capture a clone so that on the next\n\t        // change it's possible to produce a diff\n\t        var previousContents = [].concat(target.peek() || []);\n\t        cachedDiff = null;\n\t        arrayChangeSubscription = target.subscribe(function(currentContents) {\n\t            // Make a copy of the current contents and ensure it's an array\n\t            currentContents = [].concat(currentContents || []);\n\t\n\t            // Compute the diff and issue notifications, but only if someone is listening\n\t            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n\t                var changes = getChanges(previousContents, currentContents);\n\t            }\n\t\n\t            // Eliminate references to the old, removed items, so they can be GCed\n\t            previousContents = currentContents;\n\t            cachedDiff = null;\n\t            pendingNotifications = 0;\n\t\n\t            if (changes && changes.length) {\n\t                target['notifySubscribers'](changes, arrayChangeEventName);\n\t            }\n\t        });\n\t    }\n\t\n\t    function getChanges(previousContents, currentContents) {\n\t        // We try to re-use cached diffs.\n\t        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n\t        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n\t        // notifications are issued immediately so we wouldn't be queueing up more than one.\n\t        if (!cachedDiff || pendingNotifications > 1) {\n\t            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n\t        }\n\t\n\t        return cachedDiff;\n\t    }\n\t\n\t    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n\t        // Only run if we're currently tracking changes for this observable array\n\t        // and there aren't any pending deferred notifications.\n\t        if (!trackingChanges || pendingNotifications) {\n\t            return;\n\t        }\n\t        var diff = [],\n\t            arrayLength = rawArray.length,\n\t            argsLength = args.length,\n\t            offset = 0;\n\t\n\t        function pushDiff(status, value, index) {\n\t            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n\t        }\n\t        switch (operationName) {\n\t            case 'push':\n\t                offset = arrayLength;\n\t            case 'unshift':\n\t                for (var index = 0; index < argsLength; index++) {\n\t                    pushDiff('added', args[index], offset + index);\n\t                }\n\t                break;\n\t\n\t            case 'pop':\n\t                offset = arrayLength - 1;\n\t            case 'shift':\n\t                if (arrayLength) {\n\t                    pushDiff('deleted', rawArray[offset], offset);\n\t                }\n\t                break;\n\t\n\t            case 'splice':\n\t                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n\t                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n\t                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n\t                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n\t                    endAddIndex = startIndex + argsLength - 2,\n\t                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n\t                    additions = [], deletions = [];\n\t                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n\t                    if (index < endDeleteIndex)\n\t                        deletions.push(pushDiff('deleted', rawArray[index], index));\n\t                    if (index < endAddIndex)\n\t                        additions.push(pushDiff('added', args[argsIndex], index));\n\t                }\n\t                ko.utils.findMovesInArrayComparison(deletions, additions);\n\t                break;\n\t\n\t            default:\n\t                return;\n\t        }\n\t        cachedDiff = diff;\n\t    };\n\t};\n\tvar computedState = ko.utils.createSymbolOrString('_state');\n\t\n\tko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n\t    if (typeof evaluatorFunctionOrOptions === \"object\") {\n\t        // Single-parameter syntax - everything is on this \"options\" param\n\t        options = evaluatorFunctionOrOptions;\n\t    } else {\n\t        // Multi-parameter syntax - construct the options according to the params passed\n\t        options = options || {};\n\t        if (evaluatorFunctionOrOptions) {\n\t            options[\"read\"] = evaluatorFunctionOrOptions;\n\t        }\n\t    }\n\t    if (typeof options[\"read\"] != \"function\")\n\t        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\t\n\t    var writeFunction = options[\"write\"];\n\t    var state = {\n\t        latestValue: undefined,\n\t        isStale: true,\n\t        isBeingEvaluated: false,\n\t        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n\t        isDisposed: false,\n\t        pure: false,\n\t        isSleeping: false,\n\t        readFunction: options[\"read\"],\n\t        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n\t        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n\t        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n\t        domNodeDisposalCallback: null,\n\t        dependencyTracking: {},\n\t        dependenciesCount: 0,\n\t        evaluationTimeoutInstance: null\n\t    };\n\t\n\t    function computedObservable() {\n\t        if (arguments.length > 0) {\n\t            if (typeof writeFunction === \"function\") {\n\t                // Writing a value\n\t                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n\t            } else {\n\t                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n\t            }\n\t            return this; // Permits chained assignments\n\t        } else {\n\t            // Reading the value\n\t            ko.dependencyDetection.registerDependency(computedObservable);\n\t            if (state.isStale || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n\t                computedObservable.evaluateImmediate();\n\t            }\n\t            return state.latestValue;\n\t        }\n\t    }\n\t\n\t    computedObservable[computedState] = state;\n\t    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\t\n\t    // Inherit from 'subscribable'\n\t    if (!ko.utils.canSetPrototype) {\n\t        // 'subscribable' won't be on the prototype chain unless we put it there directly\n\t        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n\t    }\n\t    ko.subscribable['fn'].init(computedObservable);\n\t\n\t    // Inherit from 'computed'\n\t    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\t\n\t    if (options['pure']) {\n\t        state.pure = true;\n\t        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n\t        ko.utils.extend(computedObservable, pureComputedOverrides);\n\t    } else if (options['deferEvaluation']) {\n\t        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n\t    }\n\t\n\t    if (ko.options['deferUpdates']) {\n\t        ko.extenders['deferred'](computedObservable, true);\n\t    }\n\t\n\t    if (DEBUG) {\n\t        // #1731 - Aid debugging by exposing the computed's options\n\t        computedObservable[\"_options\"] = options;\n\t    }\n\t\n\t    if (state.disposeWhenNodeIsRemoved) {\n\t        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n\t        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n\t        // we'll prevent disposal until \"disposeWhen\" first returns false.\n\t        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\t\n\t        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n\t        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n\t        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n\t        // be documented or used by application code, as it's likely to change in a future version of KO.\n\t        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n\t            state.disposeWhenNodeIsRemoved = null;\n\t        }\n\t    }\n\t\n\t    // Evaluate, unless sleeping or deferEvaluation is true\n\t    if (!state.isSleeping && !options['deferEvaluation']) {\n\t        computedObservable.evaluateImmediate();\n\t    }\n\t\n\t    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n\t    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n\t    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n\t        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n\t            computedObservable.dispose();\n\t        });\n\t    }\n\t\n\t    return computedObservable;\n\t};\n\t\n\t// Utility function that disposes a given dependencyTracking entry\n\tfunction computedDisposeDependencyCallback(id, entryToDispose) {\n\t    if (entryToDispose !== null && entryToDispose.dispose) {\n\t        entryToDispose.dispose();\n\t    }\n\t}\n\t\n\t// This function gets called each time a dependency is detected while evaluating a computed.\n\t// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\n\tfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n\t    var computedObservable = this.computedObservable,\n\t        state = computedObservable[computedState];\n\t    if (!state.isDisposed) {\n\t        if (this.disposalCount && this.disposalCandidates[id]) {\n\t            // Don't want to dispose this subscription, as it's still being used\n\t            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n\t            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n\t            --this.disposalCount;\n\t        } else if (!state.dependencyTracking[id]) {\n\t            // Brand new subscription - add it\n\t            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n\t        }\n\t    }\n\t}\n\t\n\tvar computedFn = {\n\t    \"equalityComparer\": valuesArePrimitiveAndEqual,\n\t    getDependenciesCount: function () {\n\t        return this[computedState].dependenciesCount;\n\t    },\n\t    addDependencyTracking: function (id, target, trackingObj) {\n\t        if (this[computedState].pure && target === this) {\n\t            throw Error(\"A 'pure' computed must not be called recursively\");\n\t        }\n\t\n\t        this[computedState].dependencyTracking[id] = trackingObj;\n\t        trackingObj._order = this[computedState].dependenciesCount++;\n\t        trackingObj._version = target.getVersion();\n\t    },\n\t    haveDependenciesChanged: function () {\n\t        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n\t        for (id in dependencyTracking) {\n\t            if (dependencyTracking.hasOwnProperty(id)) {\n\t                dependency = dependencyTracking[id];\n\t                if (dependency._target.hasChanged(dependency._version)) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    markDirty: function () {\n\t        // Process \"dirty\" events if we can handle delayed notifications\n\t        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n\t            this._evalDelayed();\n\t        }\n\t    },\n\t    isActive: function () {\n\t        return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n\t    },\n\t    respondToChange: function () {\n\t        // Ignore \"change\" events if we've already scheduled a delayed notification\n\t        if (!this._notificationIsPending) {\n\t            this.evaluatePossiblyAsync();\n\t        }\n\t    },\n\t    subscribeToDependency: function (target) {\n\t        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n\t            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n\t                changeSub = target.subscribe(this.respondToChange, this);\n\t            return {\n\t                _target: target,\n\t                dispose: function () {\n\t                    dirtySub.dispose();\n\t                    changeSub.dispose();\n\t                }\n\t            };\n\t        } else {\n\t            return target.subscribe(this.evaluatePossiblyAsync, this);\n\t        }\n\t    },\n\t    evaluatePossiblyAsync: function () {\n\t        var computedObservable = this,\n\t            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n\t        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n\t            clearTimeout(this[computedState].evaluationTimeoutInstance);\n\t            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n\t                computedObservable.evaluateImmediate(true /*notifyChange*/);\n\t            }, throttleEvaluationTimeout);\n\t        } else if (computedObservable._evalDelayed) {\n\t            computedObservable._evalDelayed();\n\t        } else {\n\t            computedObservable.evaluateImmediate(true /*notifyChange*/);\n\t        }\n\t    },\n\t    evaluateImmediate: function (notifyChange) {\n\t        var computedObservable = this,\n\t            state = computedObservable[computedState],\n\t            disposeWhen = state.disposeWhen;\n\t\n\t        if (state.isBeingEvaluated) {\n\t            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n\t            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n\t            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n\t            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n\t            return;\n\t        }\n\t\n\t        // Do not evaluate (and possibly capture new dependencies) if disposed\n\t        if (state.isDisposed) {\n\t            return;\n\t        }\n\t\n\t        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n\t            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n\t            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n\t                computedObservable.dispose();\n\t                return;\n\t            }\n\t        } else {\n\t            // It just did return false, so we can stop suppressing now\n\t            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n\t        }\n\t\n\t        state.isBeingEvaluated = true;\n\t        try {\n\t            this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n\t        } finally {\n\t            state.isBeingEvaluated = false;\n\t        }\n\t\n\t        if (!state.dependenciesCount) {\n\t            computedObservable.dispose();\n\t        }\n\t    },\n\t    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n\t        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n\t        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n\t        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\t\n\t        var computedObservable = this,\n\t            state = computedObservable[computedState];\n\t\n\t        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n\t        // Then, during evaluation, we cross off any that are in fact still being used.\n\t        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n\t            dependencyDetectionContext = {\n\t                computedObservable: computedObservable,\n\t                disposalCandidates: state.dependencyTracking,\n\t                disposalCount: state.dependenciesCount\n\t            };\n\t\n\t        ko.dependencyDetection.begin({\n\t            callbackTarget: dependencyDetectionContext,\n\t            callback: computedBeginDependencyDetectionCallback,\n\t            computed: computedObservable,\n\t            isInitial: isInitial\n\t        });\n\t\n\t        state.dependencyTracking = {};\n\t        state.dependenciesCount = 0;\n\t\n\t        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\t\n\t        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n\t            if (!state.isSleeping) {\n\t                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n\t            }\n\t\n\t            state.latestValue = newValue;\n\t\n\t            if (state.isSleeping) {\n\t                computedObservable.updateVersion();\n\t            } else if (notifyChange) {\n\t                computedObservable[\"notifySubscribers\"](state.latestValue);\n\t            }\n\t        }\n\t\n\t        if (isInitial) {\n\t            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n\t        }\n\t    },\n\t    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n\t        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n\t        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n\t        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n\t        // overhead of computed evaluation (on V8 at least).\n\t\n\t        try {\n\t            var readFunction = state.readFunction;\n\t            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n\t        } finally {\n\t            ko.dependencyDetection.end();\n\t\n\t            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n\t            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n\t                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n\t            }\n\t\n\t            state.isStale = false;\n\t        }\n\t    },\n\t    peek: function () {\n\t        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n\t        var state = this[computedState];\n\t        if ((state.isStale && !state.dependenciesCount) || (state.isSleeping && this.haveDependenciesChanged())) {\n\t            this.evaluateImmediate();\n\t        }\n\t        return state.latestValue;\n\t    },\n\t    limit: function (limitFunction) {\n\t        // Override the limit function with one that delays evaluation as well\n\t        ko.subscribable['fn'].limit.call(this, limitFunction);\n\t        this._evalDelayed = function () {\n\t            this._limitBeforeChange(this[computedState].latestValue);\n\t\n\t            this[computedState].isStale = true; // Mark as dirty\n\t\n\t            // Pass the observable to the \"limit\" code, which will access it when\n\t            // it's time to do the notification.\n\t            this._limitChange(this);\n\t        }\n\t    },\n\t    dispose: function () {\n\t        var state = this[computedState];\n\t        if (!state.isSleeping && state.dependencyTracking) {\n\t            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n\t                if (dependency.dispose)\n\t                    dependency.dispose();\n\t            });\n\t        }\n\t        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n\t            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n\t        }\n\t        state.dependencyTracking = null;\n\t        state.dependenciesCount = 0;\n\t        state.isDisposed = true;\n\t        state.isStale = false;\n\t        state.isSleeping = false;\n\t        state.disposeWhenNodeIsRemoved = null;\n\t    }\n\t};\n\t\n\tvar pureComputedOverrides = {\n\t    beforeSubscriptionAdd: function (event) {\n\t        // If asleep, wake up the computed by subscribing to any dependencies.\n\t        var computedObservable = this,\n\t            state = computedObservable[computedState];\n\t        if (!state.isDisposed && state.isSleeping && event == 'change') {\n\t            state.isSleeping = false;\n\t            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n\t                state.dependencyTracking = null;\n\t                state.dependenciesCount = 0;\n\t                state.isStale = true;\n\t                computedObservable.evaluateImmediate();\n\t            } else {\n\t                // First put the dependencies in order\n\t                var dependeciesOrder = [];\n\t                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n\t                    dependeciesOrder[dependency._order] = id;\n\t                });\n\t                // Next, subscribe to each one\n\t                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n\t                    var dependency = state.dependencyTracking[id],\n\t                        subscription = computedObservable.subscribeToDependency(dependency._target);\n\t                    subscription._order = order;\n\t                    subscription._version = dependency._version;\n\t                    state.dependencyTracking[id] = subscription;\n\t                });\n\t            }\n\t            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n\t                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n\t            }\n\t        }\n\t    },\n\t    afterSubscriptionRemove: function (event) {\n\t        var state = this[computedState];\n\t        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n\t            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n\t                if (dependency.dispose) {\n\t                    state.dependencyTracking[id] = {\n\t                        _target: dependency._target,\n\t                        _order: dependency._order,\n\t                        _version: dependency._version\n\t                    };\n\t                    dependency.dispose();\n\t                }\n\t            });\n\t            state.isSleeping = true;\n\t            this[\"notifySubscribers\"](undefined, \"asleep\");\n\t        }\n\t    },\n\t    getVersion: function () {\n\t        // Because a pure computed is not automatically updated while it is sleeping, we can't\n\t        // simply return the version number. Instead, we check if any of the dependencies have\n\t        // changed and conditionally re-evaluate the computed observable.\n\t        var state = this[computedState];\n\t        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n\t            this.evaluateImmediate();\n\t        }\n\t        return ko.subscribable['fn'].getVersion.call(this);\n\t    }\n\t};\n\t\n\tvar deferEvaluationOverrides = {\n\t    beforeSubscriptionAdd: function (event) {\n\t        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n\t        if (event == 'change' || event == 'beforeChange') {\n\t            this.peek();\n\t        }\n\t    }\n\t};\n\t\n\t// Note that for browsers that don't support proto assignment, the\n\t// inheritance chain is created manually in the ko.computed constructor\n\tif (ko.utils.canSetPrototype) {\n\t    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n\t}\n\t\n\t// Set the proto chain values for ko.hasPrototype\n\tvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\n\tko.computed[protoProp] = ko.observable;\n\tcomputedFn[protoProp] = ko.computed;\n\t\n\tko.isComputed = function (instance) {\n\t    return ko.hasPrototype(instance, ko.computed);\n\t};\n\t\n\tko.isPureComputed = function (instance) {\n\t    return ko.hasPrototype(instance, ko.computed)\n\t        && instance[computedState] && instance[computedState].pure;\n\t};\n\t\n\tko.exportSymbol('computed', ko.computed);\n\tko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\n\tko.exportSymbol('isComputed', ko.isComputed);\n\tko.exportSymbol('isPureComputed', ko.isPureComputed);\n\tko.exportSymbol('computed.fn', computedFn);\n\tko.exportProperty(computedFn, 'peek', computedFn.peek);\n\tko.exportProperty(computedFn, 'dispose', computedFn.dispose);\n\tko.exportProperty(computedFn, 'isActive', computedFn.isActive);\n\tko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\t\n\tko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n\t    if (typeof evaluatorFunctionOrOptions === 'function') {\n\t        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n\t    } else {\n\t        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n\t        evaluatorFunctionOrOptions['pure'] = true;\n\t        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n\t    }\n\t}\n\tko.exportSymbol('pureComputed', ko.pureComputed);\n\t\n\t(function() {\n\t    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\t\n\t    ko.toJS = function(rootObject) {\n\t        if (arguments.length == 0)\n\t            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\t\n\t        // We just unwrap everything at every level in the object graph\n\t        return mapJsObjectGraph(rootObject, function(valueToMap) {\n\t            // Loop because an observable's value might in turn be another observable wrapper\n\t            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n\t                valueToMap = valueToMap();\n\t            return valueToMap;\n\t        });\n\t    };\n\t\n\t    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n\t        var plainJavaScriptObject = ko.toJS(rootObject);\n\t        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n\t    };\n\t\n\t    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n\t        visitedObjects = visitedObjects || new objectLookup();\n\t\n\t        rootObject = mapInputCallback(rootObject);\n\t        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n\t        if (!canHaveProperties)\n\t            return rootObject;\n\t\n\t        var outputProperties = rootObject instanceof Array ? [] : {};\n\t        visitedObjects.save(rootObject, outputProperties);\n\t\n\t        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n\t            var propertyValue = mapInputCallback(rootObject[indexer]);\n\t\n\t            switch (typeof propertyValue) {\n\t                case \"boolean\":\n\t                case \"number\":\n\t                case \"string\":\n\t                case \"function\":\n\t                    outputProperties[indexer] = propertyValue;\n\t                    break;\n\t                case \"object\":\n\t                case \"undefined\":\n\t                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n\t                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n\t                        ? previouslyMappedValue\n\t                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n\t                    break;\n\t            }\n\t        });\n\t\n\t        return outputProperties;\n\t    }\n\t\n\t    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n\t        if (rootObject instanceof Array) {\n\t            for (var i = 0; i < rootObject.length; i++)\n\t                visitorCallback(i);\n\t\n\t            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n\t            if (typeof rootObject['toJSON'] == 'function')\n\t                visitorCallback('toJSON');\n\t        } else {\n\t            for (var propertyName in rootObject) {\n\t                visitorCallback(propertyName);\n\t            }\n\t        }\n\t    };\n\t\n\t    function objectLookup() {\n\t        this.keys = [];\n\t        this.values = [];\n\t    };\n\t\n\t    objectLookup.prototype = {\n\t        constructor: objectLookup,\n\t        save: function(key, value) {\n\t            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n\t            if (existingIndex >= 0)\n\t                this.values[existingIndex] = value;\n\t            else {\n\t                this.keys.push(key);\n\t                this.values.push(value);\n\t            }\n\t        },\n\t        get: function(key) {\n\t            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n\t            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('toJS', ko.toJS);\n\tko.exportSymbol('toJSON', ko.toJSON);\n\t(function () {\n\t    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\t\n\t    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n\t    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n\t    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n\t    ko.selectExtensions = {\n\t        readValue : function(element) {\n\t            switch (ko.utils.tagNameLower(element)) {\n\t                case 'option':\n\t                    if (element[hasDomDataExpandoProperty] === true)\n\t                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n\t                    return ko.utils.ieVersion <= 7\n\t                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n\t                        : element.value;\n\t                case 'select':\n\t                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n\t                default:\n\t                    return element.value;\n\t            }\n\t        },\n\t\n\t        writeValue: function(element, value, allowUnset) {\n\t            switch (ko.utils.tagNameLower(element)) {\n\t                case 'option':\n\t                    switch(typeof value) {\n\t                        case \"string\":\n\t                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n\t                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n\t                                delete element[hasDomDataExpandoProperty];\n\t                            }\n\t                            element.value = value;\n\t                            break;\n\t                        default:\n\t                            // Store arbitrary object using DomData\n\t                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n\t                            element[hasDomDataExpandoProperty] = true;\n\t\n\t                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n\t                            element.value = typeof value === \"number\" ? value : \"\";\n\t                            break;\n\t                    }\n\t                    break;\n\t                case 'select':\n\t                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n\t                        value = undefined;\n\t                    var selection = -1;\n\t                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n\t                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n\t                        // Include special check to handle selecting a caption with a blank string value\n\t                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n\t                            selection = i;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n\t                        element.selectedIndex = selection;\n\t                    }\n\t                    break;\n\t                default:\n\t                    if ((value === null) || (value === undefined))\n\t                        value = \"\";\n\t                    element.value = value;\n\t                    break;\n\t            }\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('selectExtensions', ko.selectExtensions);\n\tko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\n\tko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\n\tko.expressionRewriting = (function () {\n\t    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\t\n\t    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n\t    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n\t    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n\t    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\t\n\t    function getWriteableValue(expression) {\n\t        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n\t            return false;\n\t        var match = expression.match(javaScriptAssignmentTarget);\n\t        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n\t    }\n\t\n\t    // The following regular expressions will be used to split an object-literal string into tokens\n\t\n\t        // These two match strings, either with double quotes or single quotes\n\t    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n\t        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n\t        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n\t        // as a regular expression (this is handled by the parsing loop below).\n\t        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n\t        // These characters have special meaning to the parser and must not appear in the middle of a\n\t        // token, except as part of a string.\n\t        specials = ',\"\\'{}()/:[\\\\]',\n\t        // Match text (at least two characters) that does not contain any of the above special characters,\n\t        // although some of the special characters are allowed to start it (all but the colon and comma).\n\t        // The text can contain spaces, but leading or trailing spaces are skipped.\n\t        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n\t        // Match any non-space character not matched already. This will match colons and commas, since they're\n\t        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n\t        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n\t        oneNotSpace = '[^\\\\s]',\n\t\n\t        // Create the actual regular expression by or-ing the above strings. The order is important.\n\t        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\t\n\t        // Match end of previous token to determine whether a slash is a division or regex.\n\t        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n\t        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\t\n\t    function parseObjectLiteral(objectLiteralString) {\n\t        // Trim leading and trailing spaces from the string\n\t        var str = ko.utils.stringTrim(objectLiteralString);\n\t\n\t        // Trim braces '{' surrounding the whole object literal\n\t        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\t\n\t        // Split into tokens\n\t        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\t\n\t        if (toks) {\n\t            // Append a comma so that we don't need a separate code block to deal with the last item\n\t            toks.push(',');\n\t\n\t            for (var i = 0, tok; tok = toks[i]; ++i) {\n\t                var c = tok.charCodeAt(0);\n\t                // A comma signals the end of a key/value pair if depth is zero\n\t                if (c === 44) { // \",\"\n\t                    if (depth <= 0) {\n\t                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n\t                        key = depth = 0;\n\t                        values = [];\n\t                        continue;\n\t                    }\n\t                // Simply skip the colon that separates the name and value\n\t                } else if (c === 58) { // \":\"\n\t                    if (!depth && !key && values.length === 1) {\n\t                        key = values.pop();\n\t                        continue;\n\t                    }\n\t                // A set of slashes is initially matched as a regular expression, but could be division\n\t                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n\t                    // Look at the end of the previous token to determine if the slash is actually division\n\t                    var match = toks[i-1].match(divisionLookBehind);\n\t                    if (match && !keywordRegexLookBehind[match[0]]) {\n\t                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n\t                        str = str.substr(str.indexOf(tok) + 1);\n\t                        toks = str.match(bindingToken);\n\t                        toks.push(',');\n\t                        i = -1;\n\t                        // Continue with just the slash\n\t                        tok = '/';\n\t                    }\n\t                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n\t                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n\t                    ++depth;\n\t                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n\t                    --depth;\n\t                // The key will be the first token; if it's a string, trim the quotes\n\t                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n\t                    tok = tok.slice(1, -1);\n\t                }\n\t                values.push(tok);\n\t            }\n\t        }\n\t        return result;\n\t    }\n\t\n\t    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n\t    var twoWayBindings = {};\n\t\n\t    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n\t        bindingOptions = bindingOptions || {};\n\t\n\t        function processKeyValue(key, val) {\n\t            var writableVal;\n\t            function callPreprocessHook(obj) {\n\t                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n\t            }\n\t            if (!bindingParams) {\n\t                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n\t                    return;\n\t\n\t                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n\t                    // For two-way bindings, provide a write method in case the value\n\t                    // isn't a writable observable.\n\t                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n\t                }\n\t            }\n\t            // Values are wrapped in a function so that each value can be accessed independently\n\t            if (makeValueAccessors) {\n\t                val = 'function(){return ' + val + ' }';\n\t            }\n\t            resultStrings.push(\"'\" + key + \"':\" + val);\n\t        }\n\t\n\t        var resultStrings = [],\n\t            propertyAccessorResultStrings = [],\n\t            makeValueAccessors = bindingOptions['valueAccessors'],\n\t            bindingParams = bindingOptions['bindingParams'],\n\t            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n\t                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\t\n\t        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n\t            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n\t        });\n\t\n\t        if (propertyAccessorResultStrings.length)\n\t            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\t\n\t        return resultStrings.join(\",\");\n\t    }\n\t\n\t    return {\n\t        bindingRewriteValidators: [],\n\t\n\t        twoWayBindings: twoWayBindings,\n\t\n\t        parseObjectLiteral: parseObjectLiteral,\n\t\n\t        preProcessBindings: preProcessBindings,\n\t\n\t        keyValueArrayContainsKey: function(keyValueArray, key) {\n\t            for (var i = 0; i < keyValueArray.length; i++)\n\t                if (keyValueArray[i]['key'] == key)\n\t                    return true;\n\t            return false;\n\t        },\n\t\n\t        // Internal, private KO utility for updating model properties from within bindings\n\t        // property:            If the property being updated is (or might be) an observable, pass it here\n\t        //                      If it turns out to be a writable observable, it will be written to directly\n\t        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n\t        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n\t        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n\t        // value:               The value to be written\n\t        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n\t        //                      it is !== existing value on that writable observable\n\t        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n\t            if (!property || !ko.isObservable(property)) {\n\t                var propWriters = allBindings.get('_ko_property_writers');\n\t                if (propWriters && propWriters[key])\n\t                    propWriters[key](value);\n\t            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n\t                property(value);\n\t            }\n\t        }\n\t    };\n\t})();\n\t\n\tko.exportSymbol('expressionRewriting', ko.expressionRewriting);\n\tko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\n\tko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\n\tko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\t\n\t// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n\t// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n\t// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n\t// as an internal implementation detail in the short term.\n\t// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n\t// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n\t// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\n\tko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\t\n\t// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n\t// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\n\tko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\n\tko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n\t(function() {\n\t    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n\t    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n\t    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n\t    // of that virtual hierarchy\n\t    //\n\t    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n\t    // without having to scatter special cases all over the binding and templating code.\n\t\n\t    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n\t    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n\t    // So, use node.text where available, and node.nodeValue elsewhere\n\t    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\t\n\t    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n\t    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n\t    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\t\n\t    function isStartComment(node) {\n\t        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n\t    }\n\t\n\t    function isEndComment(node) {\n\t        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n\t    }\n\t\n\t    function getVirtualChildren(startComment, allowUnbalanced) {\n\t        var currentNode = startComment;\n\t        var depth = 1;\n\t        var children = [];\n\t        while (currentNode = currentNode.nextSibling) {\n\t            if (isEndComment(currentNode)) {\n\t                depth--;\n\t                if (depth === 0)\n\t                    return children;\n\t            }\n\t\n\t            children.push(currentNode);\n\t\n\t            if (isStartComment(currentNode))\n\t                depth++;\n\t        }\n\t        if (!allowUnbalanced)\n\t            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n\t        return null;\n\t    }\n\t\n\t    function getMatchingEndComment(startComment, allowUnbalanced) {\n\t        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n\t        if (allVirtualChildren) {\n\t            if (allVirtualChildren.length > 0)\n\t                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n\t            return startComment.nextSibling;\n\t        } else\n\t            return null; // Must have no matching end comment, and allowUnbalanced is true\n\t    }\n\t\n\t    function getUnbalancedChildTags(node) {\n\t        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n\t        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n\t        var childNode = node.firstChild, captureRemaining = null;\n\t        if (childNode) {\n\t            do {\n\t                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n\t                    captureRemaining.push(childNode);\n\t                else if (isStartComment(childNode)) {\n\t                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n\t                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n\t                        childNode = matchingEndComment;\n\t                    else\n\t                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n\t                } else if (isEndComment(childNode)) {\n\t                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n\t                }\n\t            } while (childNode = childNode.nextSibling);\n\t        }\n\t        return captureRemaining;\n\t    }\n\t\n\t    ko.virtualElements = {\n\t        allowedBindings: {},\n\t\n\t        childNodes: function(node) {\n\t            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n\t        },\n\t\n\t        emptyNode: function(node) {\n\t            if (!isStartComment(node))\n\t                ko.utils.emptyDomNode(node);\n\t            else {\n\t                var virtualChildren = ko.virtualElements.childNodes(node);\n\t                for (var i = 0, j = virtualChildren.length; i < j; i++)\n\t                    ko.removeNode(virtualChildren[i]);\n\t            }\n\t        },\n\t\n\t        setDomNodeChildren: function(node, childNodes) {\n\t            if (!isStartComment(node))\n\t                ko.utils.setDomNodeChildren(node, childNodes);\n\t            else {\n\t                ko.virtualElements.emptyNode(node);\n\t                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n\t                for (var i = 0, j = childNodes.length; i < j; i++)\n\t                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n\t            }\n\t        },\n\t\n\t        prepend: function(containerNode, nodeToPrepend) {\n\t            if (!isStartComment(containerNode)) {\n\t                if (containerNode.firstChild)\n\t                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n\t                else\n\t                    containerNode.appendChild(nodeToPrepend);\n\t            } else {\n\t                // Start comments must always have a parent and at least one following sibling (the end comment)\n\t                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n\t            }\n\t        },\n\t\n\t        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n\t            if (!insertAfterNode) {\n\t                ko.virtualElements.prepend(containerNode, nodeToInsert);\n\t            } else if (!isStartComment(containerNode)) {\n\t                // Insert after insertion point\n\t                if (insertAfterNode.nextSibling)\n\t                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n\t                else\n\t                    containerNode.appendChild(nodeToInsert);\n\t            } else {\n\t                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n\t                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n\t            }\n\t        },\n\t\n\t        firstChild: function(node) {\n\t            if (!isStartComment(node))\n\t                return node.firstChild;\n\t            if (!node.nextSibling || isEndComment(node.nextSibling))\n\t                return null;\n\t            return node.nextSibling;\n\t        },\n\t\n\t        nextSibling: function(node) {\n\t            if (isStartComment(node))\n\t                node = getMatchingEndComment(node);\n\t            if (node.nextSibling && isEndComment(node.nextSibling))\n\t                return null;\n\t            return node.nextSibling;\n\t        },\n\t\n\t        hasBindingValue: isStartComment,\n\t\n\t        virtualNodeBindingValue: function(node) {\n\t            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n\t            return regexMatch ? regexMatch[1] : null;\n\t        },\n\t\n\t        normaliseVirtualElementDomStructure: function(elementVerified) {\n\t            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n\t            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n\t            // that are direct descendants of <ul> into the preceding <li>)\n\t            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n\t                return;\n\t\n\t            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n\t            // must be intended to appear *after* that child, so move them there.\n\t            var childNode = elementVerified.firstChild;\n\t            if (childNode) {\n\t                do {\n\t                    if (childNode.nodeType === 1) {\n\t                        var unbalancedTags = getUnbalancedChildTags(childNode);\n\t                        if (unbalancedTags) {\n\t                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n\t                            var nodeToInsertBefore = childNode.nextSibling;\n\t                            for (var i = 0; i < unbalancedTags.length; i++) {\n\t                                if (nodeToInsertBefore)\n\t                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n\t                                else\n\t                                    elementVerified.appendChild(unbalancedTags[i]);\n\t                            }\n\t                        }\n\t                    }\n\t                } while (childNode = childNode.nextSibling);\n\t            }\n\t        }\n\t    };\n\t})();\n\tko.exportSymbol('virtualElements', ko.virtualElements);\n\tko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\n\tko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n\t//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\n\tko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n\t//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\n\tko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\n\tko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n\t(function() {\n\t    var defaultBindingAttributeName = \"data-bind\";\n\t\n\t    ko.bindingProvider = function() {\n\t        this.bindingCache = {};\n\t    };\n\t\n\t    ko.utils.extend(ko.bindingProvider.prototype, {\n\t        'nodeHasBindings': function(node) {\n\t            switch (node.nodeType) {\n\t                case 1: // Element\n\t                    return node.getAttribute(defaultBindingAttributeName) != null\n\t                        || ko.components['getComponentNameForNode'](node);\n\t                case 8: // Comment node\n\t                    return ko.virtualElements.hasBindingValue(node);\n\t                default: return false;\n\t            }\n\t        },\n\t\n\t        'getBindings': function(node, bindingContext) {\n\t            var bindingsString = this['getBindingsString'](node, bindingContext),\n\t                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n\t            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n\t        },\n\t\n\t        'getBindingAccessors': function(node, bindingContext) {\n\t            var bindingsString = this['getBindingsString'](node, bindingContext),\n\t                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n\t            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n\t        },\n\t\n\t        // The following function is only used internally by this default provider.\n\t        // It's not part of the interface definition for a general binding provider.\n\t        'getBindingsString': function(node, bindingContext) {\n\t            switch (node.nodeType) {\n\t                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n\t                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n\t                default: return null;\n\t            }\n\t        },\n\t\n\t        // The following function is only used internally by this default provider.\n\t        // It's not part of the interface definition for a general binding provider.\n\t        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n\t            try {\n\t                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n\t                return bindingFunction(bindingContext, node);\n\t            } catch (ex) {\n\t                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n\t                throw ex;\n\t            }\n\t        }\n\t    });\n\t\n\t    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\t\n\t    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n\t        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n\t        return cache[cacheKey]\n\t            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n\t    }\n\t\n\t    function createBindingsStringEvaluator(bindingsString, options) {\n\t        // Build the source for a function that evaluates \"expression\"\n\t        // For each scope variable, add an extra level of \"with\" nesting\n\t        // Example result: with(sc1) { with(sc0) { return (expression) } }\n\t        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n\t            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n\t        return new Function(\"$context\", \"$element\", functionBody);\n\t    }\n\t})();\n\t\n\tko.exportSymbol('bindingProvider', ko.bindingProvider);\n\t(function () {\n\t    ko.bindingHandlers = {};\n\t\n\t    // The following element types will not be recursed into during binding.\n\t    var bindingDoesNotRecurseIntoElementTypes = {\n\t        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n\t        // because it's unexpected and a potential XSS issue.\n\t        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n\t        // and because such elements' contents are always intended to be bound in a different context\n\t        // from where they appear in the document.\n\t        'script': true,\n\t        'textarea': true,\n\t        'template': true\n\t    };\n\t\n\t    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n\t    ko['getBindingHandler'] = function(bindingKey) {\n\t        return ko.bindingHandlers[bindingKey];\n\t    };\n\t\n\t    // The ko.bindingContext constructor is only called directly to create the root context. For child\n\t    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n\t    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\n\t\n\t        // The binding context object includes static properties for the current, parent, and root view models.\n\t        // If a view model is actually stored in an observable, the corresponding binding context object, and\n\t        // any child contexts, must be updated when the view model is changed.\n\t        function updateContext() {\n\t            // Most of the time, the context will directly get a view model object, but if a function is given,\n\t            // we call the function to retrieve the view model. If the function accesses any observables or returns\n\t            // an observable, the dependency is tracked, and those observables can later cause the binding\n\t            // context to be updated.\n\t            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n\t                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\t\n\t            if (parentContext) {\n\t                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n\t                // parent context is updated, this context will also be updated.\n\t                if (parentContext._subscribable)\n\t                    parentContext._subscribable();\n\t\n\t                // Copy $root and any custom properties from the parent context\n\t                ko.utils.extend(self, parentContext);\n\t\n\t                // Because the above copy overwrites our own properties, we need to reset them.\n\t                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\n\t                if (subscribable) {\n\t                    self._subscribable = subscribable;\n\t                }\n\t            } else {\n\t                self['$parents'] = [];\n\t                self['$root'] = dataItem;\n\t\n\t                // Export 'ko' in the binding context so it will be available in bindings and templates\n\t                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n\t                // See https://github.com/SteveSanderson/knockout/issues/490\n\t                self['ko'] = ko;\n\t            }\n\t            self['$rawData'] = dataItemOrObservable;\n\t            self['$data'] = dataItem;\n\t            if (dataItemAlias)\n\t                self[dataItemAlias] = dataItem;\n\t\n\t            // The extendCallback function is provided when creating a child context or extending a context.\n\t            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n\t            // function could also add dependencies to this binding context.\n\t            if (extendCallback)\n\t                extendCallback(self, parentContext, dataItem);\n\t\n\t            return self['$data'];\n\t        }\n\t        function disposeWhen() {\n\t            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n\t        }\n\t\n\t        var self = this,\n\t            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n\t            nodes,\n\t            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\t\n\t        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n\t        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n\t        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n\t        // the context object.\n\t        if (subscribable.isActive()) {\n\t            self._subscribable = subscribable;\n\t\n\t            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n\t            subscribable['equalityComparer'] = null;\n\t\n\t            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n\t            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n\t            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n\t            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\t\n\t            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n\t            nodes = [];\n\t            subscribable._addNode = function(node) {\n\t                nodes.push(node);\n\t                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n\t                    ko.utils.arrayRemoveItem(nodes, node);\n\t                    if (!nodes.length) {\n\t                        subscribable.dispose();\n\t                        self._subscribable = subscribable = undefined;\n\t                    }\n\t                });\n\t            };\n\t        }\n\t    }\n\t\n\t    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n\t    // any observables, the new child context will automatically get a dependency on the parent context.\n\t    // But this does not mean that the $data value of the child context will also get updated. If the child\n\t    // view model also depends on the parent view model, you must provide a function that returns the correct\n\t    // view model on each update.\n\t    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\n\t        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n\t            // Extend the context hierarchy by setting the appropriate pointers\n\t            self['$parentContext'] = parentContext;\n\t            self['$parent'] = parentContext['$data'];\n\t            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n\t            self['$parents'].unshift(self['$parent']);\n\t            if (extendCallback)\n\t                extendCallback(self);\n\t        });\n\t    };\n\t\n\t    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n\t    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n\t    // when an observable view model is updated.\n\t    ko.bindingContext.prototype['extend'] = function(properties) {\n\t        // If the parent context references an observable view model, \"_subscribable\" will always be the\n\t        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n\t        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n\t            // This \"child\" context doesn't directly track a parent observable view model,\n\t            // so we need to manually set the $rawData value to match the parent.\n\t            self['$rawData'] = parentContext['$rawData'];\n\t            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n\t        });\n\t    };\n\t\n\t    // Returns the valueAccesor function for a binding value\n\t    function makeValueAccessor(value) {\n\t        return function() {\n\t            return value;\n\t        };\n\t    }\n\t\n\t    // Returns the value of a valueAccessor function\n\t    function evaluateValueAccessor(valueAccessor) {\n\t        return valueAccessor();\n\t    }\n\t\n\t    // Given a function that returns bindings, create and return a new object that contains\n\t    // binding value-accessors functions. Each accessor function calls the original function\n\t    // so that it always gets the latest value and all dependencies are captured. This is used\n\t    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n\t    function makeAccessorsFromFunction(callback) {\n\t        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n\t            return function() {\n\t                return callback()[key];\n\t            };\n\t        });\n\t    }\n\t\n\t    // Given a bindings function or object, create and return a new object that contains\n\t    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n\t    function makeBindingAccessors(bindings, context, node) {\n\t        if (typeof bindings === 'function') {\n\t            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n\t        } else {\n\t            return ko.utils.objectMap(bindings, makeValueAccessor);\n\t        }\n\t    }\n\t\n\t    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n\t    // It must be called with 'this' set to the provider instance.\n\t    function getBindingsAndMakeAccessors(node, context) {\n\t        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n\t    }\n\t\n\t    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n\t        var validator = ko.virtualElements.allowedBindings[bindingName];\n\t        if (!validator)\n\t            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n\t    }\n\t\n\t    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n\t        var currentChild,\n\t            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n\t            provider = ko.bindingProvider['instance'],\n\t            preprocessNode = provider['preprocessNode'];\n\t\n\t        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n\t        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n\t        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n\t        // trigger insertion of <template> contents at that point in the document.\n\t        if (preprocessNode) {\n\t            while (currentChild = nextInQueue) {\n\t                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n\t                preprocessNode.call(provider, currentChild);\n\t            }\n\t            // Reset nextInQueue for the next loop\n\t            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n\t        }\n\t\n\t        while (currentChild = nextInQueue) {\n\t            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n\t            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n\t            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n\t        }\n\t    }\n\t\n\t    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n\t        var shouldBindDescendants = true;\n\t\n\t        // Perf optimisation: Apply bindings only if...\n\t        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n\t        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n\t        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n\t        var isElement = (nodeVerified.nodeType === 1);\n\t        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n\t            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\t\n\t        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n\t                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n\t        if (shouldApplyBindings)\n\t            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\t\n\t        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n\t            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n\t            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n\t            //    hence bindingContextsMayDifferFromDomParentElement is false\n\t            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n\t            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n\t            //    hence bindingContextsMayDifferFromDomParentElement is true\n\t            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n\t        }\n\t    }\n\t\n\t    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\t\n\t\n\t    function topologicalSortBindings(bindings) {\n\t        // Depth-first sort\n\t        var result = [],                // The list of key/handler pairs that we will return\n\t            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n\t            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n\t        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n\t            if (!bindingsConsidered[bindingKey]) {\n\t                var binding = ko['getBindingHandler'](bindingKey);\n\t                if (binding) {\n\t                    // First add dependencies (if any) of the current binding\n\t                    if (binding['after']) {\n\t                        cyclicDependencyStack.push(bindingKey);\n\t                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n\t                            if (bindings[bindingDependencyKey]) {\n\t                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n\t                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n\t                                } else {\n\t                                    pushBinding(bindingDependencyKey);\n\t                                }\n\t                            }\n\t                        });\n\t                        cyclicDependencyStack.length--;\n\t                    }\n\t                    // Next add the current binding\n\t                    result.push({ key: bindingKey, handler: binding });\n\t                }\n\t                bindingsConsidered[bindingKey] = true;\n\t            }\n\t        });\n\t\n\t        return result;\n\t    }\n\t\n\t    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n\t        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n\t        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n\t        if (!sourceBindings) {\n\t            if (alreadyBound) {\n\t                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n\t            }\n\t            ko.utils.domData.set(node, boundElementDomDataKey, true);\n\t        }\n\t\n\t        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n\t        // we can easily recover it just by scanning up the node's ancestors in the DOM\n\t        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n\t        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n\t            ko.storedBindingContextForNode(node, bindingContext);\n\t\n\t        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n\t        var bindings;\n\t        if (sourceBindings && typeof sourceBindings !== 'function') {\n\t            bindings = sourceBindings;\n\t        } else {\n\t            var provider = ko.bindingProvider['instance'],\n\t                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\t\n\t            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n\t            // the binding context is updated or if the binding provider accesses observables.\n\t            var bindingsUpdater = ko.dependentObservable(\n\t                function() {\n\t                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n\t                    // Register a dependency on the binding context to support observable view models.\n\t                    if (bindings && bindingContext._subscribable)\n\t                        bindingContext._subscribable();\n\t                    return bindings;\n\t                },\n\t                null, { disposeWhenNodeIsRemoved: node }\n\t            );\n\t\n\t            if (!bindings || !bindingsUpdater.isActive())\n\t                bindingsUpdater = null;\n\t        }\n\t\n\t        var bindingHandlerThatControlsDescendantBindings;\n\t        if (bindings) {\n\t            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n\t            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n\t            // the latest binding value and registers a dependency on the binding updater.\n\t            var getValueAccessor = bindingsUpdater\n\t                ? function(bindingKey) {\n\t                    return function() {\n\t                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n\t                    };\n\t                } : function(bindingKey) {\n\t                    return bindings[bindingKey];\n\t                };\n\t\n\t            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n\t            function allBindings() {\n\t                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n\t            }\n\t            // The following is the 3.x allBindings API\n\t            allBindings['get'] = function(key) {\n\t                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n\t            };\n\t            allBindings['has'] = function(key) {\n\t                return key in bindings;\n\t            };\n\t\n\t            // First put the bindings into the right order\n\t            var orderedBindings = topologicalSortBindings(bindings);\n\t\n\t            // Go through the sorted bindings, calling init and update for each\n\t            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n\t                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n\t                // so bindingKeyAndHandler.handler will always be nonnull.\n\t                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n\t                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n\t                    bindingKey = bindingKeyAndHandler.key;\n\t\n\t                if (node.nodeType === 8) {\n\t                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n\t                }\n\t\n\t                try {\n\t                    // Run init, ignoring any dependencies\n\t                    if (typeof handlerInitFn == \"function\") {\n\t                        ko.dependencyDetection.ignore(function() {\n\t                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\t\n\t                            // If this binding handler claims to control descendant bindings, make a note of this\n\t                            if (initResult && initResult['controlsDescendantBindings']) {\n\t                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n\t                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n\t                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n\t                            }\n\t                        });\n\t                    }\n\t\n\t                    // Run update in its own computed wrapper\n\t                    if (typeof handlerUpdateFn == \"function\") {\n\t                        ko.dependentObservable(\n\t                            function() {\n\t                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\t                            },\n\t                            null,\n\t                            { disposeWhenNodeIsRemoved: node }\n\t                        );\n\t                    }\n\t                } catch (ex) {\n\t                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n\t                    throw ex;\n\t                }\n\t            });\n\t        }\n\t\n\t        return {\n\t            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n\t        };\n\t    };\n\t\n\t    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n\t    ko.storedBindingContextForNode = function (node, bindingContext) {\n\t        if (arguments.length == 2) {\n\t            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n\t            if (bindingContext._subscribable)\n\t                bindingContext._subscribable._addNode(node);\n\t        } else {\n\t            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n\t        }\n\t    }\n\t\n\t    function getBindingContext(viewModelOrBindingContext) {\n\t        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n\t            ? viewModelOrBindingContext\n\t            : new ko.bindingContext(viewModelOrBindingContext);\n\t    }\n\t\n\t    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n\t        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n\t            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n\t        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n\t    };\n\t\n\t    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n\t        var context = getBindingContext(viewModelOrBindingContext);\n\t        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n\t    };\n\t\n\t    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n\t        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n\t            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n\t    };\n\t\n\t    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n\t        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n\t        if (!jQueryInstance && window['jQuery']) {\n\t            jQueryInstance = window['jQuery'];\n\t        }\n\t\n\t        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n\t            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n\t        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\t\n\t        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n\t    };\n\t\n\t    // Retrieving binding context from arbitrary nodes\n\t    ko.contextFor = function(node) {\n\t        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n\t        switch (node.nodeType) {\n\t            case 1:\n\t            case 8:\n\t                var context = ko.storedBindingContextForNode(node);\n\t                if (context) return context;\n\t                if (node.parentNode) return ko.contextFor(node.parentNode);\n\t                break;\n\t        }\n\t        return undefined;\n\t    };\n\t    ko.dataFor = function(node) {\n\t        var context = ko.contextFor(node);\n\t        return context ? context['$data'] : undefined;\n\t    };\n\t\n\t    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n\t    ko.exportSymbol('applyBindings', ko.applyBindings);\n\t    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n\t    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n\t    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n\t    ko.exportSymbol('contextFor', ko.contextFor);\n\t    ko.exportSymbol('dataFor', ko.dataFor);\n\t})();\n\t(function(undefined) {\n\t    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n\t        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\t\n\t    ko.components = {\n\t        get: function(componentName, callback) {\n\t            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n\t            if (cachedDefinition) {\n\t                // It's already loaded and cached. Reuse the same definition object.\n\t                // Note that for API consistency, even cache hits complete asynchronously by default.\n\t                // You can bypass this by putting synchronous:true on your component config.\n\t                if (cachedDefinition.isSynchronousComponent) {\n\t                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n\t                        callback(cachedDefinition.definition);\n\t                    });\n\t                } else {\n\t                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n\t                }\n\t            } else {\n\t                // Join the loading process that is already underway, or start a new one.\n\t                loadComponentAndNotify(componentName, callback);\n\t            }\n\t        },\n\t\n\t        clearCachedDefinition: function(componentName) {\n\t            delete loadedDefinitionsCache[componentName];\n\t        },\n\t\n\t        _getFirstResultFromLoaders: getFirstResultFromLoaders\n\t    };\n\t\n\t    function getObjectOwnProperty(obj, propName) {\n\t        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n\t    }\n\t\n\t    function loadComponentAndNotify(componentName, callback) {\n\t        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n\t            completedAsync;\n\t        if (!subscribable) {\n\t            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n\t            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n\t            subscribable.subscribe(callback);\n\t\n\t            beginLoadingComponent(componentName, function(definition, config) {\n\t                var isSynchronousComponent = !!(config && config['synchronous']);\n\t                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n\t                delete loadingSubscribablesCache[componentName];\n\t\n\t                // For API consistency, all loads complete asynchronously. However we want to avoid\n\t                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n\t                // async).\n\t                //\n\t                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n\t                // flag on your component configuration when you register it.\n\t                if (completedAsync || isSynchronousComponent) {\n\t                    // Note that notifySubscribers ignores any dependencies read within the callback.\n\t                    // See comment in loaderRegistryBehaviors.js for reasoning\n\t                    subscribable['notifySubscribers'](definition);\n\t                } else {\n\t                    ko.tasks.schedule(function() {\n\t                        subscribable['notifySubscribers'](definition);\n\t                    });\n\t                }\n\t            });\n\t            completedAsync = true;\n\t        } else {\n\t            subscribable.subscribe(callback);\n\t        }\n\t    }\n\t\n\t    function beginLoadingComponent(componentName, callback) {\n\t        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n\t            if (config) {\n\t                // We have a config, so now load its definition\n\t                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n\t                    callback(definition, config);\n\t                });\n\t            } else {\n\t                // The component has no config - it's unknown to all the loaders.\n\t                // Note that this is not an error (e.g., a module loading error) - that would abort the\n\t                // process and this callback would not run. For this callback to run, all loaders must\n\t                // have confirmed they don't know about this component.\n\t                callback(null, null);\n\t            }\n\t        });\n\t    }\n\t\n\t    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n\t        // On the first call in the stack, start with the full set of loaders\n\t        if (!candidateLoaders) {\n\t            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n\t        }\n\t\n\t        // Try the next candidate\n\t        var currentCandidateLoader = candidateLoaders.shift();\n\t        if (currentCandidateLoader) {\n\t            var methodInstance = currentCandidateLoader[methodName];\n\t            if (methodInstance) {\n\t                var wasAborted = false,\n\t                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n\t                        if (wasAborted) {\n\t                            callback(null);\n\t                        } else if (result !== null) {\n\t                            // This candidate returned a value. Use it.\n\t                            callback(result);\n\t                        } else {\n\t                            // Try the next candidate\n\t                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n\t                        }\n\t                    }));\n\t\n\t                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n\t                // that we'll extend the API to support synchronous return values in the future. It won't be\n\t                // a breaking change, because currently no loader is allowed to return anything except undefined.\n\t                if (synchronousReturnValue !== undefined) {\n\t                    wasAborted = true;\n\t\n\t                    // Method to suppress exceptions will remain undocumented. This is only to keep\n\t                    // KO's specs running tidily, since we can observe the loading got aborted without\n\t                    // having exceptions cluttering up the console too.\n\t                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n\t                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n\t                    }\n\t                }\n\t            } else {\n\t                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n\t                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n\t            }\n\t        } else {\n\t            // No candidates returned a value\n\t            callback(null);\n\t        }\n\t    }\n\t\n\t    // Reference the loaders via string name so it's possible for developers\n\t    // to replace the whole array by assigning to ko.components.loaders\n\t    ko.components['loaders'] = [];\n\t\n\t    ko.exportSymbol('components', ko.components);\n\t    ko.exportSymbol('components.get', ko.components.get);\n\t    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n\t})();\n\t(function(undefined) {\n\t\n\t    // The default loader is responsible for two things:\n\t    // 1. Maintaining the default in-memory registry of component configuration objects\n\t    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n\t    // 2. Answering requests for components by fetching configuration objects\n\t    //    from that default in-memory registry and resolving them into standard\n\t    //    component definition objects (of the form { createViewModel: ..., template: ... })\n\t    // Custom loaders may override either of these facilities, i.e.,\n\t    // 1. To supply configuration objects from some other source (e.g., conventions)\n\t    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\t\n\t    var defaultConfigRegistry = {};\n\t\n\t    ko.components.register = function(componentName, config) {\n\t        if (!config) {\n\t            throw new Error('Invalid configuration for ' + componentName);\n\t        }\n\t\n\t        if (ko.components.isRegistered(componentName)) {\n\t            throw new Error('Component ' + componentName + ' is already registered');\n\t        }\n\t\n\t        defaultConfigRegistry[componentName] = config;\n\t    };\n\t\n\t    ko.components.isRegistered = function(componentName) {\n\t        return defaultConfigRegistry.hasOwnProperty(componentName);\n\t    };\n\t\n\t    ko.components.unregister = function(componentName) {\n\t        delete defaultConfigRegistry[componentName];\n\t        ko.components.clearCachedDefinition(componentName);\n\t    };\n\t\n\t    ko.components.defaultLoader = {\n\t        'getConfig': function(componentName, callback) {\n\t            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n\t                ? defaultConfigRegistry[componentName]\n\t                : null;\n\t            callback(result);\n\t        },\n\t\n\t        'loadComponent': function(componentName, config, callback) {\n\t            var errorCallback = makeErrorCallback(componentName);\n\t            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n\t                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n\t            });\n\t        },\n\t\n\t        'loadTemplate': function(componentName, templateConfig, callback) {\n\t            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n\t        },\n\t\n\t        'loadViewModel': function(componentName, viewModelConfig, callback) {\n\t            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n\t        }\n\t    };\n\t\n\t    var createViewModelKey = 'createViewModel';\n\t\n\t    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n\t    // into the standard component definition format:\n\t    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n\t    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n\t    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n\t    // so this is implemented manually below.\n\t    function resolveConfig(componentName, errorCallback, config, callback) {\n\t        var result = {},\n\t            makeCallBackWhenZero = 2,\n\t            tryIssueCallback = function() {\n\t                if (--makeCallBackWhenZero === 0) {\n\t                    callback(result);\n\t                }\n\t            },\n\t            templateConfig = config['template'],\n\t            viewModelConfig = config['viewModel'];\n\t\n\t        if (templateConfig) {\n\t            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n\t                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n\t                    result['template'] = resolvedTemplate;\n\t                    tryIssueCallback();\n\t                });\n\t            });\n\t        } else {\n\t            tryIssueCallback();\n\t        }\n\t\n\t        if (viewModelConfig) {\n\t            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n\t                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n\t                    result[createViewModelKey] = resolvedViewModel;\n\t                    tryIssueCallback();\n\t                });\n\t            });\n\t        } else {\n\t            tryIssueCallback();\n\t        }\n\t    }\n\t\n\t    function resolveTemplate(errorCallback, templateConfig, callback) {\n\t        if (typeof templateConfig === 'string') {\n\t            // Markup - parse it\n\t            callback(ko.utils.parseHtmlFragment(templateConfig));\n\t        } else if (templateConfig instanceof Array) {\n\t            // Assume already an array of DOM nodes - pass through unchanged\n\t            callback(templateConfig);\n\t        } else if (isDocumentFragment(templateConfig)) {\n\t            // Document fragment - use its child nodes\n\t            callback(ko.utils.makeArray(templateConfig.childNodes));\n\t        } else if (templateConfig['element']) {\n\t            var element = templateConfig['element'];\n\t            if (isDomElement(element)) {\n\t                // Element instance - copy its child nodes\n\t                callback(cloneNodesFromTemplateSourceElement(element));\n\t            } else if (typeof element === 'string') {\n\t                // Element ID - find it, then copy its child nodes\n\t                var elemInstance = document.getElementById(element);\n\t                if (elemInstance) {\n\t                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n\t                } else {\n\t                    errorCallback('Cannot find element with ID ' + element);\n\t                }\n\t            } else {\n\t                errorCallback('Unknown element type: ' + element);\n\t            }\n\t        } else {\n\t            errorCallback('Unknown template value: ' + templateConfig);\n\t        }\n\t    }\n\t\n\t    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n\t        if (typeof viewModelConfig === 'function') {\n\t            // Constructor - convert to standard factory function format\n\t            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n\t            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n\t            // be used in factory functions, not viewmodel constructors.\n\t            callback(function (params /*, componentInfo */) {\n\t                return new viewModelConfig(params);\n\t            });\n\t        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n\t            // Already a factory function - use it as-is\n\t            callback(viewModelConfig[createViewModelKey]);\n\t        } else if ('instance' in viewModelConfig) {\n\t            // Fixed object instance - promote to createViewModel format for API consistency\n\t            var fixedInstance = viewModelConfig['instance'];\n\t            callback(function (params, componentInfo) {\n\t                return fixedInstance;\n\t            });\n\t        } else if ('viewModel' in viewModelConfig) {\n\t            // Resolved AMD module whose value is of the form { viewModel: ... }\n\t            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n\t        } else {\n\t            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n\t        }\n\t    }\n\t\n\t    function cloneNodesFromTemplateSourceElement(elemInstance) {\n\t        switch (ko.utils.tagNameLower(elemInstance)) {\n\t            case 'script':\n\t                return ko.utils.parseHtmlFragment(elemInstance.text);\n\t            case 'textarea':\n\t                return ko.utils.parseHtmlFragment(elemInstance.value);\n\t            case 'template':\n\t                // For browsers with proper <template> element support (i.e., where the .content property\n\t                // gives a document fragment), use that document fragment.\n\t                if (isDocumentFragment(elemInstance.content)) {\n\t                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n\t                }\n\t        }\n\t\n\t        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n\t        // understand <template> and just treat it as a regular container\n\t        return ko.utils.cloneNodes(elemInstance.childNodes);\n\t    }\n\t\n\t    function isDomElement(obj) {\n\t        if (window['HTMLElement']) {\n\t            return obj instanceof HTMLElement;\n\t        } else {\n\t            return obj && obj.tagName && obj.nodeType === 1;\n\t        }\n\t    }\n\t\n\t    function isDocumentFragment(obj) {\n\t        if (window['DocumentFragment']) {\n\t            return obj instanceof DocumentFragment;\n\t        } else {\n\t            return obj && obj.nodeType === 11;\n\t        }\n\t    }\n\t\n\t    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n\t        if (typeof config['require'] === 'string') {\n\t            // The config is the value of an AMD module\n\t            if (amdRequire || window['require']) {\n\t                (amdRequire || window['require'])([config['require']], callback);\n\t            } else {\n\t                errorCallback('Uses require, but no AMD loader is present');\n\t            }\n\t        } else {\n\t            callback(config);\n\t        }\n\t    }\n\t\n\t    function makeErrorCallback(componentName) {\n\t        return function (message) {\n\t            throw new Error('Component \\'' + componentName + '\\': ' + message);\n\t        };\n\t    }\n\t\n\t    ko.exportSymbol('components.register', ko.components.register);\n\t    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n\t    ko.exportSymbol('components.unregister', ko.components.unregister);\n\t\n\t    // Expose the default loader so that developers can directly ask it for configuration\n\t    // or to resolve configuration\n\t    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\t\n\t    // By default, the default loader is the only registered component loader\n\t    ko.components['loaders'].push(ko.components.defaultLoader);\n\t\n\t    // Privately expose the underlying config registry for use in old-IE shim\n\t    ko.components._allRegisteredComponents = defaultConfigRegistry;\n\t})();\n\t(function (undefined) {\n\t    // Overridable API for determining which component name applies to a given node. By overriding this,\n\t    // you can for example map specific tagNames to components that are not preregistered.\n\t    ko.components['getComponentNameForNode'] = function(node) {\n\t        var tagNameLower = ko.utils.tagNameLower(node);\n\t        if (ko.components.isRegistered(tagNameLower)) {\n\t            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n\t            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n\t                return tagNameLower;\n\t            }\n\t        }\n\t    };\n\t\n\t    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n\t        // Determine if it's really a custom element matching a component\n\t        if (node.nodeType === 1) {\n\t            var componentName = ko.components['getComponentNameForNode'](node);\n\t            if (componentName) {\n\t                // It does represent a component, so add a component binding for it\n\t                allBindings = allBindings || {};\n\t\n\t                if (allBindings['component']) {\n\t                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n\t                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n\t                }\n\t\n\t                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\t\n\t                allBindings['component'] = valueAccessors\n\t                    ? function() { return componentBindingValue; }\n\t                    : componentBindingValue;\n\t            }\n\t        }\n\t\n\t        return allBindings;\n\t    }\n\t\n\t    var nativeBindingProviderInstance = new ko.bindingProvider();\n\t\n\t    function getComponentParamsFromCustomElement(elem, bindingContext) {\n\t        var paramsAttribute = elem.getAttribute('params');\n\t\n\t        if (paramsAttribute) {\n\t            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n\t                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n\t                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n\t                }),\n\t                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n\t                    var paramValue = paramValueComputed.peek();\n\t                    // Does the evaluation of the parameter value unwrap any observables?\n\t                    if (!paramValueComputed.isActive()) {\n\t                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n\t                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n\t                        return paramValue;\n\t                    } else {\n\t                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n\t                        // level of observability, and any inner (resulting model value) level of observability.\n\t                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n\t                        // writable observable, the computed will also be writable and pass the value on to the observable.\n\t                        return ko.computed({\n\t                            'read': function() {\n\t                                return ko.utils.unwrapObservable(paramValueComputed());\n\t                            },\n\t                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n\t                                paramValueComputed()(value);\n\t                            },\n\t                            disposeWhenNodeIsRemoved: elem\n\t                        });\n\t                    }\n\t                });\n\t\n\t            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n\t            // This is in case the developer wants to react to outer (binding) observability separately from inner\n\t            // (model value) observability, or in case the model value observable has subobservables.\n\t            if (!result.hasOwnProperty('$raw')) {\n\t                result['$raw'] = rawParamComputedValues;\n\t            }\n\t\n\t            return result;\n\t        } else {\n\t            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n\t            // any empty one. Otherwise component viewmodels need special code to check whether or not\n\t            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n\t            return { '$raw': {} };\n\t        }\n\t    }\n\t\n\t    // --------------------------------------------------------------------------------\n\t    // Compatibility code for older (pre-HTML5) IE browsers\n\t\n\t    if (ko.utils.ieVersion < 9) {\n\t        // Whenever you preregister a component, enable it as a custom element in the current document\n\t        ko.components['register'] = (function(originalFunction) {\n\t            return function(componentName) {\n\t                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n\t                return originalFunction.apply(this, arguments);\n\t            }\n\t        })(ko.components['register']);\n\t\n\t        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n\t        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n\t        document.createDocumentFragment = (function(originalFunction) {\n\t            return function() {\n\t                var newDocFrag = originalFunction(),\n\t                    allComponents = ko.components._allRegisteredComponents;\n\t                for (var componentName in allComponents) {\n\t                    if (allComponents.hasOwnProperty(componentName)) {\n\t                        newDocFrag.createElement(componentName);\n\t                    }\n\t                }\n\t                return newDocFrag;\n\t            };\n\t        })(document.createDocumentFragment);\n\t    }\n\t})();(function(undefined) {\n\t\n\t    var componentLoadingOperationUniqueId = 0;\n\t\n\t    ko.bindingHandlers['component'] = {\n\t        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n\t            var currentViewModel,\n\t                currentLoadingOperationId,\n\t                disposeAssociatedComponentViewModel = function () {\n\t                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n\t                    if (typeof currentViewModelDispose === 'function') {\n\t                        currentViewModelDispose.call(currentViewModel);\n\t                    }\n\t                    currentViewModel = null;\n\t                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n\t                    currentLoadingOperationId = null;\n\t                },\n\t                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\t\n\t            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\t\n\t            ko.computed(function () {\n\t                var value = ko.utils.unwrapObservable(valueAccessor()),\n\t                    componentName, componentParams;\n\t\n\t                if (typeof value === 'string') {\n\t                    componentName = value;\n\t                } else {\n\t                    componentName = ko.utils.unwrapObservable(value['name']);\n\t                    componentParams = ko.utils.unwrapObservable(value['params']);\n\t                }\n\t\n\t                if (!componentName) {\n\t                    throw new Error('No component name specified');\n\t                }\n\t\n\t                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n\t                ko.components.get(componentName, function(componentDefinition) {\n\t                    // If this is not the current load operation for this element, ignore it.\n\t                    if (currentLoadingOperationId !== loadingOperationId) {\n\t                        return;\n\t                    }\n\t\n\t                    // Clean up previous state\n\t                    disposeAssociatedComponentViewModel();\n\t\n\t                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n\t                    if (!componentDefinition) {\n\t                        throw new Error('Unknown component \\'' + componentName + '\\'');\n\t                    }\n\t                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n\t                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n\t                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n\t                            ctx['$component'] = componentViewModel;\n\t                            ctx['$componentTemplateNodes'] = originalChildNodes;\n\t                        });\n\t                    currentViewModel = componentViewModel;\n\t                    ko.applyBindingsToDescendants(childBindingContext, element);\n\t                });\n\t            }, null, { disposeWhenNodeIsRemoved: element });\n\t\n\t            return { 'controlsDescendantBindings': true };\n\t        }\n\t    };\n\t\n\t    ko.virtualElements.allowedBindings['component'] = true;\n\t\n\t    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n\t        var template = componentDefinition['template'];\n\t        if (!template) {\n\t            throw new Error('Component \\'' + componentName + '\\' has no template');\n\t        }\n\t\n\t        var clonedNodesArray = ko.utils.cloneNodes(template);\n\t        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n\t    }\n\t\n\t    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n\t        var componentViewModelFactory = componentDefinition['createViewModel'];\n\t        return componentViewModelFactory\n\t            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n\t            : componentParams; // Template-only component\n\t    }\n\t\n\t})();\n\tvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\n\tko.bindingHandlers['attr'] = {\n\t    'update': function(element, valueAccessor, allBindings) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n\t        ko.utils.objectForEach(value, function(attrName, attrValue) {\n\t            attrValue = ko.utils.unwrapObservable(attrValue);\n\t\n\t            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n\t            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n\t            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n\t            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n\t            if (toRemove)\n\t                element.removeAttribute(attrName);\n\t\n\t            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n\t            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n\t            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n\t            // property for IE <= 8.\n\t            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n\t                attrName = attrHtmlToJavascriptMap[attrName];\n\t                if (toRemove)\n\t                    element.removeAttribute(attrName);\n\t                else\n\t                    element[attrName] = attrValue;\n\t            } else if (!toRemove) {\n\t                element.setAttribute(attrName, attrValue.toString());\n\t            }\n\t\n\t            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n\t            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n\t            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n\t            // entirely, and there's no strong reason to allow for such casing in HTML.\n\t            if (attrName === \"name\") {\n\t                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n\t            }\n\t        });\n\t    }\n\t};\n\t(function() {\n\t\n\tko.bindingHandlers['checked'] = {\n\t    'after': ['value', 'attr'],\n\t    'init': function (element, valueAccessor, allBindings) {\n\t        var checkedValue = ko.pureComputed(function() {\n\t            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n\t            if (allBindings['has']('checkedValue')) {\n\t                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n\t            } else if (allBindings['has']('value')) {\n\t                return ko.utils.unwrapObservable(allBindings.get('value'));\n\t            }\n\t\n\t            return element.value;\n\t        });\n\t\n\t        function updateModel() {\n\t            // This updates the model value from the view value.\n\t            // It runs in response to DOM events (click) and changes in checkedValue.\n\t            var isChecked = element.checked,\n\t                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\t\n\t            // When we're first setting up this computed, don't change any model state.\n\t            if (ko.computedContext.isInitial()) {\n\t                return;\n\t            }\n\t\n\t            // We can ignore unchecked radio buttons, because some other radio\n\t            // button will be getting checked, and that one can take care of updating state.\n\t            if (isRadio && !isChecked) {\n\t                return;\n\t            }\n\t\n\t            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n\t            if (valueIsArray) {\n\t                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n\t                if (oldElemValue !== elemValue) {\n\t                    // When we're responding to the checkedValue changing, and the element is\n\t                    // currently checked, replace the old elem value with the new elem value\n\t                    // in the model array.\n\t                    if (isChecked) {\n\t                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n\t                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n\t                    }\n\t\n\t                    oldElemValue = elemValue;\n\t                } else {\n\t                    // When we're responding to the user having checked/unchecked a checkbox,\n\t                    // add/remove the element value to the model array.\n\t                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n\t                }\n\t                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n\t                    modelValue(writableValue);\n\t                }\n\t            } else {\n\t                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n\t            }\n\t        };\n\t\n\t        function updateView() {\n\t            // This updates the view value from the model value.\n\t            // It runs in response to changes in the bound (checked) value.\n\t            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\t\n\t            if (valueIsArray) {\n\t                // When a checkbox is bound to an array, being checked represents its value being present in that array\n\t                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n\t            } else if (isCheckbox) {\n\t                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n\t                element.checked = modelValue;\n\t            } else {\n\t                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n\t                element.checked = (checkedValue() === modelValue);\n\t            }\n\t        };\n\t\n\t        var isCheckbox = element.type == \"checkbox\",\n\t            isRadio = element.type == \"radio\";\n\t\n\t        // Only bind to check boxes and radio buttons\n\t        if (!isCheckbox && !isRadio) {\n\t            return;\n\t        }\n\t\n\t        var rawValue = valueAccessor(),\n\t            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n\t            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n\t            oldElemValue = valueIsArray ? checkedValue() : undefined,\n\t            useCheckedValue = isRadio || valueIsArray;\n\t\n\t        // IE 6 won't allow radio buttons to be selected unless they have a name\n\t        if (isRadio && !element.name)\n\t            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\t\n\t        // Set up two computeds to update the binding:\n\t\n\t        // The first responds to changes in the checkedValue value and to element clicks\n\t        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n\t        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\t\n\t        // The second responds to changes in the model value (the one associated with the checked binding)\n\t        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\t\n\t        rawValue = undefined;\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['checked'] = true;\n\t\n\tko.bindingHandlers['checkedValue'] = {\n\t    'update': function (element, valueAccessor) {\n\t        element.value = ko.utils.unwrapObservable(valueAccessor());\n\t    }\n\t};\n\t\n\t})();var classesWrittenByBindingKey = '__ko__cssValue';\n\tko.bindingHandlers['css'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor());\n\t        if (value !== null && typeof value == \"object\") {\n\t            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n\t                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n\t                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n\t            });\n\t        } else {\n\t            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n\t            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n\t            element[classesWrittenByBindingKey] = value;\n\t            ko.utils.toggleDomNodeCssClass(element, value, true);\n\t        }\n\t    }\n\t};\n\tko.bindingHandlers['enable'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor());\n\t        if (value && element.disabled)\n\t            element.removeAttribute(\"disabled\");\n\t        else if ((!value) && (!element.disabled))\n\t            element.disabled = true;\n\t    }\n\t};\n\t\n\tko.bindingHandlers['disable'] = {\n\t    'update': function (element, valueAccessor) {\n\t        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n\t    }\n\t};\n\t// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n\t// e.g. click:handler instead of the usual full-length event:{click:handler}\n\tfunction makeEventHandlerShortcut(eventName) {\n\t    ko.bindingHandlers[eventName] = {\n\t        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t            var newValueAccessor = function () {\n\t                var result = {};\n\t                result[eventName] = valueAccessor();\n\t                return result;\n\t            };\n\t            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n\t        }\n\t    }\n\t}\n\t\n\tko.bindingHandlers['event'] = {\n\t    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        var eventsToHandle = valueAccessor() || {};\n\t        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n\t            if (typeof eventName == \"string\") {\n\t                ko.utils.registerEventHandler(element, eventName, function (event) {\n\t                    var handlerReturnValue;\n\t                    var handlerFunction = valueAccessor()[eventName];\n\t                    if (!handlerFunction)\n\t                        return;\n\t\n\t                    try {\n\t                        // Take all the event args, and prefix with the viewmodel\n\t                        var argsForHandler = ko.utils.makeArray(arguments);\n\t                        viewModel = bindingContext['$data'];\n\t                        argsForHandler.unshift(viewModel);\n\t                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n\t                    } finally {\n\t                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n\t                            if (event.preventDefault)\n\t                                event.preventDefault();\n\t                            else\n\t                                event.returnValue = false;\n\t                        }\n\t                    }\n\t\n\t                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n\t                    if (!bubble) {\n\t                        event.cancelBubble = true;\n\t                        if (event.stopPropagation)\n\t                            event.stopPropagation();\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    }\n\t};\n\t// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n\t// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\n\tko.bindingHandlers['foreach'] = {\n\t    makeTemplateValueAccessor: function(valueAccessor) {\n\t        return function() {\n\t            var modelValue = valueAccessor(),\n\t                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\t\n\t            // If unwrappedValue is the array, pass in the wrapped value on its own\n\t            // The value will be unwrapped and tracked within the template binding\n\t            // (See https://github.com/SteveSanderson/knockout/issues/523)\n\t            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n\t                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\t\n\t            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n\t            ko.utils.unwrapObservable(modelValue);\n\t            return {\n\t                'foreach': unwrappedValue['data'],\n\t                'as': unwrappedValue['as'],\n\t                'includeDestroyed': unwrappedValue['includeDestroyed'],\n\t                'afterAdd': unwrappedValue['afterAdd'],\n\t                'beforeRemove': unwrappedValue['beforeRemove'],\n\t                'afterRender': unwrappedValue['afterRender'],\n\t                'beforeMove': unwrappedValue['beforeMove'],\n\t                'afterMove': unwrappedValue['afterMove'],\n\t                'templateEngine': ko.nativeTemplateEngine.instance\n\t            };\n\t        };\n\t    },\n\t    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n\t    },\n\t    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n\t    }\n\t};\n\tko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\n\tko.virtualElements.allowedBindings['foreach'] = true;\n\tvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\n\tvar hasfocusLastValue = '__ko_hasfocusLastValue';\n\tko.bindingHandlers['hasfocus'] = {\n\t    'init': function(element, valueAccessor, allBindings) {\n\t        var handleElementFocusChange = function(isFocused) {\n\t            // Where possible, ignore which event was raised and determine focus state using activeElement,\n\t            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n\t            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n\t            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n\t            // from calling 'blur()' on the element when it loses focus.\n\t            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n\t            element[hasfocusUpdatingProperty] = true;\n\t            var ownerDoc = element.ownerDocument;\n\t            if (\"activeElement\" in ownerDoc) {\n\t                var active;\n\t                try {\n\t                    active = ownerDoc.activeElement;\n\t                } catch(e) {\n\t                    // IE9 throws if you access activeElement during page load (see issue #703)\n\t                    active = ownerDoc.body;\n\t                }\n\t                isFocused = (active === element);\n\t            }\n\t            var modelValue = valueAccessor();\n\t            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\t\n\t            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n\t            element[hasfocusLastValue] = isFocused;\n\t            element[hasfocusUpdatingProperty] = false;\n\t        };\n\t        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n\t        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\t\n\t        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n\t        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n\t        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n\t        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n\t    },\n\t    'update': function(element, valueAccessor) {\n\t        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\t\n\t        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n\t            value ? element.focus() : element.blur();\n\t\n\t            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n\t            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n\t            // element was focused already.\n\t            if (!value && element[hasfocusLastValue]) {\n\t                element.ownerDocument.body.focus();\n\t            }\n\t\n\t            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n\t            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n\t        }\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\t\n\tko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\n\tko.expressionRewriting.twoWayBindings['hasFocus'] = true;\n\tko.bindingHandlers['html'] = {\n\t    'init': function() {\n\t        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n\t        return { 'controlsDescendantBindings': true };\n\t    },\n\t    'update': function (element, valueAccessor) {\n\t        // setHtml will unwrap the value if needed\n\t        ko.utils.setHtml(element, valueAccessor());\n\t    }\n\t};\n\t// Makes a binding like with or if\n\tfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n\t    ko.bindingHandlers[bindingKey] = {\n\t        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t            var didDisplayOnLastUpdate,\n\t                savedNodes;\n\t            ko.computed(function() {\n\t                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\n\t                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n\t                    isFirstRender = !savedNodes,\n\t                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\t\n\t                if (needsRefresh) {\n\t                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n\t                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n\t                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n\t                    }\n\t\n\t                    if (shouldDisplay) {\n\t                        if (!isFirstRender) {\n\t                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n\t                        }\n\t                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\n\t                    } else {\n\t                        ko.virtualElements.emptyNode(element);\n\t                    }\n\t\n\t                    didDisplayOnLastUpdate = shouldDisplay;\n\t                }\n\t            }, null, { disposeWhenNodeIsRemoved: element });\n\t            return { 'controlsDescendantBindings': true };\n\t        }\n\t    };\n\t    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n\t    ko.virtualElements.allowedBindings[bindingKey] = true;\n\t}\n\t\n\t// Construct the actual binding handlers\n\tmakeWithIfBinding('if');\n\tmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\n\tmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n\t    function(bindingContext, dataValue) {\n\t        return bindingContext['createChildContext'](dataValue);\n\t    }\n\t);\n\tvar captionPlaceholder = {};\n\tko.bindingHandlers['options'] = {\n\t    'init': function(element) {\n\t        if (ko.utils.tagNameLower(element) !== \"select\")\n\t            throw new Error(\"options binding applies only to SELECT elements\");\n\t\n\t        // Remove all existing <option>s.\n\t        while (element.length > 0) {\n\t            element.remove(0);\n\t        }\n\t\n\t        // Ensures that the binding processor doesn't try to bind the options\n\t        return { 'controlsDescendantBindings': true };\n\t    },\n\t    'update': function (element, valueAccessor, allBindings) {\n\t        function selectedOptions() {\n\t            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n\t        }\n\t\n\t        var selectWasPreviouslyEmpty = element.length == 0,\n\t            multiple = element.multiple,\n\t            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n\t            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n\t            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n\t            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n\t            arrayToDomNodeChildrenOptions = {},\n\t            captionValue,\n\t            filteredArray,\n\t            previousSelectedValues = [];\n\t\n\t        if (!valueAllowUnset) {\n\t            if (multiple) {\n\t                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n\t            } else if (element.selectedIndex >= 0) {\n\t                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n\t            }\n\t        }\n\t\n\t        if (unwrappedArray) {\n\t            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n\t                unwrappedArray = [unwrappedArray];\n\t\n\t            // Filter out any entries marked as destroyed\n\t            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n\t                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n\t            });\n\t\n\t            // If caption is included, add it to the array\n\t            if (allBindings['has']('optionsCaption')) {\n\t                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n\t                // If caption value is null or undefined, don't show a caption\n\t                if (captionValue !== null && captionValue !== undefined) {\n\t                    filteredArray.unshift(captionPlaceholder);\n\t                }\n\t            }\n\t        } else {\n\t            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n\t        }\n\t\n\t        function applyToObject(object, predicate, defaultValue) {\n\t            var predicateType = typeof predicate;\n\t            if (predicateType == \"function\")    // Given a function; run it against the data value\n\t                return predicate(object);\n\t            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n\t                return object[predicate];\n\t            else                                // Given no optionsText arg; use the data value itself\n\t                return defaultValue;\n\t        }\n\t\n\t        // The following functions can run at two different times:\n\t        // The first is when the whole array is being updated directly from this binding handler.\n\t        // The second is when an observable value for a specific array entry is updated.\n\t        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n\t        var itemUpdate = false;\n\t        function optionForArrayItem(arrayEntry, index, oldOptions) {\n\t            if (oldOptions.length) {\n\t                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n\t                itemUpdate = true;\n\t            }\n\t            var option = element.ownerDocument.createElement(\"option\");\n\t            if (arrayEntry === captionPlaceholder) {\n\t                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n\t                ko.selectExtensions.writeValue(option, undefined);\n\t            } else {\n\t                // Apply a value to the option element\n\t                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n\t                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\t\n\t                // Apply some text to the option element\n\t                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n\t                ko.utils.setTextContent(option, optionText);\n\t            }\n\t            return [option];\n\t        }\n\t\n\t        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n\t        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n\t        arrayToDomNodeChildrenOptions['beforeRemove'] =\n\t            function (option) {\n\t                element.removeChild(option);\n\t            };\n\t\n\t        function setSelectionCallback(arrayEntry, newOptions) {\n\t            if (itemUpdate && valueAllowUnset) {\n\t                // The model value is authoritative, so make sure its value is the one selected\n\t                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n\t                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n\t            } else if (previousSelectedValues.length) {\n\t                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n\t                // That's why we first added them without selection. Now it's time to set the selection.\n\t                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n\t                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\t\n\t                // If this option was changed from being selected during a single-item update, notify the change\n\t                if (itemUpdate && !isSelected) {\n\t                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n\t                }\n\t            }\n\t        }\n\t\n\t        var callback = setSelectionCallback;\n\t        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n\t            callback = function(arrayEntry, newOptions) {\n\t                setSelectionCallback(arrayEntry, newOptions);\n\t                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n\t            }\n\t        }\n\t\n\t        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\t\n\t        ko.dependencyDetection.ignore(function () {\n\t            if (valueAllowUnset) {\n\t                // The model value is authoritative, so make sure its value is the one selected\n\t                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n\t            } else {\n\t                // Determine if the selection has changed as a result of updating the options list\n\t                var selectionChanged;\n\t                if (multiple) {\n\t                    // For a multiple-select box, compare the new selection count to the previous one\n\t                    // But if nothing was selected before, the selection can't have changed\n\t                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n\t                } else {\n\t                    // For a single-select box, compare the current value to the previous value\n\t                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n\t                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n\t                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n\t                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n\t                }\n\t\n\t                // Ensure consistency between model value and selected option.\n\t                // If the dropdown was changed so that selection is no longer the same,\n\t                // notify the value or selectedOptions binding.\n\t                if (selectionChanged) {\n\t                    ko.utils.triggerEvent(element, \"change\");\n\t                }\n\t            }\n\t        });\n\t\n\t        // Workaround for IE bug\n\t        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\t\n\t        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n\t            element.scrollTop = previousScrollTop;\n\t    }\n\t};\n\tko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\n\tko.bindingHandlers['selectedOptions'] = {\n\t    'after': ['options', 'foreach'],\n\t    'init': function (element, valueAccessor, allBindings) {\n\t        ko.utils.registerEventHandler(element, \"change\", function () {\n\t            var value = valueAccessor(), valueToWrite = [];\n\t            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n\t                if (node.selected)\n\t                    valueToWrite.push(ko.selectExtensions.readValue(node));\n\t            });\n\t            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n\t        });\n\t    },\n\t    'update': function (element, valueAccessor) {\n\t        if (ko.utils.tagNameLower(element) != \"select\")\n\t            throw new Error(\"values binding applies only to SELECT elements\");\n\t\n\t        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n\t            previousScrollTop = element.scrollTop;\n\t\n\t        if (newValue && typeof newValue.length == \"number\") {\n\t            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n\t                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n\t                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n\t                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n\t                }\n\t            });\n\t        }\n\t\n\t        element.scrollTop = previousScrollTop;\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\n\tko.bindingHandlers['style'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n\t        ko.utils.objectForEach(value, function(styleName, styleValue) {\n\t            styleValue = ko.utils.unwrapObservable(styleValue);\n\t\n\t            if (styleValue === null || styleValue === undefined || styleValue === false) {\n\t                // Empty string removes the value, whereas null/undefined have no effect\n\t                styleValue = \"\";\n\t            }\n\t\n\t            element.style[styleName] = styleValue;\n\t        });\n\t    }\n\t};\n\tko.bindingHandlers['submit'] = {\n\t    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t        if (typeof valueAccessor() != \"function\")\n\t            throw new Error(\"The value for a submit binding must be a function\");\n\t        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n\t            var handlerReturnValue;\n\t            var value = valueAccessor();\n\t            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n\t            finally {\n\t                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n\t                    if (event.preventDefault)\n\t                        event.preventDefault();\n\t                    else\n\t                        event.returnValue = false;\n\t                }\n\t            }\n\t        });\n\t    }\n\t};\n\tko.bindingHandlers['text'] = {\n\t    'init': function() {\n\t        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n\t        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n\t        return { 'controlsDescendantBindings': true };\n\t    },\n\t    'update': function (element, valueAccessor) {\n\t        ko.utils.setTextContent(element, valueAccessor());\n\t    }\n\t};\n\tko.virtualElements.allowedBindings['text'] = true;\n\t(function () {\n\t\n\tif (window && window.navigator) {\n\t    var parseVersion = function (matches) {\n\t        if (matches) {\n\t            return parseFloat(matches[1]);\n\t        }\n\t    };\n\t\n\t    // Detect various browser versions because some old versions don't fully support the 'input' event\n\t    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n\t        userAgent = window.navigator.userAgent,\n\t        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n\t        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n\t}\n\t\n\t// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n\t// But it does fire the 'selectionchange' event on many of those, presumably because the\n\t// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n\t// fired at the document level only and doesn't directly indicate which element changed. We\n\t// set up just one event handler for the document and use 'activeElement' to determine which\n\t// element was changed.\n\tif (ko.utils.ieVersion < 10) {\n\t    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n\t        selectionChangeHandlerName = ko.utils.domData.nextKey();\n\t    var selectionChangeHandler = function(event) {\n\t        var target = this.activeElement,\n\t            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n\t        if (handler) {\n\t            handler(event);\n\t        }\n\t    };\n\t    var registerForSelectionChangeEvent = function (element, handler) {\n\t        var ownerDoc = element.ownerDocument;\n\t        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n\t            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n\t            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n\t        }\n\t        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n\t    };\n\t}\n\t\n\tko.bindingHandlers['textInput'] = {\n\t    'init': function (element, valueAccessor, allBindings) {\n\t\n\t        var previousElementValue = element.value,\n\t            timeoutHandle,\n\t            elementValueBeforeEvent;\n\t\n\t        var updateModel = function (event) {\n\t            clearTimeout(timeoutHandle);\n\t            elementValueBeforeEvent = timeoutHandle = undefined;\n\t\n\t            var elementValue = element.value;\n\t            if (previousElementValue !== elementValue) {\n\t                // Provide a way for tests to know exactly which event was processed\n\t                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n\t                previousElementValue = elementValue;\n\t                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n\t            }\n\t        };\n\t\n\t        var deferUpdateModel = function (event) {\n\t            if (!timeoutHandle) {\n\t                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n\t                // event firing and the updateModel function running. This allows us to ignore model\n\t                // updates that are from the previous state of the element, usually due to techniques\n\t                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n\t                elementValueBeforeEvent = element.value;\n\t                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n\t                timeoutHandle = ko.utils.setTimeout(handler, 4);\n\t            }\n\t        };\n\t\n\t        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n\t        // so we'll make sure all updates are asynchronous\n\t        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\t\n\t        var updateView = function () {\n\t            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\t\n\t            if (modelValue === null || modelValue === undefined) {\n\t                modelValue = '';\n\t            }\n\t\n\t            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n\t                ko.utils.setTimeout(updateView, 4);\n\t                return;\n\t            }\n\t\n\t            // Update the element only if the element and model are different. On some browsers, updating the value\n\t            // will move the cursor to the end of the input, which would be bad while the user is typing.\n\t            if (element.value !== modelValue) {\n\t                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n\t                element.value = modelValue;\n\t            }\n\t        };\n\t\n\t        var onEvent = function (event, handler) {\n\t            ko.utils.registerEventHandler(element, event, handler);\n\t        };\n\t\n\t        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n\t            // Provide a way for tests to specify exactly which events are bound\n\t            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n\t                if (eventName.slice(0,5) == 'after') {\n\t                    onEvent(eventName.slice(5), deferUpdateModel);\n\t                } else {\n\t                    onEvent(eventName, updateModel);\n\t                }\n\t            });\n\t        } else {\n\t            if (ko.utils.ieVersion < 10) {\n\t                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n\t                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n\t                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n\t                // when using autocomplete, we'll use 'propertychange' for it also.\n\t                onEvent('propertychange', function(event) {\n\t                    if (event.propertyName === 'value') {\n\t                        ieUpdateModel(event);\n\t                    }\n\t                });\n\t\n\t                if (ko.utils.ieVersion == 8) {\n\t                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n\t                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n\t                    // events too.\n\t                    onEvent('keyup', updateModel);      // A single keystoke\n\t                    onEvent('keydown', updateModel);    // The first character when a key is held down\n\t                }\n\t                if (ko.utils.ieVersion >= 8) {\n\t                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n\t                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n\t                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n\t                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n\t                    // These are also needed in IE8 because of the bug described above.\n\t                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n\t                    onEvent('dragend', deferUpdateModel);\n\t                }\n\t            } else {\n\t                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n\t                // through the user interface.\n\t                onEvent('input', updateModel);\n\t\n\t                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n\t                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n\t                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n\t                    onEvent('keydown', deferUpdateModel);\n\t                    onEvent('paste', deferUpdateModel);\n\t                    onEvent('cut', deferUpdateModel);\n\t                } else if (operaVersion < 11) {\n\t                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n\t                    // We can try to catch some of those using 'keydown'.\n\t                    onEvent('keydown', deferUpdateModel);\n\t                } else if (firefoxVersion < 4.0) {\n\t                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n\t                    onEvent('DOMAutoComplete', updateModel);\n\t\n\t                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n\t                    onEvent('dragdrop', updateModel);       // <3.5\n\t                    onEvent('drop', updateModel);           // 3.5\n\t                }\n\t            }\n\t        }\n\t\n\t        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n\t        onEvent('change', updateModel);\n\t\n\t        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\t    }\n\t};\n\tko.expressionRewriting.twoWayBindings['textInput'] = true;\n\t\n\t// textinput is an alias for textInput\n\tko.bindingHandlers['textinput'] = {\n\t    // preprocess is the only way to set up a full alias\n\t    'preprocess': function (value, name, addBinding) {\n\t        addBinding('textInput', value);\n\t    }\n\t};\n\t\n\t})();ko.bindingHandlers['uniqueName'] = {\n\t    'init': function (element, valueAccessor) {\n\t        if (valueAccessor()) {\n\t            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n\t            ko.utils.setElementName(element, name);\n\t        }\n\t    }\n\t};\n\tko.bindingHandlers['uniqueName'].currentIndex = 0;\n\tko.bindingHandlers['value'] = {\n\t    'after': ['options', 'foreach'],\n\t    'init': function (element, valueAccessor, allBindings) {\n\t        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n\t        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n\t            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n\t            return;\n\t        }\n\t\n\t        // Always catch \"change\" event; possibly other events too if asked\n\t        var eventsToCatch = [\"change\"];\n\t        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n\t        var propertyChangedFired = false;\n\t        var elementValueBeforeEvent = null;\n\t\n\t        if (requestedEventsToCatch) {\n\t            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n\t                requestedEventsToCatch = [requestedEventsToCatch];\n\t            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n\t            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n\t        }\n\t\n\t        var valueUpdateHandler = function() {\n\t            elementValueBeforeEvent = null;\n\t            propertyChangedFired = false;\n\t            var modelValue = valueAccessor();\n\t            var elementValue = ko.selectExtensions.readValue(element);\n\t            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n\t        }\n\t\n\t        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n\t        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n\t        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n\t                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n\t        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n\t            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n\t            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n\t            ko.utils.registerEventHandler(element, \"blur\", function() {\n\t                if (propertyChangedFired) {\n\t                    valueUpdateHandler();\n\t                }\n\t            });\n\t        }\n\t\n\t        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n\t            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n\t            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n\t            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n\t            var handler = valueUpdateHandler;\n\t            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n\t                handler = function() {\n\t                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n\t                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n\t                    // at the earliest asynchronous opportunity. We store this temporary information so that\n\t                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n\t                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n\t                    // techniques like rateLimit can trigger model changes at critical moments that will\n\t                    // override the user's inputs, causing keystrokes to be lost.\n\t                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n\t                    ko.utils.setTimeout(valueUpdateHandler, 0);\n\t                };\n\t                eventName = eventName.substring(\"after\".length);\n\t            }\n\t            ko.utils.registerEventHandler(element, eventName, handler);\n\t        });\n\t\n\t        var updateFromModel = function () {\n\t            var newValue = ko.utils.unwrapObservable(valueAccessor());\n\t            var elementValue = ko.selectExtensions.readValue(element);\n\t\n\t            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n\t                ko.utils.setTimeout(updateFromModel, 0);\n\t                return;\n\t            }\n\t\n\t            var valueHasChanged = (newValue !== elementValue);\n\t\n\t            if (valueHasChanged) {\n\t                if (ko.utils.tagNameLower(element) === \"select\") {\n\t                    var allowUnset = allBindings.get('valueAllowUnset');\n\t                    var applyValueAction = function () {\n\t                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n\t                    };\n\t                    applyValueAction();\n\t\n\t                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n\t                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n\t                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n\t                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n\t                    } else {\n\t                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n\t                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n\t                        // to apply the value as well.\n\t                        ko.utils.setTimeout(applyValueAction, 0);\n\t                    }\n\t                } else {\n\t                    ko.selectExtensions.writeValue(element, newValue);\n\t                }\n\t            }\n\t        };\n\t\n\t        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n\t    },\n\t    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n\t};\n\tko.expressionRewriting.twoWayBindings['value'] = true;\n\tko.bindingHandlers['visible'] = {\n\t    'update': function (element, valueAccessor) {\n\t        var value = ko.utils.unwrapObservable(valueAccessor());\n\t        var isCurrentlyVisible = !(element.style.display == \"none\");\n\t        if (value && !isCurrentlyVisible)\n\t            element.style.display = \"\";\n\t        else if ((!value) && isCurrentlyVisible)\n\t            element.style.display = \"none\";\n\t    }\n\t};\n\t// 'click' is just a shorthand for the usual full-length event:{click:handler}\n\tmakeEventHandlerShortcut('click');\n\t// If you want to make a custom template engine,\n\t//\n\t// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n\t// [2] Override 'renderTemplateSource', supplying a function with this signature:\n\t//\n\t//        function (templateSource, bindingContext, options) {\n\t//            // - templateSource.text() is the text of the template you should render\n\t//            // - bindingContext.$data is the data you should pass into the template\n\t//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n\t//            //     and bindingContext.$root available in the template too\n\t//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n\t//            // - templateDocument is the document object of the template\n\t//            //\n\t//            // Return value: an array of DOM nodes\n\t//        }\n\t//\n\t// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n\t//\n\t//        function (script) {\n\t//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n\t//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n\t//        }\n\t//\n\t//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n\t//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n\t//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\t\n\tko.templateEngine = function () { };\n\t\n\tko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n\t    throw new Error(\"Override renderTemplateSource\");\n\t};\n\t\n\tko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n\t    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n\t};\n\t\n\tko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n\t    // Named template\n\t    if (typeof template == \"string\") {\n\t        templateDocument = templateDocument || document;\n\t        var elem = templateDocument.getElementById(template);\n\t        if (!elem)\n\t            throw new Error(\"Cannot find template with ID \" + template);\n\t        return new ko.templateSources.domElement(elem);\n\t    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n\t        // Anonymous template\n\t        return new ko.templateSources.anonymousTemplate(template);\n\t    } else\n\t        throw new Error(\"Unknown template type: \" + template);\n\t};\n\t\n\tko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n\t    var templateSource = this['makeTemplateSource'](template, templateDocument);\n\t    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n\t};\n\t\n\tko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n\t    // Skip rewriting if requested\n\t    if (this['allowTemplateRewriting'] === false)\n\t        return true;\n\t    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n\t};\n\t\n\tko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n\t    var templateSource = this['makeTemplateSource'](template, templateDocument);\n\t    var rewritten = rewriterCallback(templateSource['text']());\n\t    templateSource['text'](rewritten);\n\t    templateSource['data'](\"isRewritten\", true);\n\t};\n\t\n\tko.exportSymbol('templateEngine', ko.templateEngine);\n\t\n\tko.templateRewriting = (function () {\n\t    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n\t    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\t\n\t    function validateDataBindValuesForRewriting(keyValueArray) {\n\t        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n\t        for (var i = 0; i < keyValueArray.length; i++) {\n\t            var key = keyValueArray[i]['key'];\n\t            if (allValidators.hasOwnProperty(key)) {\n\t                var validator = allValidators[key];\n\t\n\t                if (typeof validator === \"function\") {\n\t                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n\t                    if (possibleErrorMessage)\n\t                        throw new Error(possibleErrorMessage);\n\t                } else if (!validator) {\n\t                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n\t        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n\t        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n\t        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\t\n\t        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n\t        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n\t        // extra indirection.\n\t        var applyBindingsToNextSiblingScript =\n\t            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n\t        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n\t    }\n\t\n\t    return {\n\t        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n\t            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n\t                templateEngine['rewriteTemplate'](template, function (htmlString) {\n\t                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n\t                }, templateDocument);\n\t        },\n\t\n\t        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n\t            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n\t                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n\t            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n\t                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n\t            });\n\t        },\n\t\n\t        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n\t            return ko.memoization.memoize(function (domNode, bindingContext) {\n\t                var nodeToBind = domNode.nextSibling;\n\t                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n\t                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n\t                }\n\t            });\n\t        }\n\t    }\n\t})();\n\t\n\t\n\t// Exported only because it has to be referenced by string lookup from within rewritten template\n\tko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n\t(function() {\n\t    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n\t    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n\t    //\n\t    // Two are provided by default:\n\t    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n\t    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n\t    //                                           without reading/writing the actual element text content, since it will be overwritten\n\t    //                                           with the rendered template output.\n\t    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n\t    // Template sources need to have the following functions:\n\t    //   text() \t\t\t- returns the template text from your storage location\n\t    //   text(value)\t\t- writes the supplied template text to your storage location\n\t    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n\t    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n\t    //\n\t    // Optionally, template sources can also have the following functions:\n\t    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n\t    //   nodes(value)       - writes the given DOM element to your storage location\n\t    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n\t    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n\t    //\n\t    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n\t    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\t\n\t    ko.templateSources = {};\n\t\n\t    // ---- ko.templateSources.domElement -----\n\t\n\t    // template types\n\t    var templateScript = 1,\n\t        templateTextArea = 2,\n\t        templateTemplate = 3,\n\t        templateElement = 4;\n\t\n\t    ko.templateSources.domElement = function(element) {\n\t        this.domElement = element;\n\t\n\t        if (element) {\n\t            var tagNameLower = ko.utils.tagNameLower(element);\n\t            this.templateType =\n\t                tagNameLower === \"script\" ? templateScript :\n\t                tagNameLower === \"textarea\" ? templateTextArea :\n\t                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n\t                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n\t                templateElement;\n\t        }\n\t    }\n\t\n\t    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n\t        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n\t                                 : this.templateType === templateTextArea ? \"value\"\n\t                                 : \"innerHTML\";\n\t\n\t        if (arguments.length == 0) {\n\t            return this.domElement[elemContentsProperty];\n\t        } else {\n\t            var valueToWrite = arguments[0];\n\t            if (elemContentsProperty === \"innerHTML\")\n\t                ko.utils.setHtml(this.domElement, valueToWrite);\n\t            else\n\t                this.domElement[elemContentsProperty] = valueToWrite;\n\t        }\n\t    };\n\t\n\t    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n\t    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n\t        if (arguments.length === 1) {\n\t            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n\t        } else {\n\t            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n\t        }\n\t    };\n\t\n\t    var templatesDomDataKey = ko.utils.domData.nextKey();\n\t    function getTemplateDomData(element) {\n\t        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n\t    }\n\t    function setTemplateDomData(element, data) {\n\t        ko.utils.domData.set(element, templatesDomDataKey, data);\n\t    }\n\t\n\t    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n\t        var element = this.domElement;\n\t        if (arguments.length == 0) {\n\t            var templateData = getTemplateDomData(element),\n\t                containerData = templateData.containerData;\n\t            return containerData || (\n\t                this.templateType === templateTemplate ? element.content :\n\t                this.templateType === templateElement ? element :\n\t                undefined);\n\t        } else {\n\t            var valueToWrite = arguments[0];\n\t            setTemplateDomData(element, {containerData: valueToWrite});\n\t        }\n\t    };\n\t\n\t    // ---- ko.templateSources.anonymousTemplate -----\n\t    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n\t    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n\t    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\t\n\t    ko.templateSources.anonymousTemplate = function(element) {\n\t        this.domElement = element;\n\t    }\n\t    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n\t    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n\t    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n\t        if (arguments.length == 0) {\n\t            var templateData = getTemplateDomData(this.domElement);\n\t            if (templateData.textData === undefined && templateData.containerData)\n\t                templateData.textData = templateData.containerData.innerHTML;\n\t            return templateData.textData;\n\t        } else {\n\t            var valueToWrite = arguments[0];\n\t            setTemplateDomData(this.domElement, {textData: valueToWrite});\n\t        }\n\t    };\n\t\n\t    ko.exportSymbol('templateSources', ko.templateSources);\n\t    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n\t    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n\t})();\n\t(function () {\n\t    var _templateEngine;\n\t    ko.setTemplateEngine = function (templateEngine) {\n\t        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n\t            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n\t        _templateEngine = templateEngine;\n\t    }\n\t\n\t    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n\t        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n\t        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n\t            nextInQueue = ko.virtualElements.nextSibling(node);\n\t            action(node, nextInQueue);\n\t        }\n\t    }\n\t\n\t    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n\t        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n\t        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n\t        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n\t        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n\t        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\t\n\t        if (continuousNodeArray.length) {\n\t            var firstNode = continuousNodeArray[0],\n\t                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n\t                parentNode = firstNode.parentNode,\n\t                provider = ko.bindingProvider['instance'],\n\t                preprocessNode = provider['preprocessNode'];\n\t\n\t            if (preprocessNode) {\n\t                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n\t                    var nodePreviousSibling = node.previousSibling;\n\t                    var newNodes = preprocessNode.call(provider, node);\n\t                    if (newNodes) {\n\t                        if (node === firstNode)\n\t                            firstNode = newNodes[0] || nextNodeInRange;\n\t                        if (node === lastNode)\n\t                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n\t                    }\n\t                });\n\t\n\t                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n\t                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n\t                // first node needs to be in the array).\n\t                continuousNodeArray.length = 0;\n\t                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n\t                    return;\n\t                }\n\t                if (firstNode === lastNode) {\n\t                    continuousNodeArray.push(firstNode);\n\t                } else {\n\t                    continuousNodeArray.push(firstNode, lastNode);\n\t                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n\t                }\n\t            }\n\t\n\t            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n\t            // whereas a regular applyBindings won't introduce new memoized nodes\n\t            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n\t                if (node.nodeType === 1 || node.nodeType === 8)\n\t                    ko.applyBindings(bindingContext, node);\n\t            });\n\t            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n\t                if (node.nodeType === 1 || node.nodeType === 8)\n\t                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n\t            });\n\t\n\t            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n\t            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n\t        }\n\t    }\n\t\n\t    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n\t        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n\t                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n\t                                        : null;\n\t    }\n\t\n\t    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n\t        options = options || {};\n\t        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\t        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n\t        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n\t        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n\t        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\t\n\t        // Loosely check result is an array of DOM nodes\n\t        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n\t            throw new Error(\"Template engine must return an array of DOM nodes\");\n\t\n\t        var haveAddedNodesToParent = false;\n\t        switch (renderMode) {\n\t            case \"replaceChildren\":\n\t                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n\t                haveAddedNodesToParent = true;\n\t                break;\n\t            case \"replaceNode\":\n\t                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n\t                haveAddedNodesToParent = true;\n\t                break;\n\t            case \"ignoreTargetNode\": break;\n\t            default:\n\t                throw new Error(\"Unknown renderMode: \" + renderMode);\n\t        }\n\t\n\t        if (haveAddedNodesToParent) {\n\t            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n\t            if (options['afterRender'])\n\t                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n\t        }\n\t\n\t        return renderedNodesArray;\n\t    }\n\t\n\t    function resolveTemplateName(template, data, context) {\n\t        // The template can be specified as:\n\t        if (ko.isObservable(template)) {\n\t            // 1. An observable, with string value\n\t            return template();\n\t        } else if (typeof template === 'function') {\n\t            // 2. A function of (data, context) returning a string\n\t            return template(data, context);\n\t        } else {\n\t            // 3. A string\n\t            return template;\n\t        }\n\t    }\n\t\n\t    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n\t        options = options || {};\n\t        if ((options['templateEngine'] || _templateEngine) == undefined)\n\t            throw new Error(\"Set a template engine before calling renderTemplate\");\n\t        renderMode = renderMode || \"replaceChildren\";\n\t\n\t        if (targetNodeOrNodeArray) {\n\t            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\t\n\t            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n\t            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\t\n\t            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n\t                function () {\n\t                    // Ensure we've got a proper binding context to work with\n\t                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n\t                        ? dataOrBindingContext\n\t                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\n\t\n\t                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n\t                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\t\n\t                    if (renderMode == \"replaceNode\") {\n\t                        targetNodeOrNodeArray = renderedNodesArray;\n\t                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\t                    }\n\t                },\n\t                null,\n\t                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n\t            );\n\t        } else {\n\t            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n\t            return ko.memoization.memoize(function (domNode) {\n\t                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n\t            });\n\t        }\n\t    };\n\t\n\t    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n\t        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n\t        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n\t        var arrayItemContext;\n\t\n\t        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n\t        var executeTemplateForArrayItem = function (arrayValue, index) {\n\t            // Support selecting template as a function of the data being rendered\n\t            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n\t                context['$index'] = index;\n\t            });\n\t\n\t            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n\t            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n\t        }\n\t\n\t        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n\t        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n\t            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n\t            if (options['afterRender'])\n\t                options['afterRender'](addedNodesArray, arrayValue);\n\t\n\t            // release the \"cache\" variable, so that it can be collected by\n\t            // the GC when its value isn't used from within the bindings anymore.\n\t            arrayItemContext = null;\n\t        };\n\t\n\t        return ko.dependentObservable(function () {\n\t            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n\t            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n\t                unwrappedArray = [unwrappedArray];\n\t\n\t            // Filter out any entries marked as destroyed\n\t            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n\t                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n\t            });\n\t\n\t            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n\t            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n\t            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\t\n\t        }, null, { disposeWhenNodeIsRemoved: targetNode });\n\t    };\n\t\n\t    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n\t    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n\t        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n\t        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n\t            oldComputed.dispose();\n\t        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n\t    }\n\t\n\t    ko.bindingHandlers['template'] = {\n\t        'init': function(element, valueAccessor) {\n\t            // Support anonymous templates\n\t            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n\t            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n\t                // It's a named template - clear the element\n\t                ko.virtualElements.emptyNode(element);\n\t            } else if ('nodes' in bindingValue) {\n\t                // We've been given an array of DOM nodes. Save them as the template source.\n\t                // There is no known use case for the node array being an observable array (if the output\n\t                // varies, put that behavior *into* your template - that's what templates are for), and\n\t                // the implementation would be a mess, so assert that it's not observable.\n\t                var nodes = bindingValue['nodes'] || [];\n\t                if (ko.isObservable(nodes)) {\n\t                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n\t                }\n\t                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n\t                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n\t            } else {\n\t                // It's an anonymous template - store the element contents, then clear the element\n\t                var templateNodes = ko.virtualElements.childNodes(element),\n\t                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n\t                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n\t            }\n\t            return { 'controlsDescendantBindings': true };\n\t        },\n\t        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t            var value = valueAccessor(),\n\t                dataValue,\n\t                options = ko.utils.unwrapObservable(value),\n\t                shouldDisplay = true,\n\t                templateComputed = null,\n\t                templateName;\n\t\n\t            if (typeof options == \"string\") {\n\t                templateName = value;\n\t                options = {};\n\t            } else {\n\t                templateName = options['name'];\n\t\n\t                // Support \"if\"/\"ifnot\" conditions\n\t                if ('if' in options)\n\t                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n\t                if (shouldDisplay && 'ifnot' in options)\n\t                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\t\n\t                dataValue = ko.utils.unwrapObservable(options['data']);\n\t            }\n\t\n\t            if ('foreach' in options) {\n\t                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n\t                var dataArray = (shouldDisplay && options['foreach']) || [];\n\t                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n\t            } else if (!shouldDisplay) {\n\t                ko.virtualElements.emptyNode(element);\n\t            } else {\n\t                // Render once for this single data point (or use the viewModel if no data was provided)\n\t                var innerBindingContext = ('data' in options) ?\n\t                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n\t                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n\t                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n\t            }\n\t\n\t            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n\t            disposeOldComputedAndStoreNewOne(element, templateComputed);\n\t        }\n\t    };\n\t\n\t    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n\t    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n\t        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\t\n\t        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n\t            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\t\n\t        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n\t            return null; // Named templates can be rewritten, so return \"no error\"\n\t        return \"This template engine does not support anonymous templates nested within its templates\";\n\t    };\n\t\n\t    ko.virtualElements.allowedBindings['template'] = true;\n\t})();\n\t\n\tko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\n\tko.exportSymbol('renderTemplate', ko.renderTemplate);\n\t// Go through the items that have been added and deleted and try to find matches between them.\n\tko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n\t    if (left.length && right.length) {\n\t        var failedCompares, l, r, leftItem, rightItem;\n\t        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n\t            for (r = 0; rightItem = right[r]; ++r) {\n\t                if (leftItem['value'] === rightItem['value']) {\n\t                    leftItem['moved'] = rightItem['index'];\n\t                    rightItem['moved'] = leftItem['index'];\n\t                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n\t                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n\t                    break;\n\t                }\n\t            }\n\t            failedCompares += r;\n\t        }\n\t    }\n\t};\n\t\n\tko.utils.compareArrays = (function () {\n\t    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\t\n\t    // Simple calculation based on Levenshtein distance.\n\t    function compareArrays(oldArray, newArray, options) {\n\t        // For backward compatibility, if the third arg is actually a bool, interpret\n\t        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n\t        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n\t        oldArray = oldArray || [];\n\t        newArray = newArray || [];\n\t\n\t        if (oldArray.length < newArray.length)\n\t            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n\t        else\n\t            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n\t    }\n\t\n\t    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n\t        var myMin = Math.min,\n\t            myMax = Math.max,\n\t            editDistanceMatrix = [],\n\t            smlIndex, smlIndexMax = smlArray.length,\n\t            bigIndex, bigIndexMax = bigArray.length,\n\t            compareRange = (bigIndexMax - smlIndexMax) || 1,\n\t            maxDistance = smlIndexMax + bigIndexMax + 1,\n\t            thisRow, lastRow,\n\t            bigIndexMaxForRow, bigIndexMinForRow;\n\t\n\t        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n\t            lastRow = thisRow;\n\t            editDistanceMatrix.push(thisRow = []);\n\t            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n\t            bigIndexMinForRow = myMax(0, smlIndex - 1);\n\t            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n\t                if (!bigIndex)\n\t                    thisRow[bigIndex] = smlIndex + 1;\n\t                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n\t                    thisRow[bigIndex] = bigIndex + 1;\n\t                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n\t                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n\t                else {\n\t                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n\t                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n\t                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n\t                }\n\t            }\n\t        }\n\t\n\t        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n\t        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n\t            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n\t            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n\t                notInSml.push(editScript[editScript.length] = {     // added\n\t                    'status': statusNotInSml,\n\t                    'value': bigArray[--bigIndex],\n\t                    'index': bigIndex });\n\t            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n\t                notInBig.push(editScript[editScript.length] = {     // deleted\n\t                    'status': statusNotInBig,\n\t                    'value': smlArray[--smlIndex],\n\t                    'index': smlIndex });\n\t            } else {\n\t                --bigIndex;\n\t                --smlIndex;\n\t                if (!options['sparse']) {\n\t                    editScript.push({\n\t                        'status': \"retained\",\n\t                        'value': bigArray[bigIndex] });\n\t                }\n\t            }\n\t        }\n\t\n\t        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n\t        // smlIndexMax keeps the time complexity of this algorithm linear.\n\t        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\t\n\t        return editScript.reverse();\n\t    }\n\t\n\t    return compareArrays;\n\t})();\n\t\n\tko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n\t(function () {\n\t    // Objective:\n\t    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n\t    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n\t    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n\t    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n\t    //   previously mapped - retain those nodes, and just insert/delete other ones\n\t\n\t    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n\t    // You can use this, for example, to activate bindings on those nodes.\n\t\n\t    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n\t        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n\t        var mappedNodes = [];\n\t        var dependentObservable = ko.dependentObservable(function() {\n\t            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\t\n\t            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n\t            if (mappedNodes.length > 0) {\n\t                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n\t                if (callbackAfterAddingNodes)\n\t                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n\t            }\n\t\n\t            // Replace the contents of the mappedNodes array, thereby updating the record\n\t            // of which nodes would be deleted if valueToMap was itself later removed\n\t            mappedNodes.length = 0;\n\t            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n\t        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n\t        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n\t    }\n\t\n\t    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n\t        deletedItemDummyValue = ko.utils.domData.nextKey();\n\t\n\t    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n\t        // Compare the provided array against the previous one\n\t        array = array || [];\n\t        options = options || {};\n\t        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n\t        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n\t        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n\t        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\t\n\t        // Build the new mapping result\n\t        var newMappingResult = [];\n\t        var lastMappingResultIndex = 0;\n\t        var newMappingResultIndex = 0;\n\t\n\t        var nodesToDelete = [];\n\t        var itemsToProcess = [];\n\t        var itemsForBeforeRemoveCallbacks = [];\n\t        var itemsForMoveCallbacks = [];\n\t        var itemsForAfterAddCallbacks = [];\n\t        var mapData;\n\t\n\t        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n\t            mapData = lastMappingResult[oldPosition];\n\t            if (newMappingResultIndex !== oldPosition)\n\t                itemsForMoveCallbacks[editScriptIndex] = mapData;\n\t            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n\t            mapData.indexObservable(newMappingResultIndex++);\n\t            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n\t            newMappingResult.push(mapData);\n\t            itemsToProcess.push(mapData);\n\t        }\n\t\n\t        function callCallback(callback, items) {\n\t            if (callback) {\n\t                for (var i = 0, n = items.length; i < n; i++) {\n\t                    if (items[i]) {\n\t                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n\t                            callback(node, i, items[i].arrayEntry);\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n\t            movedIndex = editScriptItem['moved'];\n\t            switch (editScriptItem['status']) {\n\t                case \"deleted\":\n\t                    if (movedIndex === undefined) {\n\t                        mapData = lastMappingResult[lastMappingResultIndex];\n\t\n\t                        // Stop tracking changes to the mapping for these nodes\n\t                        if (mapData.dependentObservable) {\n\t                            mapData.dependentObservable.dispose();\n\t                            mapData.dependentObservable = undefined;\n\t                        }\n\t\n\t                        // Queue these nodes for later removal\n\t                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n\t                            if (options['beforeRemove']) {\n\t                                newMappingResult.push(mapData);\n\t                                itemsToProcess.push(mapData);\n\t                                if (mapData.arrayEntry === deletedItemDummyValue) {\n\t                                    mapData = null;\n\t                                } else {\n\t                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n\t                                }\n\t                            }\n\t                            if (mapData) {\n\t                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n\t                            }\n\t                        }\n\t                    }\n\t                    lastMappingResultIndex++;\n\t                    break;\n\t\n\t                case \"retained\":\n\t                    itemMovedOrRetained(i, lastMappingResultIndex++);\n\t                    break;\n\t\n\t                case \"added\":\n\t                    if (movedIndex !== undefined) {\n\t                        itemMovedOrRetained(i, movedIndex);\n\t                    } else {\n\t                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n\t                        newMappingResult.push(mapData);\n\t                        itemsToProcess.push(mapData);\n\t                        if (!isFirstExecution)\n\t                            itemsForAfterAddCallbacks[i] = mapData;\n\t                    }\n\t                    break;\n\t            }\n\t        }\n\t\n\t        // Store a copy of the array items we just considered so we can difference it next time\n\t        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\t\n\t        // Call beforeMove first before any changes have been made to the DOM\n\t        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\t\n\t        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n\t        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\t\n\t        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n\t        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n\t            // Get nodes for newly added items\n\t            if (!mapData.mappedNodes)\n\t                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\t\n\t            // Put nodes in the right place if they aren't there already\n\t            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n\t                if (node !== nextNode)\n\t                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n\t            }\n\t\n\t            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n\t            if (!mapData.initialized && callbackAfterAddingNodes) {\n\t                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n\t                mapData.initialized = true;\n\t            }\n\t        }\n\t\n\t        // If there's a beforeRemove callback, call it after reordering.\n\t        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n\t        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n\t        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n\t        // Perhaps we'll make that change in the future if this scenario becomes more common.\n\t        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\t\n\t        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n\t        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n\t        // with an actual item in the array and appear as \"retained\" or \"moved\".\n\t        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n\t            if (itemsForBeforeRemoveCallbacks[i]) {\n\t                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n\t            }\n\t        }\n\t\n\t        // Finally call afterMove and afterAdd callbacks\n\t        callCallback(options['afterMove'], itemsForMoveCallbacks);\n\t        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n\t    }\n\t})();\n\t\n\tko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\n\tko.nativeTemplateEngine = function () {\n\t    this['allowTemplateRewriting'] = false;\n\t}\n\t\n\tko.nativeTemplateEngine.prototype = new ko.templateEngine();\n\tko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\n\tko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n\t    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n\t        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n\t        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\t\n\t    if (templateNodes) {\n\t        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n\t    } else {\n\t        var templateText = templateSource['text']();\n\t        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n\t    }\n\t};\n\t\n\tko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\n\tko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\t\n\tko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n\t(function() {\n\t    ko.jqueryTmplTemplateEngine = function () {\n\t        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n\t        // doesn't expose a version number, so we have to infer it.\n\t        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n\t        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n\t        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n\t            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n\t                return 0;\n\t            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n\t            try {\n\t                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n\t                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n\t                    return 2; // Final version of jquery.tmpl\n\t                }\n\t            } catch(ex) { /* Apparently not the version we were looking for */ }\n\t\n\t            return 1; // Any older version that we don't support\n\t        })();\n\t\n\t        function ensureHasReferencedJQueryTemplates() {\n\t            if (jQueryTmplVersion < 2)\n\t                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n\t        }\n\t\n\t        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n\t            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n\t        }\n\t\n\t        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n\t            templateDocument = templateDocument || document;\n\t            options = options || {};\n\t            ensureHasReferencedJQueryTemplates();\n\t\n\t            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n\t            var precompiled = templateSource['data']('precompiled');\n\t            if (!precompiled) {\n\t                var templateText = templateSource['text']() || \"\";\n\t                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n\t                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\t\n\t                precompiled = jQueryInstance['template'](null, templateText);\n\t                templateSource['data']('precompiled', precompiled);\n\t            }\n\t\n\t            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n\t            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\t\n\t            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n\t            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\t\n\t            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n\t            return resultNodes;\n\t        };\n\t\n\t        this['createJavaScriptEvaluatorBlock'] = function(script) {\n\t            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n\t        };\n\t\n\t        this['addTemplate'] = function(templateName, templateMarkup) {\n\t            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n\t        };\n\t\n\t        if (jQueryTmplVersion > 0) {\n\t            jQueryInstance['tmpl']['tag']['ko_code'] = {\n\t                open: \"__.push($1 || '');\"\n\t            };\n\t            jQueryInstance['tmpl']['tag']['ko_with'] = {\n\t                open: \"with($1) {\",\n\t                close: \"} \"\n\t            };\n\t        }\n\t    };\n\t\n\t    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n\t    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\t\n\t    // Use this one by default *only if jquery.tmpl is referenced*\n\t    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n\t    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n\t        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\t\n\t    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n\t})();\n\t}));\n\t}());\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t\r\n\tvar _scalejsEs = __webpack_require__(28);\r\n\t\r\n\tvar _scalejsEs2 = _interopRequireDefault(_scalejsEs);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\tmodule.exports = _scalejsEs2.default;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _scalejs = __webpack_require__(2);\r\n\t\r\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\r\n\t\r\n\t__webpack_require__(16);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\t// create a sandbox to shim existing requires\r\n\t// give ability to generate new sandbox if desired.\r\n\t/*global define*/\r\n\t/*jslint unparam:true*/\r\n\tvar sandbox = _scalejs2.default.buildSandbox('main', _scalejs2.default.object.merge({\r\n\t    buildSandbox: _scalejs2.default.buildSandbox\r\n\t}));\r\n\t\r\n\texports.default = sandbox;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /**\r\n\t                                                                                                                                                                                                                                                   * Provides object functionality to scalejs base\r\n\t                                                                                                                                                                                                                                                   * @namespace scalejs.base\r\n\t                                                                                                                                                                                                                                                   * @module object\r\n\t                                                                                                                                                                                                                                                   */\r\n\t\r\n\t/*global define*/\r\n\t\r\n\t\r\n\tvar _scalejsBase = __webpack_require__(8);\r\n\t\r\n\tvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\tvar is = _scalejsBase2.default.is;\r\n\t\r\n\t/**\r\n\t * Determines if an object exists and if it does checks that each in\r\n\t * the chain of properties also exist\r\n\t *\r\n\t * @param {Object|Any} obj       object to test\r\n\t * @param {String}     [prop...] property chain of the object to test\r\n\t * @memberOf object\r\n\t * @return {Boolean} if the object 'has' (see inline documentation)\r\n\t */\r\n\tfunction has(object) {\r\n\t    // The intent of this method is to replace unsafe tests relying on type\r\n\t    // coercion for optional arguments or obj properties:\r\n\t    // | function on(event,options){\r\n\t    // |   options = options || {}; // type coercion\r\n\t    // |   if (!event || !event.data || !event.data.value){\r\n\t    // |     // unsafe due to type coercion: all falsy values '', false, 0\r\n\t    // |     // are discarded, not just null and undefined\r\n\t    // |     return;\r\n\t    // |   }\r\n\t    // |   // ...\r\n\t    // | }\r\n\t    // with a safer test without type coercion:\r\n\t    // | function on(event,options){\r\n\t    // |   options = has(options)? options : {}; // no type coercion\r\n\t    // |   if (!has(event,'data','value'){\r\n\t    // |     // safe check: only null/undefined values are rejected;\r\n\t    // |     return;\r\n\t    // |   }\r\n\t    // |   // ...\r\n\t    // | }\r\n\t    //\r\n\t    // Returns:\r\n\t    //   * false if no argument is provided or if the obj is null or\r\n\t    //     undefined, whatever the number of arguments\r\n\t    //   * true if the full chain of nested properties is found in the obj\r\n\t    //     and the corresponding value is neither null nor undefined\r\n\t    //   * false otherwise\r\n\t\r\n\t    var i,\r\n\t        // iterative variable\r\n\t    length,\r\n\t        o = object,\r\n\t        property;\r\n\t\r\n\t    if (!is(o)) {\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    for (i = 1, length = arguments.length; i < length; i += 1) {\r\n\t        property = arguments[i];\r\n\t        o = o[property];\r\n\t        if (!is(o)) {\r\n\t            return false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deep extend of the supplier into the reciever\r\n\t * @private\r\n\t *\r\n\t * @param {Object} reciever object into which to extend\r\n\t * @param {Object} supplier object from which to extend\r\n\t * @memberOf object\r\n\t * @return the reciever object for ease\r\n\t */\r\n\tfunction mix(receiver, supplier) {\r\n\t    var p;\r\n\t    for (p in supplier) {\r\n\t        if (supplier.hasOwnProperty(p)) {\r\n\t            if (has(supplier, p) && has(receiver, p) && supplier[p].constructor === Object) {\r\n\t                receiver[p] = mix(receiver[p], supplier[p]);\r\n\t            } else {\r\n\t                receiver[p] = supplier[p];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return receiver;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Merges all of the passed objects into a new object\r\n\t *\r\n\t * @param {Object} [obj...] object to mix into the new object\r\n\t * @memberOf object\r\n\t * @return {Object} the merged object\r\n\t */\r\n\tfunction merge() {\r\n\t    var args = arguments,\r\n\t        i,\r\n\t        // iterative variable\r\n\t    len = args.length,\r\n\t        result = {};\r\n\t\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t        mix(result, args[i]);\r\n\t    }\r\n\t\r\n\t    return result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Clones the passed object\r\n\t *\r\n\t * @param {Object} obj object to be cloned\r\n\t * @memberOf object\r\n\t * @return {Object} the cloned object\r\n\t */\r\n\tfunction clone(o) {\r\n\t    return merge(o);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Extends the extension into the reciever\r\n\t *\r\n\t * @param {Object} reciever  object into which to extend\r\n\t * @param {Object} extension object from which to extend\r\n\t * @param {String} [path]    followed on the reciever before executing\r\n\t *                           the extend (form: \"obj.obj.obj\")\r\n\t * @memberOf object\r\n\t * @return the extended object (after having followed the path)\r\n\t */\r\n\tfunction extend(receiver, extension, path) {\r\n\t    var props = has(path) ? path.split('.') : [],\r\n\t        target = receiver,\r\n\t        i; // iterative variable\r\n\t\r\n\t    for (i = 0; i < props.length; i += 1) {\r\n\t        if (!has(target, props[i])) {\r\n\t            target[props[i]] = {};\r\n\t        }\r\n\t        target = target[props[i]];\r\n\t    }\r\n\t\r\n\t    mix(target, extension);\r\n\t\r\n\t    return target;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Obtains a value from an object following a path with the option to\r\n\t * return a default value if that object was not found\r\n\t *\r\n\t * @param {Object} o    object in which to look for the specified path\r\n\t * @param {String} path string representing the chain of properties to\r\n\t *                      to be followed (form: \"obj.obj.obj\")\r\n\t * @param {Any}    [defaultValue] value to return if the path does not\r\n\t *                                evaluate successfully: default undefined\r\n\t * @memberOf object\r\n\t * @return {Any} object evaluated by following the given path or the default\r\n\t *               value should that object not exist\r\n\t */\r\n\tfunction get(o, path, defaultValue) {\r\n\t    var props = path.split('.'),\r\n\t        i,\r\n\t        // iterative variable\r\n\t    p,\r\n\t        // current property\r\n\t    success = true;\r\n\t\r\n\t    for (i = 0; i < props.length; i += 1) {\r\n\t        p = props[i];\r\n\t        if (has(o, p)) {\r\n\t            o = o[p];\r\n\t        } else {\r\n\t            success = false;\r\n\t            break;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return success ? o : defaultValue;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gives the value if it exists or the default value if not\r\n\t *\r\n\t * @param {Any} value item to check\r\n\t * @param {Any} [defaultValue] item to return if value does not exist\r\n\t * @memberOf object\r\n\t * @return value if it exists or default if not\r\n\t */\r\n\tfunction valueOrDefault(value, defaultValue) {\r\n\t    return has(value) ? value : defaultValue;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stringifies an object without the chance for circular error\r\n\t *\r\n\t * @param {Object} obj object to stringify\r\n\t * @memberOf object\r\n\t * @return {String} string form of the passed object\r\n\t */\r\n\tfunction stringify(obj) {\r\n\t    var cache = [];\r\n\t\r\n\t    return JSON.stringify(obj, function (key, value) {\r\n\t        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {\r\n\t            if (cache.indexOf(value) !== -1) {\r\n\t                return '[Circular]';\r\n\t            }\r\n\t            cache.push(value);\r\n\t        }\r\n\t        return value;\r\n\t    });\r\n\t}\r\n\t\r\n\texports.default = {\r\n\t    has: has,\r\n\t    valueOrDefault: valueOrDefault,\r\n\t    merge: merge,\r\n\t    extend: extend,\r\n\t    clone: clone,\r\n\t    get: get,\r\n\t    stringify: stringify\r\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.13.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice;\n\t\n\t    /** Built-in method references that are mockable. */\n\t    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n\t     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n\t     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n\t     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n\t     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n\t     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n\t     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n\t     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n\t     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n\t        cache = this.__data__ = new MapCache(cache.__data__);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined &&\n\t              !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return object != null &&\n\t        (hasOwnProperty.call(object, key) ||\n\t          (typeof object == 'object' && key in object && getPrototype(object) === null));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      stack['delete'](srcValue);\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var index = -1,\n\t          props = getAllKeysIn(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        predicate = getIteratee(predicate, 3);\n\t        if (!isArrayLike(collection)) {\n\t          var props = keys(collection);\n\t        }\n\t        var index = findIndexFunc(props || collection, function(value, key) {\n\t          if (props) {\n\t            key = value;\n\t            value = iterable[key];\n\t          }\n\t          return predicate(value, key, iterable);\n\t        }, fromIndex);\n\t        return index > -1 ? collection[props ? props[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return 0;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and\n\t          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n\t          // not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t          stack.set(object, other);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    function getPrototype(value) {\n\t      return nativeGetPrototype(Object(value));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    function getSymbols(object) {\n\t      // Coerce `object` to an object to avoid non-object errors in V8.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n\t      return getOwnPropertySymbols(Object(object));\n\t    }\n\t\n\t    // Fallback for IE < 11.\n\t    if (!getOwnPropertySymbols) {\n\t      getSymbols = stubArray;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n\t     * iteratee shorthand.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenableIteratee(value) {\n\t      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other given\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function, it's\n\t     * invoked for and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t        ? iteratees[0]\n\t        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\t\n\t      return baseOrderBy(collection, iteratees, []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    function now() {\n\t      return Date.now();\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [transforms[_.identity]] The functions to transform.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? stubFalse : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the\n\t     * presence of the `core-js` package because `core-js` circumvents this kind\n\t     * of detection. Despite multiple requests, the `core-js` maintainer has made\n\t     * it clear: any attempt to fix the detection will be obstructed. As a result,\n\t     * we're left with little choice but to throw an error. Unfortunately, this\n\t     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on `core-js`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(baseToString(target), position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['onClick']);\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A method that returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return rest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * A method that returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * A method that returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A method that returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * A method that returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * A method that returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    });\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose Lodash on the free variable `window` or `self` when available so it's\n\t  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n\t  // also prevents errors in cases where Lodash is loaded by a script tag in the\n\t  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n\t  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n\t  (freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_0__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_1__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_2__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_3__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_4__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_5__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_6__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// knockout-classBindingProvider 0.5.0 | (c) 2013 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license\r\n\t;(function (factory) {\r\n\t    //AMD\r\n\t    if (true) {\r\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_LOCAL_MODULE_0__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\r\n\t        //normal script tag\r\n\t    } else {\r\n\t        factory(ko);\r\n\t    }\r\n\t}(function (ko, exports, undefined) {\r\n\t    var objectMap = function (source, mapping) {\r\n\t        var target, prop;\r\n\t\r\n\t        if (!source) {\r\n\t            return source;\r\n\t        }\r\n\t\r\n\t        target = {};\r\n\t        for (prop in source) {\r\n\t            if (source.hasOwnProperty(prop)) {\r\n\t                target[prop] = mapping(source[prop], prop, source);\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    };\r\n\t\r\n\t    var makeValueAccessor = function (value) {\r\n\t        return function () {\r\n\t            return value;\r\n\t        };\r\n\t    };\r\n\t\r\n\t    // Make Knockout think that we're using observable view models by adding a \"_subscribable\" function to all binding contexts.\r\n\t    // This makes Knockout watch any observables accessed in the getBindingAccessors function.\r\n\t    // Hopefully this hack will be unnecessary in later versions.\r\n\t    if (ko.version >= \"3.0.0\") {\r\n\t        (function () {\r\n\t            // Create and retrieve a binding context object\r\n\t            var dummyDiv = document.createElement('div');\r\n\t            ko.applyBindings(null, dummyDiv);\r\n\t            var context = ko.contextFor(dummyDiv);\r\n\t\r\n\t            // Add a dummy _subscribable, with a dummy _addNode, to the binding context prototype\r\n\t            var isMinified = !ko.storedBindingContextForNode,\r\n\t                subscribableName = isMinified ? 'A' : '_subscribable',\r\n\t                addNodeName = isMinified ? 'wb' : '_addNode',\r\n\t                dummySubscribable = function () { };\r\n\t            dummySubscribable[addNodeName] = dummySubscribable;\r\n\t            context.constructor.prototype[subscribableName] = dummySubscribable;\r\n\t\r\n\t            ko.cleanNode(dummyDiv);\r\n\t        })();\r\n\t    }\r\n\t\r\n\t    //a bindingProvider that uses something different than data-bind attributes\r\n\t    //  bindings - an object that contains the binding classes\r\n\t    //  options - is an object that can include \"attribute\", \"virtualAttribute\", bindingRouter, and \"fallback\" options\r\n\t    var classBindingsProvider = function (bindings, options) {\r\n\t        var existingProvider = new ko.bindingProvider(),\r\n\t            loggedBindings = {};\r\n\t\r\n\t        options = options || {};\r\n\t\r\n\t        //override the attribute\r\n\t        this.attribute = options.attribute || \"data-class\";\r\n\t\r\n\t        //override the virtual attribute\r\n\t        this.virtualAttribute = \"ko \" + (options.virtualAttribute || \"class\") + \":\";\r\n\t\r\n\t        //fallback to the existing binding provider, if bindings are not found\r\n\t        this.fallback = options.fallback;\r\n\t\r\n\t        //this object holds the binding classes\r\n\t        this.bindings = bindings || {};\r\n\t\r\n\t        //returns a binding class, given the class name and the bindings object\r\n\t        this.bindingRouter = options.bindingRouter || function (className, bindings) {\r\n\t            var i, j, classPath, bindingObject;\r\n\t\r\n\t            //if the class name matches a property directly, then return it\r\n\t            if (bindings[className]) {\r\n\t                return bindings[className];\r\n\t            }\r\n\t\r\n\t            //search for sub-properites that might contain the bindings\r\n\t            classPath = className.split(\".\");\r\n\t            bindingObject = bindings;\r\n\t\r\n\t            for (i = 0, j = classPath.length; i < j; i++) {\r\n\t                bindingObject = bindingObject[classPath[i]];\r\n\t            }\r\n\t\r\n\t            return bindingObject;\r\n\t        };\r\n\t\r\n\t        //allow bindings to be registered after instantiation\r\n\t        this.registerBindings = function (newBindings) {\r\n\t            ko.utils.extend(this.bindings, newBindings);\r\n\t        };\r\n\t\r\n\t        //determine if an element has any bindings\r\n\t        this.nodeHasBindings = function (node) {\r\n\t            var result, value;\r\n\t\r\n\t            if (node.nodeType === 1) {\r\n\t                result = node.getAttribute(this.attribute);\r\n\t            }\r\n\t            else if (node.nodeType === 8) {\r\n\t                value = \"\" + node.nodeValue || node.text;\r\n\t                result = value.indexOf(this.virtualAttribute) > -1;\r\n\t            }\r\n\t\r\n\t            if (!result && this.fallback) {\r\n\t                result = existingProvider.nodeHasBindings(node);\r\n\t            }\r\n\t\r\n\t            return result;\r\n\t        };\r\n\t\r\n\t        //return the bindings given a node and the bindingContext\r\n\t        this.getBindingsFunction = function (getAccessors) {\r\n\t            return function (node, bindingContext) {\r\n\t                var i, j, bindingAccessor, binding,\r\n\t                    result = {},\r\n\t                    value, index,\r\n\t                    classes = \"\";\r\n\t\r\n\t                if (node.nodeType === 1) {\r\n\t                    classes = node.getAttribute(this.attribute);\r\n\t                }\r\n\t                else if (node.nodeType === 8) {\r\n\t                    value = \"\" + node.nodeValue || node.text;\r\n\t                    index = value.indexOf(this.virtualAttribute);\r\n\t\r\n\t                    if (index > -1) {\r\n\t                        classes = value.substring(index + this.virtualAttribute.length);\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                if (classes) {\r\n\t                    classes = classes.replace(/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g, \"\").replace(/(\\s|\\u00A0){2,}/g, \" \").split(' ');\r\n\t                    //evaluate each class, build a single object to return\r\n\t                    for (i = 0, j = classes.length; i < j; i++) {\r\n\t                        bindingAccessor = this.bindingRouter(classes[i], this.bindings);\r\n\t                        if (bindingAccessor) {\r\n\t                            binding = typeof bindingAccessor == \"function\" ? bindingAccessor.call(bindingContext.$data, bindingContext, classes) : bindingAccessor;\r\n\t                            if (getAccessors)\r\n\t                                binding = objectMap(binding, makeValueAccessor);\r\n\t                            ko.utils.extend(result, binding);\r\n\t                        } else {\r\n\t                            if (options.log) {\r\n\t                                options.log('No binding function provided for data class \"' +\r\n\t                                            classes[i] + '\" in element ',\r\n\t                                            node,\r\n\t                                            '\\nMake sure data class is spelled correctly ' +\r\n\t                                            'and that it\\'s binding function is registered.');\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                else if (this.fallback) {\r\n\t                    result = existingProvider[getAccessors ? 'getBindingAccessors' : 'getBindings'](node, bindingContext);\r\n\t                }\r\n\t\r\n\t                if (options.log) {\r\n\t                    for (var bindingName in result) {\r\n\t                        if (result.hasOwnProperty(bindingName) &&\r\n\t                                bindingName !== \"_ko_property_writers\" &&\r\n\t                                    bindingName !== 'valueUpdate' &&\r\n\t                                        bindingName !== 'optionsText' &&\r\n\t                                            bindingName !== 'optionsValue' &&\r\n\t                                                bindingName !== 'clickBubble' &&\r\n\t                                                    !ko.bindingHandlers[bindingName] &&\r\n\t                                                        !loggedBindings[bindingName]) {\r\n\t                            if (binding) {\r\n\t                                options.log('Unknown binding handler \"' + bindingName + '\" found in element',\r\n\t                                            node,\r\n\t                                            ' defined in data-class \"' + classes + '\" as',\r\n\t                                            binding,\r\n\t                                            '\\nMake sure that binding handler\\'s name is spelled correctly ' +\r\n\t                                            'and that it\\'s properly registered. ' +\r\n\t                                            '\\nThe binding will be ignored.');\r\n\t                            } else {\r\n\t                                options.log('Unknown binding handler \"' + bindingName + '\" in',\r\n\t                                            node,\r\n\t                                            '\\nMake sure that it\\'s name spelled correctly and that it\\'s ' +\r\n\t                                            'properly registered. ' +\r\n\t                                            '\\nThe binding will be ignored.');\r\n\t                            }\r\n\t                            loggedBindings[bindingName] = bindingName;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                return result;\r\n\t            };\r\n\t        };\r\n\t\r\n\t        this.getBindings = this.getBindingsFunction(false);\r\n\t        this.getBindingAccessors = this.getBindingsFunction(true);\r\n\t    };\r\n\t\r\n\t    if (!exports) {\r\n\t        ko.classBindingProvider = classBindingsProvider;\r\n\t    }\r\n\t\r\n\t    return classBindingsProvider;\r\n\t}));\r\n\t\r\n\t/*global define,document,WinJS*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(1),\r\n\t    __webpack_require__(2)\r\n\t], __WEBPACK_LOCAL_MODULE_1__ = (function (\r\n\t    ko,\r\n\t    core\r\n\t) {\r\n\t    'use strict';\r\n\t\r\n\t    var toArray = core.array.toArray,\r\n\t        has = core.object.has,\r\n\t        templateEngine = new ko.nativeTemplateEngine(),\r\n\t        templates = {\r\n\t            data: { }\r\n\t        };\r\n\t\r\n\t    function registerTemplates ( templatesHtml ) {\r\n\t        // iterate through all templates (e.g. children of root in templatesHtml)\r\n\t        // for every child get its templateId and templateHtml\r\n\t        // and add it to 'templates'\r\n\t        var div = document.createElement('div');\r\n\t\r\n\t        if (typeof WinJS !== 'undefined') {\r\n\t            WinJS.Utilities.setInnerHTMLUnsafe(div, templatesHtml);\r\n\t        } else {\r\n\t            div.innerHTML = templatesHtml;\r\n\t        }\r\n\t\r\n\t        toArray(div.childNodes).forEach(function ( childNode ) {\r\n\t            if (childNode.nodeType === 1 && has(childNode, 'id')) {\r\n\t                templates[childNode.id] = childNode.innerHTML;\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t\r\n\t    function getRegisteredTemplates () {\r\n\t        return templates;\r\n\t    }\r\n\t\r\n\t    function makeTemplateSource ( template ) {\r\n\t\r\n\t        if ( template instanceof Element ) {\r\n\t            return {\r\n\t                nodes: ko.templateSources.domElement.prototype\r\n\t                    .nodes.bind({ domElement: template })\r\n\t            };\r\n\t        }\r\n\t\r\n\t        return {\r\n\t            data: function ( key, value ) {\r\n\t                if (!has(templates.data, template)) {\r\n\t                    templates.data[template] = { };\r\n\t                }\r\n\t\r\n\t                // if called with only key then return the associated value\r\n\t                if (arguments.length === 1) {\r\n\t                    return templates.data[template][key];\r\n\t                }\r\n\t\r\n\t                // if called with key and value then store the value\r\n\t                templates.data[template][key] = value;\r\n\t            },\r\n\t            text: function ( value ) {\r\n\t                // if no value return the template content\r\n\t                // since that's what KO wants\r\n\t                if (arguments.length === 0) {\r\n\t                    return templates[template];\r\n\t                }\r\n\t\r\n\t                throw new Error('An attempt to override template \"' +\r\n\t                                template + '\" with content \"' + value + '\" ' +\r\n\t                                'Template overriding is not supported.');\r\n\t            }\r\n\t        };\r\n\t    }\r\n\t\r\n\t    templateEngine.makeTemplateSource = makeTemplateSource;\r\n\t\r\n\t    ko.setTemplateEngine(templateEngine);\r\n\t\r\n\t    return {\r\n\t        registerTemplates: registerTemplates,\r\n\t        getRegisteredTemplates : getRegisteredTemplates\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\r\n\t\r\n\t/*global define,document,setTimeout*/\r\n\t/*jslint nomen: true*/\r\n\t/// <reference path=\"../Scripts/knockout-2.2.1.debug.js\" />\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(1),\r\n\t    __webpack_require__(2)\r\n\t], __WEBPACK_LOCAL_MODULE_2__ = (function (\r\n\t    ko,\r\n\t    core\r\n\t) {\r\n\t    /// <param name=\"ko\" value=\"window.ko\"/>\r\n\t    'use strict';\r\n\t\r\n\t    var isObservable = ko.isObservable,\r\n\t        unwrap = ko.utils.unwrapObservable,\r\n\t        observable = ko.observable,\r\n\t        computed = ko.computed,\r\n\t        has = core.object.has,\r\n\t        array = core.array;\r\n\t\r\n\t    return function selectableArray(items, opts) {\r\n\t        /*selectable(items, {\r\n\t            selectedItem: selectedTile,\r\n\t            selectionPolicy: 'single',\r\n\t            isSelectedPath: 'isSelected'\r\n\t        });*/\r\n\t        opts = opts || {};\r\n\t\r\n\t        var selectedItem = opts.selectedItem || observable(),\r\n\t            selectionPolicy = opts.selectionPolicy || 'single',\r\n\t            result;\r\n\t\r\n\t        function ensureIsSelectedExists(item) {\r\n\t            // if item has isSelected property which is observable and selectedPath is not set\r\n\t            // then nothing to do\r\n\t            if (isObservable(item.isSelected) && (!has(opts.isSelectedPath) || opts.isSelectedPath === 'isSelected')) {\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            if (isObservable(item.isSelected)) {\r\n\t                throw new Error('item has observable `isSelected` property but `isSelectedPath` specified as \"' +\r\n\t                                opts.isSelectedPath + '\". `selectable` uses `isSelected` property of an item ' +\r\n\t                                'to determine whether it\\'s selected. Either don\\'t specify `isSelectedPath` or ' +\r\n\t                                'rename `isSelected` property to something else.');\r\n\t            }\r\n\t\r\n\t            if (item.hasOwnProperty('isSelected')) {\r\n\t                throw new Error('item has non-observable `isSelected` property. `selectable` uses `isSelected` ' +\r\n\t                                'property of an item to determine whether it\\'s selected. Either make `isSelected` ' +\r\n\t                                'observable or rename it.');\r\n\t            }\r\n\t\r\n\t            item.isSelected = observable();\r\n\t\r\n\t            // subscribe isSelectedPath property to isSelected\r\n\t            if (has(opts.isSelectedPath) &&\r\n\t                    opts.isSelectedPath !== 'isSelected' &&\r\n\t                        !isObservable(item[opts.isSelectedPath])) {\r\n\t                throw new Error('item\\'s property \"' + opts.isSelectedPath + '\" specified by `isSelectedPath` ' +\r\n\t                                ' isn\\'t observable. Either make it observable or specify different property in ' +\r\n\t                                ' `isSelectedPath`');\r\n\t            }\r\n\t\r\n\t            if (has(opts.isSelectedPath)) {\r\n\t                item.isSelected = item[opts.isSelectedPath];\r\n\t            }\r\n\t\r\n\t            item.isSelected.subscribe(function (newValue) {\r\n\t                if (newValue) {\r\n\t                    selectedItem(item);\r\n\t                } else {\r\n\t                    if (selectedItem() === item) {\r\n\t                        selectedItem(undefined);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t\r\n\t        // subscribe to isSelected property of every item if isSelectedPath is specified\r\n\t        if (isObservable(items)) {\r\n\t            result = computed(function () {\r\n\t                var unwrapped = unwrap(items);\r\n\t                unwrapped.forEach(ensureIsSelectedExists);\r\n\t                return array.copy(unwrapped);\r\n\t            });\r\n\t        } else {\r\n\t            items.forEach(ensureIsSelectedExists);\r\n\t            result = array.copy(items);\r\n\t        }\r\n\t\r\n\t        selectedItem.subscribe(function (newItem) {\r\n\t            unwrap(result).forEach(function (item) {\r\n\t                item.isSelected(item === newItem);\r\n\t            });\r\n\t\r\n\t            if (selectionPolicy === 'deselect' && newItem) {\r\n\t                setTimeout(function () { selectedItem(undefined); }, 0);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        result.selectedItem = selectedItem;\r\n\t\r\n\t        return result;\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\r\n\t\r\n\t/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(1)\r\n\t], __WEBPACK_LOCAL_MODULE_3__ = (function (\r\n\t    core,\r\n\t    ko\r\n\t) {\r\n\t    'use strict';\r\n\t\r\n\t    function cloneNodes(nodesArray, shouldCleanNodes) {\r\n\t        return core.array.toArray(nodesArray).map(function (node) {\r\n\t            var clonedNode = node.cloneNode(true);\r\n\t            return shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode;\r\n\t        });\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        cloneNodes: cloneNodes\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\r\n\t\r\n\t/*global define,document*/\r\n\t/*jslint nomen: true*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(1),\r\n\t    __webpack_require__(23),\r\n\t    __webpack_require__(2),\r\n\t    __WEBPACK_LOCAL_MODULE_0__,\r\n\t    __WEBPACK_LOCAL_MODULE_1__,\r\n\t    __WEBPACK_LOCAL_MODULE_2__,\r\n\t    __WEBPACK_LOCAL_MODULE_3__\r\n\t], __WEBPACK_LOCAL_MODULE_4__ = (function (\r\n\t    ko,\r\n\t    mapping,\r\n\t    core,\r\n\t    ClassBindingProvider,\r\n\t    htmlTemplateSource,\r\n\t    selectableArray,\r\n\t    koUtils\r\n\t) {\r\n\t    'use strict';\r\n\t\r\n\t    var merge = core.object.merge,\r\n\t        toArray = core.array.toArray,\r\n\t        classBindingProvider = new ClassBindingProvider({}, {\r\n\t            log: core.log.warn,\r\n\t            fallback: true\r\n\t        }),\r\n\t        root = ko.observable();\r\n\t\r\n\t    ko.bindingProvider.instance = classBindingProvider;\r\n\t\r\n\t    function observable(initialValue) {\r\n\t        return ko.observable(initialValue);\r\n\t    }\r\n\t\r\n\t    function observableArray(initialValue) {\r\n\t        return ko.observableArray(initialValue);\r\n\t    }\r\n\t\r\n\t    function computed(func) {\r\n\t        return ko.computed(func);\r\n\t    }\r\n\t\r\n\t    function toJson(viewModel) {\r\n\t        // Extracts underlying value from observables\r\n\t        return mapping.toJSON(viewModel);\r\n\t    }\r\n\t\r\n\t    function toObject(viewModel) {\r\n\t        return JSON.parse(toJson(viewModel));\r\n\t    }\r\n\t\r\n\t    function registerBindings() {\r\n\t        toArray(arguments).forEach(classBindingProvider.registerBindings.bind(classBindingProvider));\r\n\t    }\r\n\t\r\n\t    function toViewModel(data, viewModel, mappings) {\r\n\t        var knockoutStyleMappings = Object.keys(mappings).reduce(function (o, k) {\r\n\t            return merge(o, {\r\n\t                k: k,\r\n\t                create: function (options) { return mappings[k](options.data); }\r\n\t            });\r\n\t        }, {});\r\n\t\r\n\t        return mapping.fromJS(data, knockoutStyleMappings, viewModel);\r\n\t    }\r\n\t\r\n\t    function registerTemplates() {\r\n\t        toArray(arguments).forEach(htmlTemplateSource.registerTemplates);\r\n\t    }\r\n\t\r\n\t    function dataBinding(name, data) {\r\n\t        var binding = {};\r\n\t\r\n\t        binding[name] = data;\r\n\t\r\n\t        return binding;\r\n\t    }\r\n\t\r\n\t    function template(name, data) {\r\n\t        return dataBinding('template', {\r\n\t            name: name,\r\n\t            data: data\r\n\t        });\r\n\t    }\r\n\t\r\n\t    function dataClass(name, data) {\r\n\t        return {\r\n\t            dataClass: name,\r\n\t            viewmodel: data\r\n\t        };\r\n\t    }\r\n\t\r\n\t    function getElement(name) {\r\n\t        return document.getElementsByTagName(name)[0];\r\n\t    }\r\n\t\r\n\t    function init(config) {\r\n\t        var body,\r\n\t            opening_comment = document.createComment(' ko class: scalejs-shell '),\r\n\t            closing_comment = document.createComment(' /ko ');\r\n\t\r\n\t        // Set the node to the parent element of the currently running script\r\n\t        body = document.getElementsByTagName('script');\r\n\t        body = body[body.length - 1].parentElement;\r\n\t            Array.prototype.slice.call(document.getElementsByTagName(\"script\")).forEach(function (el) {\r\n\t                if ((el.getAttribute('data-main') || '').indexOf(\"app/app\") != -1) {\r\n\t                    body = el.parentElement\r\n\t                }\r\n\t            });\r\n\t\r\n\t        if (body === getElement('html') || body === getElement('head')) {\r\n\t            body = getElement('body');\r\n\t        }\r\n\t\r\n\t        if (body && !config.doNotRender) {\r\n\t            body.appendChild(opening_comment);\r\n\t            body.appendChild(closing_comment);\r\n\t\r\n\t            registerBindings({\r\n\t                'scalejs-shell': function (context) {\r\n\t                    return {\r\n\t                        render: context.$data.root\r\n\t                    };\r\n\t                }\r\n\t            });\r\n\t\r\n\t            ko.applyBindings({ root: root }, body);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        core: {\r\n\t            mvvm: {\r\n\t                root: root,\r\n\t                toJson: toJson,\r\n\t                registerBindings: registerBindings,\r\n\t                registerTemplates: registerTemplates,\r\n\t                dataClass: dataClass,\r\n\t                template: template,\r\n\t                dataBinding: dataBinding,\r\n\t                selectableArray: selectableArray,\r\n\t                getRegisteredTemplates: htmlTemplateSource.getRegisteredTemplates,\r\n\t                ko: {\r\n\t                    utils: koUtils\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t        sandbox: {\r\n\t            mvvm: {\r\n\t                observable: observable,\r\n\t                observableArray: observableArray,\r\n\t                computed: computed,\r\n\t                registerBindings: registerBindings,\r\n\t                registerTemplates: registerTemplates,\r\n\t                toJson: toJson,\r\n\t                toViewModel: toViewModel,\r\n\t                toObject: toObject,\r\n\t                dataClass: dataClass,\r\n\t                template: template,\r\n\t                dataBinding: dataBinding,\r\n\t                selectableArray: selectableArray,\r\n\t                getRegisteredTemplates: htmlTemplateSource.getRegisteredTemplates,\r\n\t                root: root\r\n\t            }\r\n\t        },\r\n\t        init: init\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\r\n\t\r\n\t/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(1),\r\n\t    __webpack_require__(2)\r\n\t], __WEBPACK_LOCAL_MODULE_5__ = (function (\r\n\t    ko,\r\n\t    core\r\n\t) {\r\n\t    'use strict';\r\n\t\r\n\t    var is = core.type.is,\r\n\t        has = core.object.has;\r\n\t\r\n\t    /*jslint unparam: true*/\r\n\t    function init(element, valueAccessor, allBindingsAccessor, viewModel) {\r\n\t        if (!has(viewModel)) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        var unwrap = ko.utils.unwrapObservable,\r\n\t            value = valueAccessor(),\r\n\t            properties = unwrap(value),\r\n\t            property,\r\n\t            handler,\r\n\t            //currentValue,\r\n\t            changeHandler;\r\n\t\r\n\t        function bindPropertyChangeHandler(h, currentValue) {\r\n\t            return function (newValue) {\r\n\t                if (newValue !== currentValue) {\r\n\t                    currentValue = newValue;\r\n\t                    h.call(viewModel, newValue, element);\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t\r\n\t        function subscribeChangeHandler(property, changeHandler) {\r\n\t            ko.computed({\r\n\t                read: function () {\r\n\t                    var val = unwrap(viewModel[property]);\r\n\t                    changeHandler(val);\r\n\t                },\r\n\t                disposeWhenNodeIsRemoved: element\r\n\t            });\r\n\t        }\r\n\t\r\n\t        for (property in properties) {\r\n\t            if (properties.hasOwnProperty(property)) {\r\n\t                handler = properties[property];\r\n\t                if (is(handler.initial, 'function')) {\r\n\t                    handler.initial.apply(viewModel, [unwrap(viewModel[property]), element]);\r\n\t                }\r\n\t                if (is(handler.update, 'function')) {\r\n\t                    changeHandler = bindPropertyChangeHandler(handler.update, unwrap(viewModel[property]));\r\n\t                }\r\n\t                if (is(handler, 'function')) {\r\n\t                    changeHandler = bindPropertyChangeHandler(handler, unwrap(viewModel[property]));\r\n\t                }\r\n\t                if (changeHandler) {\r\n\t                    subscribeChangeHandler(property, changeHandler);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    /*jslint unparam: false*/\r\n\t\r\n\t    return {\r\n\t        init: init\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\r\n\t\r\n\t/*global define,setTimeout,window*/\r\n\t/// <reference path=\"../Scripts/_references.js\" />\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(1)\r\n\t], __WEBPACK_LOCAL_MODULE_6__ = (function (\r\n\t    core,\r\n\t    ko\r\n\t) {\r\n\t    /// <param name=\"ko\" value=\"window.ko\" />\r\n\t    'use strict';\r\n\t\r\n\t    var is = core.type.is,\r\n\t        has = core.object.has,\r\n\t        unwrap = ko.utils.unwrapObservable;\r\n\t\r\n\t    function init() {\r\n\t        return { 'controlsDescendantBindings': true };\r\n\t    }\r\n\t\r\n\t    /*jslint unparam: true*/\r\n\t    function update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n\t        var value = unwrap(valueAccessor()),\r\n\t            bindingAccessor,\r\n\t            binding,\r\n\t            context,\r\n\t            render;\r\n\t\r\n\t        function applyBindings() {\r\n\t            if (binding) {\r\n\t                ko.applyBindingsToNode(element, binding, viewModel);\r\n\t            } else {\r\n\t                ko.virtualElements.emptyNode(element);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if (value) {\r\n\t            if (is(value.dataClass, 'string')) {\r\n\t                // if dataClass is specified then get the binding from the bindingRouter\r\n\t                bindingAccessor = ko.bindingProvider.instance.bindingRouter(value.dataClass, ko.bindingProvider.instance.bindings);\r\n\t                if (!bindingAccessor) {\r\n\t                    throw new Error('Don\\'t know how to render binding \"' + value.dataClass +\r\n\t                                    '\" - no such binding registered. ' +\r\n\t                                    'Either register the bindng or correct its name.');\r\n\t                }\r\n\t\r\n\t                if (bindingAccessor) {\r\n\t                    binding = is(bindingAccessor, 'function')\r\n\t                            ? bindingAccessor.call(value.viewmodel || viewModel, bindingContext)\r\n\t                            : bindingAccessor;\r\n\t                }\r\n\t\r\n\t            } else {\r\n\t                // otherwise whole object is the binding\r\n\t                binding = is(value, 'function') ? value.call(viewModel, bindingContext) : value;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        render = applyBindings;\r\n\t\r\n\t        context = {\r\n\t            getElement: function () {\r\n\t                return element;\r\n\t            }\r\n\t        };\r\n\t\r\n\t        render.call(context);\r\n\t\r\n\t        ko.utils.domData.set(element, 'binding', binding);\r\n\t    }\r\n\t    /*jslint unparam: false*/\r\n\t\r\n\t    return {\r\n\t        init: init,\r\n\t        update: update\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\r\n\t\r\n\t/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(1),\r\n\t    __WEBPACK_LOCAL_MODULE_4__,\r\n\t    __WEBPACK_LOCAL_MODULE_5__,\r\n\t    __WEBPACK_LOCAL_MODULE_6__,\r\n\t    module\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function (\r\n\t    core,\r\n\t    ko,\r\n\t    mvvm,\r\n\t    changeBinding,\r\n\t    renderBinding,\r\n\t    module\r\n\t) {\r\n\t    'use strict';\r\n\t\r\n\t    ko.bindingHandlers.change = changeBinding;\r\n\t    ko.bindingHandlers.render = renderBinding;\r\n\t\r\n\t    ko.virtualElements.allowedBindings.change = true;\r\n\t    ko.virtualElements.allowedBindings.render = true;\r\n\t\r\n\t    if(module.config && core.type.is(module.config, 'function')) {\r\n\t        mvvm.init(module.config());\r\n\t    } else {\r\n\t        mvvm.init({});\r\n\t    }\r\n\t\r\n\t    core.registerExtension(mvvm);\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t\r\n\t/*global define*/\r\n\t/*jslint unparam:true*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t        load: function (name, req, onLoad, config) {\r\n\t            /*jslint regexp: true*/\r\n\t            var names = name.match(/([^,]+)/g) || [];\r\n\t            /*jslint regexp: false*/\r\n\t\r\n\t            names = names.map(function (n) {\r\n\t                if (n.indexOf('.js', n.length - 3) > -1) {\r\n\t                    return n;\r\n\t                }\r\n\t\r\n\t                if (n.indexOf('Bindings', n.length - 'Bindings'.length) === -1) {\r\n\t                    n = n + 'Bindings';\r\n\t                }\r\n\t\r\n\t                if (n.indexOf('/') === -1) {\r\n\t                    return './bindings/' + n;\r\n\t                }\r\n\t\r\n\t                return n;\r\n\t            });\r\n\t\r\n\t            names.push('scalejs.mvvm', 'scalejs.core');\r\n\t\r\n\t            req(names, function () {\r\n\t                var core = arguments[arguments.length - 1],\r\n\t                    bindings = Array.prototype.slice.call(arguments, 0, arguments.length - 2);\r\n\t\r\n\t                if (!config.isBuild) {\r\n\t                    core.mvvm.registerBindings.apply(null, bindings);\r\n\t                }\r\n\t\r\n\t                onLoad(bindings);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t/*global define*/\r\n\t/*jslint unparam:true*/\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t        load: function (name, req, onLoad, config) {\r\n\t            /*jslint regexp: true*/\r\n\t            var names = name.match(/([^,]+)/g) || [];\r\n\t            /*jslint regexp: false*/\r\n\t\r\n\t            names = names.map(function (n) {\r\n\t                if (n.indexOf('.html', n.length - 5) === -1) {\r\n\t                    n = n + '.html';\r\n\t                }\r\n\t\r\n\t                if (n.indexOf('/') === -1) {\r\n\t                    n = './views/' + n;\r\n\t                }\r\n\t\r\n\t                return 'text!' + n;\r\n\t            });\r\n\t\r\n\t            names.push('scalejs.mvvm', 'scalejs.core');\r\n\t\r\n\t            req(names, function () {\r\n\t                var core = arguments[arguments.length - 1],\r\n\t                    views = Array.prototype.slice.call(arguments, 0, arguments.length - 2);\r\n\t\r\n\t                if (!config.isBuild) {\r\n\t                    core.mvvm.registerTemplates.apply(null, views);\r\n\t                }\r\n\t\r\n\t                onLoad(views);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\t\r\n\t/**\r\n\t * Provides type functionality to scalejs base\r\n\t * @namespace scalejs.base\r\n\t * @module type\r\n\t */\r\n\t\r\n\t/*global define*/\r\n\t\r\n\t/**\r\n\t * Detects the type of the passed object\r\n\t *\r\n\t * @param {Any} obj object to find the type of\r\n\t * @memberOf type\r\n\t * @return {String} type of the passed object\r\n\t */\r\n\tfunction typeOf(obj) {\r\n\t    if (obj === undefined) {\r\n\t        return 'undefined';\r\n\t    }\r\n\t\r\n\t    if (obj === null) {\r\n\t        return 'null';\r\n\t    }\r\n\t\r\n\t    var t = Object.prototype.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase(),\r\n\t        m;\r\n\t\r\n\t    if (t !== 'object') {\r\n\t        return t;\r\n\t    }\r\n\t\r\n\t    m = obj.constructor.toString().match(/^function\\s*([$A-Z_][0-9A-Z_$]*)/i);\r\n\t    if (m === null) {\r\n\t        return 'object';\r\n\t    }\r\n\t\r\n\t    return m[1];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determines if an object (and possibly a chain of properties within\r\n\t * that object actually are of the passed type\r\n\t * (no type will be null/undefined)\r\n\t *\r\n\t * @param {Any}        value     object to test\r\n\t * @param {String}     [prop...] property chain to test within value\r\n\t * @param {Any|String} [type]    type of the object to test for\r\n\t * @memberOf type\r\n\t * @return {Boolean} if the object 'is' (see inline documentation)\r\n\t */\r\n\tfunction is(value) {\r\n\t    // If more than two arguments are provided, the value is considered to be\r\n\t    // nested within a chain of properties starting with the first argument:\r\n\t    // | is(object,'parent','child','leaf','boolean')\r\n\t    // will check whether the property object.parent.child.leaf exists and is\r\n\t    // a boolean.\r\n\t    //\r\n\t    // The intent of this method is to replace unsafe guard conditions that\r\n\t    // rely on type coercion:\r\n\t    // | if (object && object.parent && object.parent.child) {\r\n\t    // |   // Issue: all falsy values are treated like null and undefined:\r\n\t    // |   // '', 0, false...\r\n\t    // | }\r\n\t    // with a safer check in a single call:\r\n\t    // | if ( is(object,'parent','child','number') ) {\r\n\t    // |   // only null and undefined values are rejected\r\n\t    // |   // and the type expected (here 'number') is explicit\r\n\t    // | }\r\n\t    //\r\n\t    // Returns:\r\n\t    //   * false, if no argument is provided\r\n\t    //   * false, if a single argument is provided which is null or undefined\r\n\t    //   * true, if a single argument is provided, which is not null/undefined\r\n\t    //   * if the type argument is a non-empty string, it is compared with the\r\n\t    //     internal class of the value, put in lower case\r\n\t    //   * if the type argument is a function, the instanceof operator is used\r\n\t    //     to check if the value is considered an instance of the function\r\n\t    //   * otherwise, the value is compared with the provided type using the\r\n\t    //     strict equality operator ===\r\n\t    //\r\n\t    // Notes:\r\n\t    // This method retrieves the internal class of the provided value using\r\n\t    // | Object.prototype.toString.call(value).slice(8, -1)\r\n\t    // The class is then converted to lower case.\r\n\t    //\r\n\t    // See \"The Class of an Object\" section in the JavaScript Garden for\r\n\t    // more details on the internal class:\r\n\t    // http://bonsaiden.github.com/JavaScript-Garden/#types.typeof\r\n\t    //\r\n\t    // The internal class is only guaranteed to be the same in all browsers for\r\n\t    // Core JavaScript classes defined in ECMAScript. It differs for classes\r\n\t    // part of the Browser Object Model (BOM) and Document Object Model (DOM):\r\n\t    // window, document, DOM nodes:\r\n\t    //\r\n\t    //   window        - 'Object' (IE), 'Window' (Firefox,Opera),\r\n\t    //                   'global' (Chrome), 'DOMWindow' (Safari)\r\n\t    //   document      - 'Object' (IE),\r\n\t    //                   'HTMLDocument' (Firefox,Chrome,Safari,Opera)\r\n\t    //   document.body - 'Object' (IE),\r\n\t    //                   'HTMLBodyElement' (Firefox,Chrome,Safari,Opera)\r\n\t    //   document.createElement('div') - 'Object' (IE)\r\n\t    //                   'HTMLDivElement' (Firefox,Chrome,Safari,Opera)\r\n\t    //   document.createComment('') - 'Object' (IE),\r\n\t    //                   'Comment' (Firefox,Chrome,Safari,Opera)\r\n\t\r\n\t    // do not trust global undefined, which may be overridden\r\n\t    var undef = void 0,\r\n\t        i,\r\n\t        // iterative variable\r\n\t    length = arguments.length,\r\n\t        last = length - 1,\r\n\t        type,\r\n\t        typeOfType,\r\n\t        internalClass,\r\n\t        v = value;\r\n\t\r\n\t    if (length === 0) {\r\n\t        return false; // no argument\r\n\t    }\r\n\t\r\n\t    if (length === 1) {\r\n\t        return value !== null && value !== undef;\r\n\t    }\r\n\t\r\n\t    if (length > 2) {\r\n\t        for (i = 0; i < last - 1; i += 1) {\r\n\t            if (!is(v)) {\r\n\t                return false;\r\n\t            }\r\n\t            v = v[arguments[i + 1]];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    type = arguments[last];\r\n\t    if (v === null) {\r\n\t        return type === null || type === 'null';\r\n\t    }\r\n\t    if (v === undef) {\r\n\t        return type === undef || type === 'undefined';\r\n\t    }\r\n\t    if (type === '') {\r\n\t        return v === type;\r\n\t    }\r\n\t\r\n\t    typeOfType = typeof type === 'undefined' ? 'undefined' : _typeof(type);\r\n\t    if (typeOfType === 'string') {\r\n\t        internalClass = Object.prototype.toString.call(v).slice(8, -1).toLowerCase();\r\n\t        return internalClass === type;\r\n\t    }\r\n\t\r\n\t    if (typeOfType === 'function') {\r\n\t        return v instanceof type;\r\n\t    }\r\n\t\r\n\t    return v === type;\r\n\t}\r\n\t\r\n\texports.default = {\r\n\t    is: is,\r\n\t    typeOf: typeOf\r\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _modules = __webpack_require__(13);\n\t\n\tvar _modules2 = _interopRequireDefault(_modules);\n\t\n\tvar _scalejs = __webpack_require__(24);\n\t\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\n\t\n\tvar _knockout = __webpack_require__(1);\n\t\n\tvar _knockout2 = _interopRequireDefault(_knockout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* global require */\n\t//import extensions from 'scalejs.extensions';\n\t//import common from 'scalejs.metadataFactory-common';\n\t\n\t\n\t_scalejs2.default.registerModules.apply(_scalejs2.default, _toConsumableArray(_modules2.default));\n\t_scalejs2.default.run();\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = main;\n\t\n\tvar _scalejs = __webpack_require__(3);\n\t\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\n\t\n\tvar _main = __webpack_require__(19);\n\t\n\tvar _main2 = _interopRequireDefault(_main);\n\t\n\tvar _lodash = __webpack_require__(6);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_scalejs2.default.mvvm.registerTemplates(_main2.default); /*global define,sandbox,mainViewModel */\n\t\n\t\n\tfunction main() {\n\t    var root = _scalejs2.default.mvvm.root,\n\t        template = _scalejs2.default.mvvm.template,\n\t\n\t    // properties\n\t    metadata = _scalejs2.default.mvvm.observable({}); // needs to be initialized or currently throws exception\n\t\n\t    root(template('main_template', {\n\t        metadata: metadata\n\t    }));\n\t\n\t    function walkGetTypes(nodes) {\n\t        return (nodes || []).reduce(function (types, node) {\n\t            return types.concat([node.type]).concat(walkGetTypes(node.children));\n\t        }, []);\n\t    }\n\t\n\t    function resolveModule(moduleType, done) {\n\t        switch (moduleType) {\n\t            case 'dynamic':\n\t                __webpack_require__.e/* nsure */(1, function (require) {\n\t                    __webpack_require__(10).default();\n\t                    done();\n\t                });\n\t        }\n\t    }\n\t    function loadMetadata(md) {\n\t        // first, walk through metadata to gather all types\n\t        var types = _lodash2.default.uniq(walkGetTypes(Array.isArray(md) ? md : [md])).filter(function (type) {\n\t            return type && _scalejs2.default.metadataFactory.getRegisteredTypes().indexOf(type) === -1;\n\t        });\n\t        console.log(types);\n\t\n\t        if (types.length === 0) {\n\t            metadata(md);\n\t        } else {\n\t            (function () {\n\t                var counter = 0;\n\t\n\t                types.forEach(function (type) {\n\t                    resolveModule(type, function () {\n\t                        counter++;\n\t                        if (counter === types.length) {\n\t                            //we loaded all the types! now we can load metadata\n\t                            metadata(md);\n\t                        }\n\t                    });\n\t                });\n\t            })();\n\t        }\n\t    }\n\t\n\t    loadMetadata([{\n\t        type: 'template',\n\t        template: 'example_children_template',\n\t        children: [{\n\t            type: 'template',\n\t            template: 'hello_template',\n\t            name: 'Erica'\n\t        }, {\n\t            type: 'template',\n\t            template: 'hello_template',\n\t            name: 'Jim'\n\t        }]\n\t    }, {\n\t        type: 'template',\n\t        template: 'json_stringify_template',\n\t        message: 'This is a message that got passed',\n\t        endpoint: {\n\t            url: 'http://jsonplaceholder.typicode.com/posts/1',\n\t            type: 'get'\n\t        }\n\t    }]);\n\t\n\t    window.loadMetadata = loadMetadata;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _mainModule = __webpack_require__(12);\n\t\n\tvar _mainModule2 = _interopRequireDefault(_mainModule);\n\t\n\tvar _templateModule = __webpack_require__(14);\n\t\n\tvar _templateModule2 = _interopRequireDefault(_templateModule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = [_mainModule2.default, _templateModule2.default];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _scalejs = __webpack_require__(3);\n\t\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\n\t\n\tvar _templateViewModel = __webpack_require__(15);\n\t\n\tvar _templateViewModel2 = _interopRequireDefault(_templateViewModel);\n\t\n\tvar _template = __webpack_require__(20);\n\t\n\tvar _template2 = _interopRequireDefault(_template);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_scalejs2.default.mvvm.registerTemplates(_template2.default);\n\t\n\t_scalejs2.default.metadataFactory.registerViewModels({\n\t    template: _templateViewModel2.default\n\t});\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (node) {\n\t    var createViewModels = _scalejs2.default.metadataFactory.createViewModels.bind(this),\n\t        // pass context\n\t    data = _knockout2.default.observable(),\n\t        mappedChildNodes = createViewModels(node.children || []);\n\t\n\t    window.data = data;\n\t\n\t    if (node.endpoint) {\n\t        _jquery2.default.ajax(merge(node.endpoint, {\n\t            success: function success(results) {\n\t                data(results);\n\t            },\n\t            error: function error(_error) {\n\t                console.error(_error);\n\t            }\n\t        }));\n\t    }\n\t\n\t    return merge(node, {\n\t        data: data,\n\t        mappedChildNodes: mappedChildNodes\n\t    });\n\t};\n\t\n\tvar _scalejs = __webpack_require__(3);\n\t\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\n\t\n\tvar _knockout = __webpack_require__(1);\n\t\n\tvar _knockout2 = _interopRequireDefault(_knockout);\n\t\n\tvar _jquery = __webpack_require__(22);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar merge = _scalejs2.default.object.merge;\n\t\n\t// node is a configuration object from json\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(17);\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _scalejs = __webpack_require__(2);\n\t\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\n\t\n\tvar _knockout = __webpack_require__(1);\n\t\n\tvar _knockout2 = _interopRequireDefault(_knockout);\n\t\n\tvar _lodash = __webpack_require__(6);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _metadataFactory = __webpack_require__(21);\n\t\n\tvar _metadataFactory2 = _interopRequireDefault(_metadataFactory);\n\t\n\t__webpack_require__(7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//import 'scalejs.expression-jsep';\n\t\n\t_scalejs2.default.mvvm.registerTemplates(_metadataFactory2.default);\n\t//import moment from 'moment';\n\t\n\t\n\tvar has = _scalejs2.default.object.has,\n\t    is = _scalejs2.default.type.is,\n\t    computed = _knockout2.default.computed,\n\t    evaluate = function evaluate() {},\n\t    //core.expression.evaluate,\n\tobservable = _knockout2.default.observable,\n\t    observableArray = _knockout2.default.observableArray,\n\t    identifiers = {},\n\t    useDefault = true,\n\t    viewModels = {\n\t    '': defaultViewModel,\n\t    context: contextViewModel\n\t},\n\t    //template: function (node) {\n\t// does nothing, provide template\n\t//  return node;\n\t//}\n\tmetadataFactory = {};\n\t\n\t/*\r\n\t * Metadata Creation Functions\r\n\t */\n\t\n\tfunction createViewModel(node) {\n\t    var rendered = observable(true),\n\t        context = this;\n\t\n\t    node = _lodash2.default.cloneDeep(node); //clone the node to stop mutation issues\n\t\n\t    // if(!this || !this.metadata) {\n\t    //     console.warn('Creating viewmodel without metadata context. If metadata context is desired, call this function using \"this\"');\n\t    // }\n\t    if (node && node.type === 'ignore') {\n\t        console.log('ignored node ', node);\n\t    } else {\n\t        var mappedNode = viewModels[node.type] ? viewModels[node.type].call(this, node) : defaultViewModel.call(this, node);\n\t\n\t        if (mappedNode && has(node.rendered)) {\n\t            rendered = is(node.rendered, 'boolean') ? observable(node.rendered) : computed(function () {\n\t                return evaluate(node.rendered, function (id) {\n\t                    if (context.getValue && has(context.getValue(id))) {\n\t                        return context.getValue(id);\n\t                    }\n\t                    if (id === 'role') {\n\t                        return _scalejs2.default.userservice.role();\n\t                    }\n\t                    return '';\n\t                });\n\t            });\n\t        }\n\t        if (mappedNode) {\n\t            mappedNode.type = mappedNode.type || node.type;\n\t            mappedNode.rendered = rendered;\n\t        }\n\t        return mappedNode;\n\t    }\n\t}\n\t\n\tfunction createViewModels(metadata) {\n\t    var metadataContext;\n\t\n\t    // if(!this || !this.metadata) {\n\t    //     console.warn('A new instance of metadata has been detected, therefore a new context will be created');\n\t    // }\n\t\n\t    // allows all viewmodels created in the same instane of metadata\n\t    // to share context (as long as createViewModels is called correctly)\n\t    if (this && this.metadata) {\n\t        metadataContext = this;\n\t    } else {\n\t        metadataContext = {\n\t            metadata: metadata,\n\t            // default getValue can grab from the store\n\t            getValue: function getValue(id) {\n\t                if (id === 'store' && _scalejs2.default.noticeboard.global) {\n\t                    return _knockout2.default.unwrap(_scalejs2.default.noticeboard.global.dictionary);\n\t                }\n\t                if (id === '_') {\n\t                    return _lodash2.default;\n\t                }\n\t                // if (id == 'Date') {\n\t                //     return function (d) {\n\t                //         return  moment(d).toDate().getTime();\n\t                //     }\n\t                // }\n\t                // if (id == 'IncrementDate') {\n\t                //     return function (d,t,s) {\n\t                //         return moment(d).add(t,s).toDate().getTime();\n\t                //     }\n\t                // }\n\t                return identifiers[id];\n\t            }\n\t        };\n\t    }\n\t\n\t    return metadata.map(function (item) {\n\t        return createViewModel.call(metadataContext, item);\n\t    }).filter(function (vm) {\n\t        // filter undefined or null from the viewmodels array\n\t        return has(vm);\n\t    });\n\t}\n\t\n\tfunction createTemplate(metadata, context) {\n\t    if (!metadata) {\n\t        return _scalejs2.default.mvvm.template('metadata_loading_template');\n\t    }\n\t    if (!Array.isArray(metadata)) {\n\t        metadata = [metadata];\n\t    }\n\t\n\t    var viewModels = !context ? createViewModels(metadata) : createViewModels.call(context, metadata);\n\t\n\t    return _scalejs2.default.mvvm.template('metadata_items_template', viewModels);\n\t}\n\t\n\tfunction dispose(metadata) {\n\t    // clean up clean up everybody everywhere\n\t    _knockout2.default.unwrap(metadata).forEach(function (node) {\n\t        if (node.dispose) {\n\t            node.dispose();\n\t        }\n\t        dispose(node.mappedChildNodes || []);\n\t    });\n\t}\n\t\n\t/*\r\n\t * Default ViewModels\r\n\t */\n\t\n\tfunction contextViewModel(node) {\n\t    var newContextProps = {};\n\t    Object.keys(node).forEach(function (prop) {\n\t        if (prop === 'type') {\n\t            return;\n\t        }\n\t        if (Array.isArray(node[prop])) {\n\t            newContextProps[prop] = observableArray(node[prop]);\n\t        } else {\n\t            newContextProps[prop] = observable(node[prop]);\n\t        }\n\t    });\n\t    _scalejs2.default.object.extend(this, newContextProps);\n\t}\n\t\n\tfunction defaultViewModel(node) {\n\t    if (!useDefault) {\n\t        return;\n\t    }\n\t    return _scalejs2.default.object.merge(node, {\n\t        template: 'metadata_default_template'\n\t    });\n\t}\n\t\n\t/*\r\n\t * Registration Functions\r\n\t */\n\t\n\tfunction registerViewModels(newViewModels) {\n\t    _scalejs2.default.object.extend(viewModels, newViewModels);\n\t}\n\t\n\tfunction getRegisteredTypes() {\n\t    return Object.keys(viewModels);\n\t}\n\t\n\tfunction registerIdentifiers(ids) {\n\t    _scalejs2.default.object.extend(identifiers, ids);\n\t}\n\t\n\t/*\r\n\t * Knockout Binding\r\n\t */\n\t_knockout2.default.bindingHandlers.metadataFactory = {\n\t    init: function init() {\n\t        return { controlsDescendantBindings: true };\n\t    },\n\t    update: function update(element, valueAccessor, allBindings, viewModel, bindingContext) {\n\t\n\t        var metadata = _knockout2.default.unwrap(valueAccessor()).metadata ? _knockout2.default.unwrap(valueAccessor()).metadata : _knockout2.default.unwrap(valueAccessor()),\n\t            context = _knockout2.default.unwrap(valueAccessor()).context ? _knockout2.default.unwrap(valueAccessor()).context : null,\n\t            prevMetadata;\n\t\n\t        function disposeMetadata() {\n\t            prevMetadata = _knockout2.default.utils.domData.get(element, 'metadata');\n\t\n\t            if (prevMetadata) {\n\t                prevMetadata = Array.isArray(prevMetadata) ? prevMetadata : [prevMetadata];\n\t                dispose(prevMetadata);\n\t            }\n\t        }\n\t\n\t        setTimeout(function () {\n\t            var metadataTemplate = createTemplate(metadata, context).template;\n\t\n\t            disposeMetadata();\n\t\n\t            _knockout2.default.utils.domData.set(element, 'metadata', metadataTemplate.data);\n\t\n\t            _knockout2.default.bindingHandlers.template.update(element, function () {\n\t                return metadataTemplate;\n\t            }, allBindings, viewModel, bindingContext);\n\t\n\t            // first time running - set dom node disposal\n\t            if (!prevMetadata) {\n\t                _knockout2.default.utils.domNodeDisposal.addDisposeCallback(element, function () {\n\t                    disposeMetadata();\n\t                });\n\t            }\n\t        });\n\t    }\n\t\n\t};\n\t\n\texports.default = _scalejs2.default.registerExtension({\n\t    metadataFactory: {\n\t        createTemplate: createTemplate,\n\t        registerViewModels: registerViewModels,\n\t        createViewModels: createViewModels,\n\t        createViewModel: createViewModel,\n\t        useDefault: useDefault,\n\t        registerIdentifiers: registerIdentifiers,\n\t        getRegisteredTypes: getRegisteredTypes\n\t    }\n\t});\n\n/***/ },\n/* 18 */,\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=main_template> Hello World I am a es6/webpack Scalejs Application! <div data-bind=\\\"metadataFactory: metadata\\\"></div> </div> <div id=test_template> I am a metadata-driven template. Hi, <span data-bind=\\\"text: $data.name\\\"></span> </div>\";\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=hello_template> Hello <span data-bind=\\\"text: name\\\"></span>. </div> <div id=example_children_template> I welcome my children. </div> <div id=json_stringify_template> <pre data-bind=\\\"text: JSON.stringify(data(), null, 2)\\\"></pre> </div>\";\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=metadata_items_template> </div> <div id=metadata_item_template> </div> <div id=metadata_default_template> <div data-bind=\\\"text: JSON.stringify($data)\\\"></div> </div> <div id=metadata_loading_template> <div class=\\\"loader hexdots-loader\\\"> loading... </div> </div> <div id=no_template> <div data-bind=\\\"template: { name: 'metadata_items_template', data: mappedChildNodes}\\\"></div> </div>\";\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * jQuery JavaScript Library v2.2.4\n\t * http://jquery.com/\n\t *\n\t * Includes Sizzle.js\n\t * http://sizzlejs.com/\n\t *\n\t * Copyright jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * http://jquery.org/license\n\t *\n\t * Date: 2016-05-20T17:23Z\n\t */\n\t\n\t(function( global, factory ) {\n\t\n\t\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t\t// is present, execute the factory and get jQuery.\n\t\t\t// For environments that do not have a `window` with a `document`\n\t\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t\t// This accentuates the need for the creation of a real `window`.\n\t\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t\t// See ticket #14549 for more info.\n\t\t\tmodule.exports = global.document ?\n\t\t\t\tfactory( global, true ) :\n\t\t\t\tfunction( w ) {\n\t\t\t\t\tif ( !w.document ) {\n\t\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t\t}\n\t\t\t\t\treturn factory( w );\n\t\t\t\t};\n\t\t} else {\n\t\t\tfactory( global );\n\t\t}\n\t\n\t// Pass this if window is not defined yet\n\t}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\t\n\t// Support: Firefox 18+\n\t// Can't be in strict mode, several libs including ASP.NET trace\n\t// the stack via arguments.caller.callee and Firefox dies if\n\t// you try to trace through \"use strict\" call chains. (#13335)\n\t//\"use strict\";\n\tvar arr = [];\n\t\n\tvar document = window.document;\n\t\n\tvar slice = arr.slice;\n\t\n\tvar concat = arr.concat;\n\t\n\tvar push = arr.push;\n\t\n\tvar indexOf = arr.indexOf;\n\t\n\tvar class2type = {};\n\t\n\tvar toString = class2type.toString;\n\t\n\tvar hasOwn = class2type.hasOwnProperty;\n\t\n\tvar support = {};\n\t\n\t\n\t\n\tvar\n\t\tversion = \"2.2.4\",\n\t\n\t\t// Define a local copy of jQuery\n\t\tjQuery = function( selector, context ) {\n\t\n\t\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\t\treturn new jQuery.fn.init( selector, context );\n\t\t},\n\t\n\t\t// Support: Android<4.1\n\t\t// Make sure we trim BOM and NBSP\n\t\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\t\n\t\t// Matches dashed string for camelizing\n\t\trmsPrefix = /^-ms-/,\n\t\trdashAlpha = /-([\\da-z])/gi,\n\t\n\t\t// Used by jQuery.camelCase as callback to replace()\n\t\tfcamelCase = function( all, letter ) {\n\t\t\treturn letter.toUpperCase();\n\t\t};\n\t\n\tjQuery.fn = jQuery.prototype = {\n\t\n\t\t// The current version of jQuery being used\n\t\tjquery: version,\n\t\n\t\tconstructor: jQuery,\n\t\n\t\t// Start with an empty selector\n\t\tselector: \"\",\n\t\n\t\t// The default length of a jQuery object is 0\n\t\tlength: 0,\n\t\n\t\ttoArray: function() {\n\t\t\treturn slice.call( this );\n\t\t},\n\t\n\t\t// Get the Nth element in the matched element set OR\n\t\t// Get the whole matched element set as a clean array\n\t\tget: function( num ) {\n\t\t\treturn num != null ?\n\t\n\t\t\t\t// Return just the one element from the set\n\t\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\t\n\t\t\t\t// Return all the elements in a clean array\n\t\t\t\tslice.call( this );\n\t\t},\n\t\n\t\t// Take an array of elements and push it onto the stack\n\t\t// (returning the new matched element set)\n\t\tpushStack: function( elems ) {\n\t\n\t\t\t// Build a new jQuery matched element set\n\t\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\t\n\t\t\t// Add the old object onto the stack (as a reference)\n\t\t\tret.prevObject = this;\n\t\t\tret.context = this.context;\n\t\n\t\t\t// Return the newly-formed element set\n\t\t\treturn ret;\n\t\t},\n\t\n\t\t// Execute a callback for every element in the matched set.\n\t\teach: function( callback ) {\n\t\t\treturn jQuery.each( this, callback );\n\t\t},\n\t\n\t\tmap: function( callback ) {\n\t\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\t\treturn callback.call( elem, i, elem );\n\t\t\t} ) );\n\t\t},\n\t\n\t\tslice: function() {\n\t\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t\t},\n\t\n\t\tfirst: function() {\n\t\t\treturn this.eq( 0 );\n\t\t},\n\t\n\t\tlast: function() {\n\t\t\treturn this.eq( -1 );\n\t\t},\n\t\n\t\teq: function( i ) {\n\t\t\tvar len = this.length,\n\t\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t\t},\n\t\n\t\tend: function() {\n\t\t\treturn this.prevObject || this.constructor();\n\t\t},\n\t\n\t\t// For internal use only.\n\t\t// Behaves like an Array's method, not like a jQuery method.\n\t\tpush: push,\n\t\tsort: arr.sort,\n\t\tsplice: arr.splice\n\t};\n\t\n\tjQuery.extend = jQuery.fn.extend = function() {\n\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\ttarget = arguments[ 0 ] || {},\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = false;\n\t\n\t\t// Handle a deep copy situation\n\t\tif ( typeof target === \"boolean\" ) {\n\t\t\tdeep = target;\n\t\n\t\t\t// Skip the boolean and the target\n\t\t\ttarget = arguments[ i ] || {};\n\t\t\ti++;\n\t\t}\n\t\n\t\t// Handle case when target is a string or something (possible in deep copy)\n\t\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\t\ttarget = {};\n\t\t}\n\t\n\t\t// Extend jQuery itself if only one argument is passed\n\t\tif ( i === length ) {\n\t\t\ttarget = this;\n\t\t\ti--;\n\t\t}\n\t\n\t\tfor ( ; i < length; i++ ) {\n\t\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif ( ( options = arguments[ i ] ) != null ) {\n\t\n\t\t\t\t// Extend the base object\n\t\t\t\tfor ( name in options ) {\n\t\t\t\t\tsrc = target[ name ];\n\t\t\t\t\tcopy = options[ name ];\n\t\n\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\tif ( target === copy ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\t\n\t\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\t\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the modified object\n\t\treturn target;\n\t};\n\t\n\tjQuery.extend( {\n\t\n\t\t// Unique for each copy of jQuery on the page\n\t\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\t\n\t\t// Assume jQuery is ready without the ready module\n\t\tisReady: true,\n\t\n\t\terror: function( msg ) {\n\t\t\tthrow new Error( msg );\n\t\t},\n\t\n\t\tnoop: function() {},\n\t\n\t\tisFunction: function( obj ) {\n\t\t\treturn jQuery.type( obj ) === \"function\";\n\t\t},\n\t\n\t\tisArray: Array.isArray,\n\t\n\t\tisWindow: function( obj ) {\n\t\t\treturn obj != null && obj === obj.window;\n\t\t},\n\t\n\t\tisNumeric: function( obj ) {\n\t\n\t\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t// subtraction forces infinities to NaN\n\t\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\t\tvar realStringObj = obj && obj.toString();\n\t\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t\t},\n\t\n\t\tisPlainObject: function( obj ) {\n\t\t\tvar key;\n\t\n\t\t\t// Not plain objects:\n\t\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t\t// - DOM nodes\n\t\t\t// - window\n\t\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Not own constructor property must be Object\n\t\t\tif ( obj.constructor &&\n\t\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t\t// if last one is own, then all properties are own\n\t\t\tfor ( key in obj ) {}\n\t\n\t\t\treturn key === undefined || hasOwn.call( obj, key );\n\t\t},\n\t\n\t\tisEmptyObject: function( obj ) {\n\t\t\tvar name;\n\t\t\tfor ( name in obj ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\ttype: function( obj ) {\n\t\t\tif ( obj == null ) {\n\t\t\t\treturn obj + \"\";\n\t\t\t}\n\t\n\t\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\t\ttypeof obj;\n\t\t},\n\t\n\t\t// Evaluates a script in a global context\n\t\tglobalEval: function( code ) {\n\t\t\tvar script,\n\t\t\t\tindirect = eval;\n\t\n\t\t\tcode = jQuery.trim( code );\n\t\n\t\t\tif ( code ) {\n\t\n\t\t\t\t// If the code includes a valid, prologue position\n\t\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t\t// script tag into the document.\n\t\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\t\tscript.text = code;\n\t\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t\t// and removal by using an indirect global eval\n\t\n\t\t\t\t\tindirect( code );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t// Convert dashed to camelCase; used by the css and data modules\n\t\t// Support: IE9-11+\n\t\t// Microsoft forgot to hump their vendor prefix (#9572)\n\t\tcamelCase: function( string ) {\n\t\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t\t},\n\t\n\t\tnodeName: function( elem, name ) {\n\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t\t},\n\t\n\t\teach: function( obj, callback ) {\n\t\t\tvar length, i = 0;\n\t\n\t\t\tif ( isArrayLike( obj ) ) {\n\t\t\t\tlength = obj.length;\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn obj;\n\t\t},\n\t\n\t\t// Support: Android<4.1\n\t\ttrim: function( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t\t},\n\t\n\t\t// results is for internal usage only\n\t\tmakeArray: function( arr, results ) {\n\t\t\tvar ret = results || [];\n\t\n\t\t\tif ( arr != null ) {\n\t\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tpush.call( ret, arr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn ret;\n\t\t},\n\t\n\t\tinArray: function( elem, arr, i ) {\n\t\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t\t},\n\t\n\t\tmerge: function( first, second ) {\n\t\t\tvar len = +second.length,\n\t\t\t\tj = 0,\n\t\t\t\ti = first.length;\n\t\n\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\n\t\t\tfirst.length = i;\n\t\n\t\t\treturn first;\n\t\t},\n\t\n\t\tgrep: function( elems, callback, invert ) {\n\t\t\tvar callbackInverse,\n\t\t\t\tmatches = [],\n\t\t\t\ti = 0,\n\t\t\t\tlength = elems.length,\n\t\t\t\tcallbackExpect = !invert;\n\t\n\t\t\t// Go through the array, only saving the items\n\t\t\t// that pass the validator function\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn matches;\n\t\t},\n\t\n\t\t// arg is for internal usage only\n\t\tmap: function( elems, callback, arg ) {\n\t\t\tvar length, value,\n\t\t\t\ti = 0,\n\t\t\t\tret = [];\n\t\n\t\t\t// Go through the array, translating each of the items to their new values\n\t\t\tif ( isArrayLike( elems ) ) {\n\t\t\t\tlength = elems.length;\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\t\n\t\t\t\t\tif ( value != null ) {\n\t\t\t\t\t\tret.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Go through every key on the object,\n\t\t\t} else {\n\t\t\t\tfor ( i in elems ) {\n\t\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\t\n\t\t\t\t\tif ( value != null ) {\n\t\t\t\t\t\tret.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Flatten any nested arrays\n\t\t\treturn concat.apply( [], ret );\n\t\t},\n\t\n\t\t// A global GUID counter for objects\n\t\tguid: 1,\n\t\n\t\t// Bind a function to a context, optionally partially applying any\n\t\t// arguments.\n\t\tproxy: function( fn, context ) {\n\t\t\tvar tmp, args, proxy;\n\t\n\t\t\tif ( typeof context === \"string\" ) {\n\t\t\t\ttmp = fn[ context ];\n\t\t\t\tcontext = fn;\n\t\t\t\tfn = tmp;\n\t\t\t}\n\t\n\t\t\t// Quick check to determine if target is callable, in the spec\n\t\t\t// this throws a TypeError, but we will just return undefined.\n\t\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\n\t\t\t// Simulated bind\n\t\t\targs = slice.call( arguments, 2 );\n\t\t\tproxy = function() {\n\t\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t\t};\n\t\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\t\n\t\t\treturn proxy;\n\t\t},\n\t\n\t\tnow: Date.now,\n\t\n\t\t// jQuery.support is not used in Core but other projects attach their\n\t\t// properties to it so it needs to exist.\n\t\tsupport: support\n\t} );\n\t\n\t// JSHint would error on this code due to the Symbol not being defined in ES5.\n\t// Defining this global in .jshintrc would create a danger of using the global\n\t// unguarded in another place, it seems safer to just disable JSHint for these\n\t// three lines.\n\t/* jshint ignore: start */\n\tif ( typeof Symbol === \"function\" ) {\n\t\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n\t}\n\t/* jshint ignore: end */\n\t\n\t// Populate the class2type map\n\tjQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\t\n\tfunction isArrayLike( obj ) {\n\t\n\t\t// Support: iOS 8.2 (not reproducible in simulator)\n\t\t// `in` check used to prevent JIT error (gh-2145)\n\t\t// hasOwn isn't used here due to false negatives\n\t\t// regarding Nodelist length in IE\n\t\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\t\ttype = jQuery.type( obj );\n\t\n\t\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn type === \"array\" || length === 0 ||\n\t\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n\t}\n\tvar Sizzle =\n\t/*!\n\t * Sizzle CSS Selector Engine v2.2.1\n\t * http://sizzlejs.com/\n\t *\n\t * Copyright jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * http://jquery.org/license\n\t *\n\t * Date: 2015-10-17\n\t */\n\t(function( window ) {\n\t\n\tvar i,\n\t\tsupport,\n\t\tExpr,\n\t\tgetText,\n\t\tisXML,\n\t\ttokenize,\n\t\tcompile,\n\t\tselect,\n\t\toutermostContext,\n\t\tsortInput,\n\t\thasDuplicate,\n\t\n\t\t// Local document vars\n\t\tsetDocument,\n\t\tdocument,\n\t\tdocElem,\n\t\tdocumentIsHTML,\n\t\trbuggyQSA,\n\t\trbuggyMatches,\n\t\tmatches,\n\t\tcontains,\n\t\n\t\t// Instance-specific data\n\t\texpando = \"sizzle\" + 1 * new Date(),\n\t\tpreferredDoc = window.document,\n\t\tdirruns = 0,\n\t\tdone = 0,\n\t\tclassCache = createCache(),\n\t\ttokenCache = createCache(),\n\t\tcompilerCache = createCache(),\n\t\tsortOrder = function( a, b ) {\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\t\n\t\t// General-purpose constants\n\t\tMAX_NEGATIVE = 1 << 31,\n\t\n\t\t// Instance methods\n\t\thasOwn = ({}).hasOwnProperty,\n\t\tarr = [],\n\t\tpop = arr.pop,\n\t\tpush_native = arr.push,\n\t\tpush = arr.push,\n\t\tslice = arr.slice,\n\t\t// Use a stripped-down indexOf as it's faster than native\n\t\t// http://jsperf.com/thor-indexof-vs-for/5\n\t\tindexOf = function( list, elem ) {\n\t\t\tvar i = 0,\n\t\t\t\tlen = list.length;\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tif ( list[i] === elem ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\t\n\t\t// Regular expressions\n\t\n\t\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\t\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t\n\t\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\t\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\t\n\t\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\t\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t\t// Operator (capture 2)\n\t\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\t\"*\\\\]\",\n\t\n\t\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t\t// 2. simple (capture 6)\n\t\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t\t// 3. anything else (capture 2)\n\t\t\t\".*\" +\n\t\t\t\")\\\\)|)\",\n\t\n\t\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\t\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\t\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\t\n\t\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\t\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\t\n\t\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\t\n\t\trpseudo = new RegExp( pseudos ),\n\t\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\t\n\t\tmatchExpr = {\n\t\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t\t// For use in libraries implementing .is()\n\t\t\t// We use this for POS matching in `select`\n\t\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t\t},\n\t\n\t\trinputs = /^(?:input|select|textarea|button)$/i,\n\t\trheader = /^h\\d$/i,\n\t\n\t\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\t\n\t\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\t\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\t\n\t\trsibling = /[+~]/,\n\t\trescape = /'|\\\\/g,\n\t\n\t\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\t\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\t\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t\t// NaN means non-codepoint\n\t\t\t// Support: Firefox<24\n\t\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\t\treturn high !== high || escapedWhitespace ?\n\t\t\t\tescaped :\n\t\t\t\thigh < 0 ?\n\t\t\t\t\t// BMP codepoint\n\t\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t\t},\n\t\n\t\t// Used for iframes\n\t\t// See setDocument()\n\t\t// Removing the function wrapper causes a \"Permission Denied\"\n\t\t// error in IE\n\t\tunloadHandler = function() {\n\t\t\tsetDocument();\n\t\t};\n\t\n\t// Optimize for push.apply( _, NodeList )\n\ttry {\n\t\tpush.apply(\n\t\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\t\tpreferredDoc.childNodes\n\t\t);\n\t\t// Support: Android<4.0\n\t\t// Detect silently failing push.apply\n\t\tarr[ preferredDoc.childNodes.length ].nodeType;\n\t} catch ( e ) {\n\t\tpush = { apply: arr.length ?\n\t\n\t\t\t// Leverage slice if possible\n\t\t\tfunction( target, els ) {\n\t\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t\t} :\n\t\n\t\t\t// Support: IE<9\n\t\t\t// Otherwise append directly\n\t\t\tfunction( target, els ) {\n\t\t\t\tvar j = target.length,\n\t\t\t\t\ti = 0;\n\t\t\t\t// Can't trust NodeList.length\n\t\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\t\ttarget.length = j - 1;\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction Sizzle( selector, context, results, seed ) {\n\t\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\t\tnewContext = context && context.ownerDocument,\n\t\n\t\t\t// nodeType defaults to 9, since context defaults to document\n\t\t\tnodeType = context ? context.nodeType : 9;\n\t\n\t\tresults = results || [];\n\t\n\t\t// Return early from calls with invalid selector or context\n\t\tif ( typeof selector !== \"string\" || !selector ||\n\t\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\t\n\t\t\treturn results;\n\t\t}\n\t\n\t\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\t\tif ( !seed ) {\n\t\n\t\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\t\tsetDocument( context );\n\t\t\t}\n\t\t\tcontext = context || document;\n\t\n\t\t\tif ( documentIsHTML ) {\n\t\n\t\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\n\t\t\t\t\t// ID selector\n\t\t\t\t\tif ( (m = match[1]) ) {\n\t\n\t\t\t\t\t\t// Document context\n\t\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\t\n\t\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Element context\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\t\telem.id === m ) {\n\t\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type selector\n\t\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\t\treturn results;\n\t\n\t\t\t\t\t// Class selector\n\t\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\t\tcontext.getElementsByClassName ) {\n\t\n\t\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Take advantage of querySelectorAll\n\t\t\t\tif ( support.qsa &&\n\t\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\n\t\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\t\tnewContext = context;\n\t\t\t\t\t\tnewSelector = selector;\n\t\n\t\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t\t// Support: IE <=8\n\t\t\t\t\t// Exclude object elements\n\t\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\t\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\t\ti = groups.length;\n\t\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\n\t\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\t\tcontext;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( newSelector ) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// All others\n\t\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n\t}\n\t\n\t/**\n\t * Create key-value caches of limited size\n\t * @returns {function(string, object)} Returns the Object data after storing it on itself with\n\t *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\t *\tdeleting the oldest entry\n\t */\n\tfunction createCache() {\n\t\tvar keys = [];\n\t\n\t\tfunction cache( key, value ) {\n\t\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t\t// Only keep the most recent entries\n\t\t\t\tdelete cache[ keys.shift() ];\n\t\t\t}\n\t\t\treturn (cache[ key + \" \" ] = value);\n\t\t}\n\t\treturn cache;\n\t}\n\t\n\t/**\n\t * Mark a function for special use by Sizzle\n\t * @param {Function} fn The function to mark\n\t */\n\tfunction markFunction( fn ) {\n\t\tfn[ expando ] = true;\n\t\treturn fn;\n\t}\n\t\n\t/**\n\t * Support testing using an element\n\t * @param {Function} fn Passed the created div and expects a boolean result\n\t */\n\tfunction assert( fn ) {\n\t\tvar div = document.createElement(\"div\");\n\t\n\t\ttry {\n\t\t\treturn !!fn( div );\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t} finally {\n\t\t\t// Remove from its parent by default\n\t\t\tif ( div.parentNode ) {\n\t\t\t\tdiv.parentNode.removeChild( div );\n\t\t\t}\n\t\t\t// release memory in IE\n\t\t\tdiv = null;\n\t\t}\n\t}\n\t\n\t/**\n\t * Adds the same handler for all of the specified attrs\n\t * @param {String} attrs Pipe-separated list of attributes\n\t * @param {Function} handler The method that will be applied\n\t */\n\tfunction addHandle( attrs, handler ) {\n\t\tvar arr = attrs.split(\"|\"),\n\t\t\ti = arr.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t\t}\n\t}\n\t\n\t/**\n\t * Checks document order of two siblings\n\t * @param {Element} a\n\t * @param {Element} b\n\t * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n\t */\n\tfunction siblingCheck( a, b ) {\n\t\tvar cur = b && a,\n\t\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\t\n\t\t// Use IE sourceIndex if available on both nodes\n\t\tif ( diff ) {\n\t\t\treturn diff;\n\t\t}\n\t\n\t\t// Check if b follows a\n\t\tif ( cur ) {\n\t\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\t\tif ( cur === b ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a ? 1 : -1;\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for input types\n\t * @param {String} type\n\t */\n\tfunction createInputPseudo( type ) {\n\t\treturn function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === type;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for buttons\n\t * @param {String} type\n\t */\n\tfunction createButtonPseudo( type ) {\n\t\treturn function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for positionals\n\t * @param {Function} fn\n\t */\n\tfunction createPositionalPseudo( fn ) {\n\t\treturn markFunction(function( argument ) {\n\t\t\targument = +argument;\n\t\t\treturn markFunction(function( seed, matches ) {\n\t\t\t\tvar j,\n\t\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\t\ti = matchIndexes.length;\n\t\n\t\t\t\t// Match elements found at the specified indexes\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * Checks a node for validity as a Sizzle context\n\t * @param {Element|Object=} context\n\t * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n\t */\n\tfunction testContext( context ) {\n\t\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n\t}\n\t\n\t// Expose support vars for convenience\n\tsupport = Sizzle.support = {};\n\t\n\t/**\n\t * Detects XML nodes\n\t * @param {Element|Object} elem An element or a document\n\t * @returns {Boolean} True iff elem is a non-HTML XML node\n\t */\n\tisXML = Sizzle.isXML = function( elem ) {\n\t\t// documentElement is verified for cases where it doesn't yet exist\n\t\t// (such as loading iframes in IE - #4833)\n\t\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\t\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n\t};\n\t\n\t/**\n\t * Sets document-related variables once based on the current document\n\t * @param {Element|Object} [doc] An element or document object to use to set the document\n\t * @returns {Object} Returns the current document\n\t */\n\tsetDocument = Sizzle.setDocument = function( node ) {\n\t\tvar hasCompare, parent,\n\t\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\t\n\t\t// Return early if doc is invalid or already selected\n\t\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\t\treturn document;\n\t\t}\n\t\n\t\t// Update global variables\n\t\tdocument = doc;\n\t\tdocElem = document.documentElement;\n\t\tdocumentIsHTML = !isXML( document );\n\t\n\t\t// Support: IE 9-11, Edge\n\t\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t\t// Support: IE 11\n\t\t\tif ( parent.addEventListener ) {\n\t\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\t\n\t\t\t// Support: IE 9 - 10 only\n\t\t\t} else if ( parent.attachEvent ) {\n\t\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Attributes\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Support: IE<8\n\t\t// Verify that getAttribute really returns attributes and not properties\n\t\t// (excepting IE8 booleans)\n\t\tsupport.attributes = assert(function( div ) {\n\t\t\tdiv.className = \"i\";\n\t\t\treturn !div.getAttribute(\"className\");\n\t\t});\n\t\n\t\t/* getElement(s)By*\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Check if getElementsByTagName(\"*\") returns only elements\n\t\tsupport.getElementsByTagName = assert(function( div ) {\n\t\t\tdiv.appendChild( document.createComment(\"\") );\n\t\t\treturn !div.getElementsByTagName(\"*\").length;\n\t\t});\n\t\n\t\t// Support: IE<9\n\t\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\t\n\t\t// Support: IE<10\n\t\t// Check if getElementById returns elements by name\n\t\t// The broken getElementById methods don't pick up programatically-set names,\n\t\t// so use a roundabout getElementsByName test\n\t\tsupport.getById = assert(function( div ) {\n\t\t\tdocElem.appendChild( div ).id = expando;\n\t\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t\t});\n\t\n\t\t// ID find and filter\n\t\tif ( support.getById ) {\n\t\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t\treturn m ? [ m ] : [];\n\t\t\t\t}\n\t\t\t};\n\t\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t\t};\n\t\t\t};\n\t\t} else {\n\t\t\t// Support: IE6/7\n\t\t\t// getElementById is not reliable as a find shortcut\n\t\t\tdelete Expr.find[\"ID\"];\n\t\n\t\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\t\treturn node && node.value === attrId;\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\n\t\t// Tag\n\t\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\t\tfunction( tag, context ) {\n\t\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\t\treturn context.getElementsByTagName( tag );\n\t\n\t\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t\t} else if ( support.qsa ) {\n\t\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t\t}\n\t\t\t} :\n\t\n\t\t\tfunction( tag, context ) {\n\t\t\t\tvar elem,\n\t\t\t\t\ttmp = [],\n\t\t\t\t\ti = 0,\n\t\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\t\tresults = context.getElementsByTagName( tag );\n\t\n\t\t\t\t// Filter out possible comments\n\t\t\t\tif ( tag === \"*\" ) {\n\t\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn tmp;\n\t\t\t\t}\n\t\t\t\treturn results;\n\t\t\t};\n\t\n\t\t// Class\n\t\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\t\treturn context.getElementsByClassName( className );\n\t\t\t}\n\t\t};\n\t\n\t\t/* QSA/matchesSelector\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// QSA and matchesSelector support\n\t\n\t\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\t\trbuggyMatches = [];\n\t\n\t\t// qSa(:focus) reports false when true (Chrome 21)\n\t\t// We allow this because of a bug in IE8/9 that throws an error\n\t\t// whenever `document.activeElement` is accessed on an iframe\n\t\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t\t// See http://bugs.jquery.com/ticket/13378\n\t\trbuggyQSA = [];\n\t\n\t\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t\t// Build QSA regex\n\t\t\t// Regex strategy adopted from Diego Perini\n\t\t\tassert(function( div ) {\n\t\t\t\t// Select is set to empty string on purpose\n\t\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t\t// setting a boolean content attribute,\n\t\t\t\t// since its presence should be enough\n\t\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\t\"<option selected=''></option></select>\";\n\t\n\t\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: IE8\n\t\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t\t}\n\t\n\t\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t\t// IE8 throws error here and will not see later tests\n\t\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t\t}\n\t\n\t\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tassert(function( div ) {\n\t\t\t\t// Support: Windows 8 Native Apps\n\t\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\t\tvar input = document.createElement(\"input\");\n\t\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\t\n\t\t\t\t// Support: IE8\n\t\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t\t}\n\t\n\t\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t\t// IE8 throws error here and will not see later tests\n\t\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\t\trbuggyQSA.push(\",.*:\");\n\t\t\t});\n\t\t}\n\t\n\t\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\t\tdocElem.webkitMatchesSelector ||\n\t\t\tdocElem.mozMatchesSelector ||\n\t\t\tdocElem.oMatchesSelector ||\n\t\t\tdocElem.msMatchesSelector) )) ) {\n\t\n\t\t\tassert(function( div ) {\n\t\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t\t// on a disconnected node (IE 9)\n\t\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\t\n\t\t\t\t// This should fail with an exception\n\t\t\t\t// Gecko does not error, returns false instead\n\t\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t\t});\n\t\t}\n\t\n\t\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\t\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\t\n\t\t/* Contains\n\t\t---------------------------------------------------------------------- */\n\t\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\t\n\t\t// Element contains another\n\t\t// Purposefully self-exclusive\n\t\t// As in, an element does not contain itself\n\t\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\t\tfunction( a, b ) {\n\t\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\t\tbup = b && b.parentNode;\n\t\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\t\tadown.contains ?\n\t\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t\t));\n\t\t\t} :\n\t\t\tfunction( a, b ) {\n\t\t\t\tif ( b ) {\n\t\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\n\t\t/* Sorting\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Document order sorting\n\t\tsortOrder = hasCompare ?\n\t\tfunction( a, b ) {\n\t\n\t\t\t// Flag for duplicate removal\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\t\tif ( compare ) {\n\t\t\t\treturn compare;\n\t\t\t}\n\t\n\t\t\t// Calculate position if both inputs belong to the same document\n\t\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\t\ta.compareDocumentPosition( b ) :\n\t\n\t\t\t\t// Otherwise we know they are disconnected\n\t\t\t\t1;\n\t\n\t\t\t// Disconnected nodes\n\t\t\tif ( compare & 1 ||\n\t\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\t\n\t\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\t// Maintain original order\n\t\t\t\treturn sortInput ?\n\t\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\t\t}\n\t\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\t// Exit early if the nodes are identical\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\tvar cur,\n\t\t\t\ti = 0,\n\t\t\t\taup = a.parentNode,\n\t\t\t\tbup = b.parentNode,\n\t\t\t\tap = [ a ],\n\t\t\t\tbp = [ b ];\n\t\n\t\t\t// Parentless nodes are either documents or disconnected\n\t\t\tif ( !aup || !bup ) {\n\t\t\t\treturn a === document ? -1 :\n\t\t\t\t\tb === document ? 1 :\n\t\t\t\t\taup ? -1 :\n\t\t\t\t\tbup ? 1 :\n\t\t\t\t\tsortInput ?\n\t\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\n\t\t\t// If the nodes are siblings, we can do a quick check\n\t\t\t} else if ( aup === bup ) {\n\t\t\t\treturn siblingCheck( a, b );\n\t\t\t}\n\t\n\t\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\t\tcur = a;\n\t\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\t\tap.unshift( cur );\n\t\t\t}\n\t\t\tcur = b;\n\t\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\t\tbp.unshift( cur );\n\t\t\t}\n\t\n\t\t\t// Walk down the tree looking for a discrepancy\n\t\t\twhile ( ap[i] === bp[i] ) {\n\t\t\t\ti++;\n\t\t\t}\n\t\n\t\t\treturn i ?\n\t\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\t\n\t\t\t\t// Otherwise nodes in our document sort first\n\t\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t\t0;\n\t\t};\n\t\n\t\treturn document;\n\t};\n\t\n\tSizzle.matches = function( expr, elements ) {\n\t\treturn Sizzle( expr, null, null, elements );\n\t};\n\t\n\tSizzle.matchesSelector = function( elem, expr ) {\n\t\t// Set document vars if needed\n\t\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\t\tsetDocument( elem );\n\t\t}\n\t\n\t\t// Make sure that attribute selectors are quoted\n\t\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\t\n\t\tif ( support.matchesSelector && documentIsHTML &&\n\t\t\t!compilerCache[ expr + \" \" ] &&\n\t\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\t\n\t\t\ttry {\n\t\t\t\tvar ret = matches.call( elem, expr );\n\t\n\t\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t\n\t\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n\t};\n\t\n\tSizzle.contains = function( context, elem ) {\n\t\t// Set document vars if needed\n\t\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\treturn contains( context, elem );\n\t};\n\t\n\tSizzle.attr = function( elem, name ) {\n\t\t// Set document vars if needed\n\t\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\t\tsetDocument( elem );\n\t\t}\n\t\n\t\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\t\tundefined;\n\t\n\t\treturn val !== undefined ?\n\t\t\tval :\n\t\t\tsupport.attributes || !documentIsHTML ?\n\t\t\t\telem.getAttribute( name ) :\n\t\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t};\n\t\n\tSizzle.error = function( msg ) {\n\t\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n\t};\n\t\n\t/**\n\t * Document sorting and removing duplicates\n\t * @param {ArrayLike} results\n\t */\n\tSizzle.uniqueSort = function( results ) {\n\t\tvar elem,\n\t\t\tduplicates = [],\n\t\t\tj = 0,\n\t\t\ti = 0;\n\t\n\t\t// Unless we *know* we can detect duplicates, assume their presence\n\t\thasDuplicate = !support.detectDuplicates;\n\t\tsortInput = !support.sortStable && results.slice( 0 );\n\t\tresults.sort( sortOrder );\n\t\n\t\tif ( hasDuplicate ) {\n\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\t\tj = duplicates.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ( j-- ) {\n\t\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t\t}\n\t\t}\n\t\n\t\t// Clear input after sorting to release objects\n\t\t// See https://github.com/jquery/sizzle/pull/225\n\t\tsortInput = null;\n\t\n\t\treturn results;\n\t};\n\t\n\t/**\n\t * Utility function for retrieving the text value of an array of DOM nodes\n\t * @param {Array|Element} elem\n\t */\n\tgetText = Sizzle.getText = function( elem ) {\n\t\tvar node,\n\t\t\tret = \"\",\n\t\t\ti = 0,\n\t\t\tnodeType = elem.nodeType;\n\t\n\t\tif ( !nodeType ) {\n\t\t\t// If no nodeType, this is expected to be an array\n\t\t\twhile ( (node = elem[i++]) ) {\n\t\t\t\t// Do not traverse comment nodes\n\t\t\t\tret += getText( node );\n\t\t\t}\n\t\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t\t// Use textContent for elements\n\t\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\t\treturn elem.textContent;\n\t\t\t} else {\n\t\t\t\t// Traverse its children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tret += getText( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\t\treturn elem.nodeValue;\n\t\t}\n\t\t// Do not include comment or processing instruction nodes\n\t\n\t\treturn ret;\n\t};\n\t\n\tExpr = Sizzle.selectors = {\n\t\n\t\t// Can be adjusted by the user\n\t\tcacheLength: 50,\n\t\n\t\tcreatePseudo: markFunction,\n\t\n\t\tmatch: matchExpr,\n\t\n\t\tattrHandle: {},\n\t\n\t\tfind: {},\n\t\n\t\trelative: {\n\t\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\t\" \": { dir: \"parentNode\" },\n\t\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\t\"~\": { dir: \"previousSibling\" }\n\t\t},\n\t\n\t\tpreFilter: {\n\t\t\t\"ATTR\": function( match ) {\n\t\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\t\n\t\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\t\n\t\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t\t}\n\t\n\t\t\t\treturn match.slice( 0, 4 );\n\t\t\t},\n\t\n\t\t\t\"CHILD\": function( match ) {\n\t\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t\t1 type (only|nth|...)\n\t\t\t\t\t2 what (child|of-type)\n\t\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t\t5 sign of xn-component\n\t\t\t\t\t6 x of xn-component\n\t\t\t\t\t7 sign of y-component\n\t\t\t\t\t8 y of y-component\n\t\t\t\t*/\n\t\t\t\tmatch[1] = match[1].toLowerCase();\n\t\n\t\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t\t// nth-* requires argument\n\t\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\t\n\t\t\t\t// other types prohibit arguments\n\t\t\t\t} else if ( match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\t\n\t\t\t\treturn match;\n\t\t\t},\n\t\n\t\t\t\"PSEUDO\": function( match ) {\n\t\t\t\tvar excess,\n\t\t\t\t\tunquoted = !match[6] && match[2];\n\t\n\t\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\t// Accept quoted arguments as-is\n\t\t\t\tif ( match[3] ) {\n\t\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\t\n\t\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\t\n\t\t\t\t\t// excess is a negative index\n\t\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t\t}\n\t\n\t\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\t\treturn match.slice( 0, 3 );\n\t\t\t}\n\t\t},\n\t\n\t\tfilter: {\n\t\n\t\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\t\tfunction() { return true; } :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"CLASS\": function( className ) {\n\t\t\t\tvar pattern = classCache[ className + \" \" ];\n\t\n\t\t\t\treturn pattern ||\n\t\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t\t});\n\t\t\t},\n\t\n\t\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar result = Sizzle.attr( elem, name );\n\t\n\t\t\t\t\tif ( result == null ) {\n\t\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t\t}\n\t\t\t\t\tif ( !operator ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult += \"\";\n\t\n\t\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\t\tfalse;\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\t\tofType = what === \"of-type\";\n\t\n\t\t\t\treturn first === 1 && last === 0 ?\n\t\n\t\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t\t} :\n\t\n\t\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\t\tdiff = false;\n\t\n\t\t\t\t\t\tif ( parent ) {\n\t\n\t\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\t\n\t\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\t\tif ( forward && useCache ) {\n\t\n\t\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\t\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\n\t\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\t\n\t\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\t\n\t\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t\t++diff ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t\t// pseudo-class names are case-insensitive\n\t\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\t\tvar args,\n\t\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\t\n\t\t\t\t// The user may use createPseudo to indicate that\n\t\t\t\t// arguments are needed to create the filter function\n\t\t\t\t// just as Sizzle does\n\t\t\t\tif ( fn[ expando ] ) {\n\t\t\t\t\treturn fn( argument );\n\t\t\t\t}\n\t\n\t\t\t\t// But maintain support for old signatures\n\t\t\t\tif ( fn.length > 1 ) {\n\t\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) :\n\t\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\treturn fn;\n\t\t\t}\n\t\t},\n\t\n\t\tpseudos: {\n\t\t\t// Potentially complex pseudos\n\t\t\t\"not\": markFunction(function( selector ) {\n\t\t\t\t// Trim the selector passed to compile\n\t\t\t\t// to avoid treating leading and trailing\n\t\t\t\t// spaces as combinators\n\t\t\t\tvar input = [],\n\t\t\t\t\tresults = [],\n\t\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\t\n\t\t\t\treturn matcher[ expando ] ?\n\t\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\t\tvar elem,\n\t\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\t\ti = seed.length;\n\t\n\t\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\t\tinput[0] = null;\n\t\t\t\t\t\treturn !results.pop();\n\t\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t\"has\": markFunction(function( selector ) {\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t\"contains\": markFunction(function( text ) {\n\t\t\t\ttext = text.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t// \"Whether an element is represented by a :lang() selector\n\t\t\t// is based solely on the element's language value\n\t\t\t// being equal to the identifier C,\n\t\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t\t// The identifier C does not have to be a valid language name.\"\n\t\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t\t// lang value must be a valid identifier\n\t\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t\t}\n\t\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar elemLang;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\t\n\t\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t// Miscellaneous\n\t\t\t\"target\": function( elem ) {\n\t\t\t\tvar hash = window.location && window.location.hash;\n\t\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t\t},\n\t\n\t\t\t\"root\": function( elem ) {\n\t\t\t\treturn elem === docElem;\n\t\t\t},\n\t\n\t\t\t\"focus\": function( elem ) {\n\t\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t\t},\n\t\n\t\t\t// Boolean properties\n\t\t\t\"enabled\": function( elem ) {\n\t\t\t\treturn elem.disabled === false;\n\t\t\t},\n\t\n\t\t\t\"disabled\": function( elem ) {\n\t\t\t\treturn elem.disabled === true;\n\t\t\t},\n\t\n\t\t\t\"checked\": function( elem ) {\n\t\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t\t},\n\t\n\t\t\t\"selected\": function( elem ) {\n\t\t\t\t// Accessing this property makes selected-by-default\n\t\t\t\t// options in Safari work properly\n\t\t\t\tif ( elem.parentNode ) {\n\t\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t\t}\n\t\n\t\t\t\treturn elem.selected === true;\n\t\t\t},\n\t\n\t\t\t// Contents\n\t\t\t\"empty\": function( elem ) {\n\t\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\n\t\t\t\"parent\": function( elem ) {\n\t\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t\t},\n\t\n\t\t\t// Element/input types\n\t\t\t\"header\": function( elem ) {\n\t\t\t\treturn rheader.test( elem.nodeName );\n\t\t\t},\n\t\n\t\t\t\"input\": function( elem ) {\n\t\t\t\treturn rinputs.test( elem.nodeName );\n\t\t\t},\n\t\n\t\t\t\"button\": function( elem ) {\n\t\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t\t},\n\t\n\t\t\t\"text\": function( elem ) {\n\t\t\t\tvar attr;\n\t\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\t\telem.type === \"text\" &&\n\t\n\t\t\t\t\t// Support: IE<8\n\t\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t\t},\n\t\n\t\t\t// Position-in-collection\n\t\t\t\"first\": createPositionalPseudo(function() {\n\t\t\t\treturn [ 0 ];\n\t\t\t}),\n\t\n\t\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\treturn [ length - 1 ];\n\t\t\t}),\n\t\n\t\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t\t}),\n\t\n\t\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\tvar i = 1;\n\t\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t})\n\t\t}\n\t};\n\t\n\tExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\t\n\t// Add button/input type pseudos\n\tfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\t\tExpr.pseudos[ i ] = createInputPseudo( i );\n\t}\n\tfor ( i in { submit: true, reset: true } ) {\n\t\tExpr.pseudos[ i ] = createButtonPseudo( i );\n\t}\n\t\n\t// Easy API for creating new setFilters\n\tfunction setFilters() {}\n\tsetFilters.prototype = Expr.filters = Expr.pseudos;\n\tExpr.setFilters = new setFilters();\n\t\n\ttokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\t\tvar matched, match, tokens, type,\n\t\t\tsoFar, groups, preFilters,\n\t\t\tcached = tokenCache[ selector + \" \" ];\n\t\n\t\tif ( cached ) {\n\t\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t\t}\n\t\n\t\tsoFar = selector;\n\t\tgroups = [];\n\t\tpreFilters = Expr.preFilter;\n\t\n\t\twhile ( soFar ) {\n\t\n\t\t\t// Comma and first run\n\t\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t\t}\n\t\t\t\tgroups.push( (tokens = []) );\n\t\t\t}\n\t\n\t\t\tmatched = false;\n\t\n\t\t\t// Combinators\n\t\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\t// Cast descendant combinators to space\n\t\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\n\t\t\t// Filters\n\t\t\tfor ( type in Expr.filter ) {\n\t\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\t\tmatched = match.shift();\n\t\t\t\t\ttokens.push({\n\t\t\t\t\t\tvalue: matched,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tmatches: match\n\t\t\t\t\t});\n\t\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( !matched ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the length of the invalid excess\n\t\t// if we're just parsing\n\t\t// Otherwise, throw an error or return tokens\n\t\treturn parseOnly ?\n\t\t\tsoFar.length :\n\t\t\tsoFar ?\n\t\t\t\tSizzle.error( selector ) :\n\t\t\t\t// Cache the tokens\n\t\t\t\ttokenCache( selector, groups ).slice( 0 );\n\t};\n\t\n\tfunction toSelector( tokens ) {\n\t\tvar i = 0,\n\t\t\tlen = tokens.length,\n\t\t\tselector = \"\";\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tselector += tokens[i].value;\n\t\t}\n\t\treturn selector;\n\t}\n\t\n\tfunction addCombinator( matcher, combinator, base ) {\n\t\tvar dir = combinator.dir,\n\t\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\t\tdoneName = done++;\n\t\n\t\treturn combinator.first ?\n\t\t\t// Check against closest ancestor/preceding element\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} :\n\t\n\t\t\t// Check against all ancestor/preceding elements\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\t\tnewCache = [ dirruns, doneName ];\n\t\n\t\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\t\tif ( xml ) {\n\t\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\t\n\t\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\t\n\t\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t}\n\t\n\tfunction elementMatcher( matchers ) {\n\t\treturn matchers.length > 1 ?\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\tvar i = matchers.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} :\n\t\t\tmatchers[0];\n\t}\n\t\n\tfunction multipleContexts( selector, contexts, results ) {\n\t\tvar i = 0,\n\t\t\tlen = contexts.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tSizzle( selector, contexts[i], results );\n\t\t}\n\t\treturn results;\n\t}\n\t\n\tfunction condense( unmatched, map, filter, context, xml ) {\n\t\tvar elem,\n\t\t\tnewUnmatched = [],\n\t\t\ti = 0,\n\t\t\tlen = unmatched.length,\n\t\t\tmapped = map != null;\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\t\tif ( mapped ) {\n\t\t\t\t\t\tmap.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn newUnmatched;\n\t}\n\t\n\tfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\t\tif ( postFilter && !postFilter[ expando ] ) {\n\t\t\tpostFilter = setMatcher( postFilter );\n\t\t}\n\t\tif ( postFinder && !postFinder[ expando ] ) {\n\t\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t\t}\n\t\treturn markFunction(function( seed, results, context, xml ) {\n\t\t\tvar temp, i, elem,\n\t\t\t\tpreMap = [],\n\t\t\t\tpostMap = [],\n\t\t\t\tpreexisting = results.length,\n\t\n\t\t\t\t// Get initial elements from seed or context\n\t\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\t\n\t\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\t\telems,\n\t\n\t\t\t\tmatcherOut = matcher ?\n\t\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\t\n\t\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t\t[] :\n\t\n\t\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\t\tresults :\n\t\t\t\t\tmatcherIn;\n\t\n\t\t\t// Find primary matches\n\t\t\tif ( matcher ) {\n\t\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t\t}\n\t\n\t\t\t// Apply postFilter\n\t\t\tif ( postFilter ) {\n\t\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\t\tpostFilter( temp, [], context, xml );\n\t\n\t\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\t\ti = temp.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( seed ) {\n\t\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\t\ttemp = [];\n\t\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\t\n\t\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Add elements to results, through postFinder if defined\n\t\t\t} else {\n\t\t\t\tmatcherOut = condense(\n\t\t\t\t\tmatcherOut === results ?\n\t\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\t\tmatcherOut\n\t\t\t\t);\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t\t} else {\n\t\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction matcherFromTokens( tokens ) {\n\t\tvar checkContext, matcher, j,\n\t\t\tlen = tokens.length,\n\t\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\t\ti = leadingRelative ? 1 : 0,\n\t\n\t\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\t\treturn elem === checkContext;\n\t\t\t}, implicitRelative, true ),\n\t\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t\t}, implicitRelative, true ),\n\t\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\t\tcheckContext = null;\n\t\t\t\treturn ret;\n\t\t\t} ];\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t\t} else {\n\t\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\t\n\t\t\t\t// Return special upon seeing a positional matcher\n\t\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\t\tj = ++i;\n\t\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn setMatcher(\n\t\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tmatchers.push( matcher );\n\t\t\t}\n\t\t}\n\t\n\t\treturn elementMatcher( matchers );\n\t}\n\t\n\tfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t\tvar bySet = setMatchers.length > 0,\n\t\t\tbyElement = elementMatchers.length > 0,\n\t\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\t\tvar elem, j, matcher,\n\t\t\t\t\tmatchedCount = 0,\n\t\t\t\t\ti = \"0\",\n\t\t\t\t\tunmatched = seed && [],\n\t\t\t\t\tsetMatched = [],\n\t\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\t\tlen = elems.length;\n\t\n\t\t\t\tif ( outermost ) {\n\t\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t\t}\n\t\n\t\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t\t// Support: IE<9, Safari\n\t\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\t\tif ( bySet ) {\n\t\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t\t// makes the latter nonnegative.\n\t\t\t\tmatchedCount += i;\n\t\n\t\t\t\t// Apply set filters to unmatched elements\n\t\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t\t// no element matchers and no seed.\n\t\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t\t// numerically zero.\n\t\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Add matches to results\n\t\t\t\t\tpush.apply( results, setMatched );\n\t\n\t\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\t\n\t\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Override manipulation of globals by nested matchers\n\t\t\t\tif ( outermost ) {\n\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\toutermostContext = contextBackup;\n\t\t\t\t}\n\t\n\t\t\t\treturn unmatched;\n\t\t\t};\n\t\n\t\treturn bySet ?\n\t\t\tmarkFunction( superMatcher ) :\n\t\t\tsuperMatcher;\n\t}\n\t\n\tcompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\t\tvar i,\n\t\t\tsetMatchers = [],\n\t\t\telementMatchers = [],\n\t\t\tcached = compilerCache[ selector + \" \" ];\n\t\n\t\tif ( !cached ) {\n\t\t\t// Generate a function of recursive functions that can be used to check each element\n\t\t\tif ( !match ) {\n\t\t\t\tmatch = tokenize( selector );\n\t\t\t}\n\t\t\ti = match.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\t\tif ( cached[ expando ] ) {\n\t\t\t\t\tsetMatchers.push( cached );\n\t\t\t\t} else {\n\t\t\t\t\telementMatchers.push( cached );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cache the compiled function\n\t\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t\n\t\t\t// Save selector and tokenization\n\t\t\tcached.selector = selector;\n\t\t}\n\t\treturn cached;\n\t};\n\t\n\t/**\n\t * A low-level selection function that works with Sizzle's compiled\n\t *  selector functions\n\t * @param {String|Function} selector A selector or a pre-compiled\n\t *  selector function built with Sizzle.compile\n\t * @param {Element} context\n\t * @param {Array} [results]\n\t * @param {Array} [seed] A set of elements to match against\n\t */\n\tselect = Sizzle.select = function( selector, context, results, seed ) {\n\t\tvar i, tokens, token, type, find,\n\t\t\tcompiled = typeof selector === \"function\" && selector,\n\t\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\t\n\t\tresults = results || [];\n\t\n\t\t// Try to minimize operations if there is only one selector in the list and no seed\n\t\t// (the latter of which guarantees us context)\n\t\tif ( match.length === 1 ) {\n\t\n\t\t\t// Reduce context if the leading compound selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\t\n\t\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\n\t\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t\t} else if ( compiled ) {\n\t\t\t\t\tcontext = context.parentNode;\n\t\t\t\t}\n\t\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\t\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\t\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t\t)) ) {\n\t\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Compile and execute a filtering function if one is not provided\n\t\t// Provide `match` to avoid retokenization if we modified the selector above\n\t\t( compiled || compile( selector, match ) )(\n\t\t\tseed,\n\t\t\tcontext,\n\t\t\t!documentIsHTML,\n\t\t\tresults,\n\t\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t\t);\n\t\treturn results;\n\t};\n\t\n\t// One-time assignments\n\t\n\t// Sort stability\n\tsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\t\n\t// Support: Chrome 14-35+\n\t// Always assume duplicates if they aren't passed to the comparison function\n\tsupport.detectDuplicates = !!hasDuplicate;\n\t\n\t// Initialize against the default document\n\tsetDocument();\n\t\n\t// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n\t// Detached nodes confoundingly follow *each other*\n\tsupport.sortDetached = assert(function( div1 ) {\n\t\t// Should return 1, but returns 4 (following)\n\t\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n\t});\n\t\n\t// Support: IE<8\n\t// Prevent attribute/property \"interpolation\"\n\t// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\tif ( !assert(function( div ) {\n\t\tdiv.innerHTML = \"<a href='#'></a>\";\n\t\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n\t}) ) {\n\t\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Support: IE<9\n\t// Use defaultValue in place of getAttribute(\"value\")\n\tif ( !support.attributes || !assert(function( div ) {\n\t\tdiv.innerHTML = \"<input/>\";\n\t\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\t\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n\t}) ) {\n\t\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\t\treturn elem.defaultValue;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Support: IE<9\n\t// Use getAttributeNode to fetch booleans when getAttribute lies\n\tif ( !assert(function( div ) {\n\t\treturn div.getAttribute(\"disabled\") == null;\n\t}) ) {\n\t\taddHandle( booleans, function( elem, name, isXML ) {\n\t\t\tvar val;\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t});\n\t}\n\t\n\treturn Sizzle;\n\t\n\t})( window );\n\t\n\t\n\t\n\tjQuery.find = Sizzle;\n\tjQuery.expr = Sizzle.selectors;\n\tjQuery.expr[ \":\" ] = jQuery.expr.pseudos;\n\tjQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n\tjQuery.text = Sizzle.getText;\n\tjQuery.isXMLDoc = Sizzle.isXML;\n\tjQuery.contains = Sizzle.contains;\n\t\n\t\n\t\n\tvar dir = function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\t\n\t\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t};\n\t\n\t\n\tvar siblings = function( n, elem ) {\n\t\tvar matched = [];\n\t\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\t\n\t\treturn matched;\n\t};\n\t\n\t\n\tvar rneedsContext = jQuery.expr.match.needsContext;\n\t\n\tvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\t\n\t\n\t\n\tvar risSimple = /^.[^:#\\[\\.,]*$/;\n\t\n\t// Implement the identical functionality for filter and not\n\tfunction winnow( elements, qualifier, not ) {\n\t\tif ( jQuery.isFunction( qualifier ) ) {\n\t\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t\t/* jshint -W018 */\n\t\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t\t} );\n\t\n\t\t}\n\t\n\t\tif ( qualifier.nodeType ) {\n\t\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\t\treturn ( elem === qualifier ) !== not;\n\t\t\t} );\n\t\n\t\t}\n\t\n\t\tif ( typeof qualifier === \"string\" ) {\n\t\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t\t}\n\t\n\t\t\tqualifier = jQuery.filter( qualifier, elements );\n\t\t}\n\t\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\t\n\tjQuery.filter = function( expr, elems, not ) {\n\t\tvar elem = elems[ 0 ];\n\t\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\t\n\t\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\t\treturn elem.nodeType === 1;\n\t\t\t} ) );\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tfind: function( selector ) {\n\t\t\tvar i,\n\t\t\t\tlen = this.length,\n\t\t\t\tret = [],\n\t\t\t\tself = this;\n\t\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) );\n\t\t\t}\n\t\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t\t}\n\t\n\t\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\t\treturn ret;\n\t\t},\n\t\tfilter: function( selector ) {\n\t\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t\t},\n\t\tnot: function( selector ) {\n\t\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t\t},\n\t\tis: function( selector ) {\n\t\t\treturn !!winnow(\n\t\t\t\tthis,\n\t\n\t\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\t\tjQuery( selector ) :\n\t\t\t\t\tselector || [],\n\t\t\t\tfalse\n\t\t\t).length;\n\t\t}\n\t} );\n\t\n\t\n\t// Initialize a jQuery object\n\t\n\t\n\t// A central reference to the root jQuery(document)\n\tvar rootjQuery,\n\t\n\t\t// A simple way to check for HTML strings\n\t\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t\t// Strict HTML recognition (#11290: must start with <)\n\t\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\t\n\t\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\t\tvar match, elem;\n\t\n\t\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\t\tif ( !selector ) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t// Method init() accepts an alternate rootjQuery\n\t\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\t\troot = root || rootjQuery;\n\t\n\t\t\t// Handle HTML strings\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\t\tselector.length >= 3 ) {\n\t\n\t\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\t\tmatch = [ null, selector, null ];\n\t\n\t\t\t\t} else {\n\t\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t\t}\n\t\n\t\t\t\t// Match html or make sure no context is specified for #id\n\t\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\t\n\t\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\t\n\t\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t) );\n\t\n\t\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\t\tfor ( match in context ) {\n\t\n\t\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\t\n\t\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\t\n\t\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\n\t\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.context = document;\n\t\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\n\t\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\t\treturn ( context || root ).find( selector );\n\t\n\t\t\t\t// HANDLE: $(expr, context)\n\t\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t\t} else {\n\t\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t\t}\n\t\n\t\t\t// HANDLE: $(DOMElement)\n\t\t\t} else if ( selector.nodeType ) {\n\t\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\t\tthis.length = 1;\n\t\t\t\treturn this;\n\t\n\t\t\t// HANDLE: $(function)\n\t\t\t// Shortcut for document ready\n\t\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\t\treturn root.ready !== undefined ?\n\t\t\t\t\troot.ready( selector ) :\n\t\n\t\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\t\tselector( jQuery );\n\t\t\t}\n\t\n\t\t\tif ( selector.selector !== undefined ) {\n\t\t\t\tthis.selector = selector.selector;\n\t\t\t\tthis.context = selector.context;\n\t\t\t}\n\t\n\t\t\treturn jQuery.makeArray( selector, this );\n\t\t};\n\t\n\t// Give the init function the jQuery prototype for later instantiation\n\tinit.prototype = jQuery.fn;\n\t\n\t// Initialize central reference\n\trootjQuery = jQuery( document );\n\t\n\t\n\tvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t\n\t\t// Methods guaranteed to produce a unique set when starting from a unique set\n\t\tguaranteedUnique = {\n\t\t\tchildren: true,\n\t\t\tcontents: true,\n\t\t\tnext: true,\n\t\t\tprev: true\n\t\t};\n\t\n\tjQuery.fn.extend( {\n\t\thas: function( target ) {\n\t\t\tvar targets = jQuery( target, this ),\n\t\t\t\tl = targets.length;\n\t\n\t\t\treturn this.filter( function() {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tclosest: function( selectors, context ) {\n\t\t\tvar cur,\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length,\n\t\t\t\tmatched = [],\n\t\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t\t0;\n\t\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\t\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\t\tpos.index( cur ) > -1 :\n\t\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\t\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t\t},\n\t\n\t\t// Determine the position of an element within the set\n\t\tindex: function( elem ) {\n\t\n\t\t\t// No argument, return index in parent\n\t\t\tif ( !elem ) {\n\t\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t\t}\n\t\n\t\t\t// Index in selector\n\t\t\tif ( typeof elem === \"string\" ) {\n\t\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t\t}\n\t\n\t\t\t// Locate the position of the desired element\n\t\t\treturn indexOf.call( this,\n\t\n\t\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t\t);\n\t\t},\n\t\n\t\tadd: function( selector, context ) {\n\t\t\treturn this.pushStack(\n\t\t\t\tjQuery.uniqueSort(\n\t\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\n\t\taddBack: function( selector ) {\n\t\t\treturn this.add( selector == null ?\n\t\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t\t);\n\t\t}\n\t} );\n\t\n\tfunction sibling( cur, dir ) {\n\t\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\t\treturn cur;\n\t}\n\t\n\tjQuery.each( {\n\t\tparent: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t\t},\n\t\tparents: function( elem ) {\n\t\t\treturn dir( elem, \"parentNode\" );\n\t\t},\n\t\tparentsUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"parentNode\", until );\n\t\t},\n\t\tnext: function( elem ) {\n\t\t\treturn sibling( elem, \"nextSibling\" );\n\t\t},\n\t\tprev: function( elem ) {\n\t\t\treturn sibling( elem, \"previousSibling\" );\n\t\t},\n\t\tnextAll: function( elem ) {\n\t\t\treturn dir( elem, \"nextSibling\" );\n\t\t},\n\t\tprevAll: function( elem ) {\n\t\t\treturn dir( elem, \"previousSibling\" );\n\t\t},\n\t\tnextUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"nextSibling\", until );\n\t\t},\n\t\tprevUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"previousSibling\", until );\n\t\t},\n\t\tsiblings: function( elem ) {\n\t\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t\t},\n\t\tchildren: function( elem ) {\n\t\t\treturn siblings( elem.firstChild );\n\t\t},\n\t\tcontents: function( elem ) {\n\t\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t\t}\n\t}, function( name, fn ) {\n\t\tjQuery.fn[ name ] = function( until, selector ) {\n\t\t\tvar matched = jQuery.map( this, fn, until );\n\t\n\t\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\t\tselector = until;\n\t\t\t}\n\t\n\t\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t\t}\n\t\n\t\t\tif ( this.length > 1 ) {\n\t\n\t\t\t\t// Remove duplicates\n\t\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t\t}\n\t\n\t\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\t\tmatched.reverse();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( matched );\n\t\t};\n\t} );\n\tvar rnotwhite = ( /\\S+/g );\n\t\n\t\n\t\n\t// Convert String-formatted options into Object-formatted ones\n\tfunction createOptions( options ) {\n\t\tvar object = {};\n\t\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\t\tobject[ flag ] = true;\n\t\t} );\n\t\treturn object;\n\t}\n\t\n\t/*\n\t * Create a callback list using the following parameters:\n\t *\n\t *\toptions: an optional list of space-separated options that will change how\n\t *\t\t\tthe callback list behaves or a more traditional option object\n\t *\n\t * By default a callback list will act like an event callback list and can be\n\t * \"fired\" multiple times.\n\t *\n\t * Possible options:\n\t *\n\t *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n\t *\n\t *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n\t *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n\t *\t\t\t\t\tvalues (like a Deferred)\n\t *\n\t *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n\t *\n\t *\tstopOnFalse:\tinterrupt callings when a callback returns false\n\t *\n\t */\n\tjQuery.Callbacks = function( options ) {\n\t\n\t\t// Convert options from String-formatted to Object-formatted if needed\n\t\t// (we check in cache first)\n\t\toptions = typeof options === \"string\" ?\n\t\t\tcreateOptions( options ) :\n\t\t\tjQuery.extend( {}, options );\n\t\n\t\tvar // Flag to know if list is currently firing\n\t\t\tfiring,\n\t\n\t\t\t// Last fire value for non-forgettable lists\n\t\t\tmemory,\n\t\n\t\t\t// Flag to know if list was already fired\n\t\t\tfired,\n\t\n\t\t\t// Flag to prevent firing\n\t\t\tlocked,\n\t\n\t\t\t// Actual callback list\n\t\t\tlist = [],\n\t\n\t\t\t// Queue of execution data for repeatable lists\n\t\t\tqueue = [],\n\t\n\t\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\t\tfiringIndex = -1,\n\t\n\t\t\t// Fire callbacks\n\t\t\tfire = function() {\n\t\n\t\t\t\t// Enforce single-firing\n\t\t\t\tlocked = options.once;\n\t\n\t\t\t\t// Execute callbacks for all pending executions,\n\t\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\t\tfired = firing = true;\n\t\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\t\tmemory = queue.shift();\n\t\t\t\t\twhile ( ++firingIndex < list.length ) {\n\t\n\t\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\t\toptions.stopOnFalse ) {\n\t\n\t\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Forget the data if we're done with it\n\t\t\t\tif ( !options.memory ) {\n\t\t\t\t\tmemory = false;\n\t\t\t\t}\n\t\n\t\t\t\tfiring = false;\n\t\n\t\t\t\t// Clean up if we're done firing for good\n\t\t\t\tif ( locked ) {\n\t\n\t\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\t\tif ( memory ) {\n\t\t\t\t\t\tlist = [];\n\t\n\t\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Actual Callbacks object\n\t\t\tself = {\n\t\n\t\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\t\tadd: function() {\n\t\t\t\t\tif ( list ) {\n\t\n\t\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\t\n\t\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )( arguments );\n\t\n\t\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\t\tfire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Remove a callback from the list\n\t\t\t\tremove: function() {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Check if a given callback is in the list.\n\t\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\t\thas: function( fn ) {\n\t\t\t\t\treturn fn ?\n\t\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\t\tlist.length > 0;\n\t\t\t\t},\n\t\n\t\t\t\t// Remove all callbacks from the list\n\t\t\t\tempty: function() {\n\t\t\t\t\tif ( list ) {\n\t\t\t\t\t\tlist = [];\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Disable .fire and .add\n\t\t\t\t// Abort any current/pending executions\n\t\t\t\t// Clear all callbacks and values\n\t\t\t\tdisable: function() {\n\t\t\t\t\tlocked = queue = [];\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tdisabled: function() {\n\t\t\t\t\treturn !list;\n\t\t\t\t},\n\t\n\t\t\t\t// Disable .fire\n\t\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t\t// Abort any pending executions\n\t\t\t\tlock: function() {\n\t\t\t\t\tlocked = queue = [];\n\t\t\t\t\tif ( !memory ) {\n\t\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tlocked: function() {\n\t\t\t\t\treturn !!locked;\n\t\t\t\t},\n\t\n\t\t\t\t// Call all callbacks with the given context and arguments\n\t\t\t\tfireWith: function( context, args ) {\n\t\t\t\t\tif ( !locked ) {\n\t\t\t\t\t\targs = args || [];\n\t\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\t\tqueue.push( args );\n\t\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\t\tfire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Call all the callbacks with the given arguments\n\t\t\t\tfire: function() {\n\t\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// To know if the callbacks have already been called at least once\n\t\t\t\tfired: function() {\n\t\t\t\t\treturn !!fired;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\treturn self;\n\t};\n\t\n\t\n\tjQuery.extend( {\n\t\n\t\tDeferred: function( func ) {\n\t\t\tvar tuples = [\n\t\n\t\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t\t],\n\t\t\t\tstate = \"pending\",\n\t\t\t\tpromise = {\n\t\t\t\t\tstate: function() {\n\t\t\t\t\t\treturn state;\n\t\t\t\t\t},\n\t\t\t\t\talways: function() {\n\t\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\n\t\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tfns = null;\n\t\t\t\t\t\t} ).promise();\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Get a promise for this deferred\n\t\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdeferred = {};\n\t\n\t\t\t// Keep pipe for back-compat\n\t\t\tpromise.pipe = promise.then;\n\t\n\t\t\t// Add list-specific methods\n\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\tvar list = tuple[ 2 ],\n\t\t\t\t\tstateString = tuple[ 3 ];\n\t\n\t\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\t\n\t\t\t\t// Handle state\n\t\t\t\tif ( stateString ) {\n\t\t\t\t\tlist.add( function() {\n\t\n\t\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\t\tstate = stateString;\n\t\n\t\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t\t}\n\t\n\t\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t\t} );\n\t\n\t\t\t// Make the deferred a promise\n\t\t\tpromise.promise( deferred );\n\t\n\t\t\t// Call given func if any\n\t\t\tif ( func ) {\n\t\t\t\tfunc.call( deferred, deferred );\n\t\t\t}\n\t\n\t\t\t// All done!\n\t\t\treturn deferred;\n\t\t},\n\t\n\t\t// Deferred helper\n\t\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\t\tvar i = 0,\n\t\t\t\tresolveValues = slice.call( arguments ),\n\t\t\t\tlength = resolveValues.length,\n\t\n\t\t\t\t// the count of uncompleted subordinates\n\t\t\t\tremaining = length !== 1 ||\n\t\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\t\n\t\t\t\t// the master Deferred.\n\t\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\t\n\t\t\t\t// Update function for both resolve and progress values\n\t\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\t\treturn function( value ) {\n\t\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\n\t\t\t\tprogressValues, progressContexts, resolveContexts;\n\t\n\t\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\t\tif ( length > 1 ) {\n\t\t\t\tprogressValues = new Array( length );\n\t\t\t\tprogressContexts = new Array( length );\n\t\t\t\tresolveContexts = new Array( length );\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t--remaining;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// If we're not waiting on anything, resolve the master\n\t\t\tif ( !remaining ) {\n\t\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t\t}\n\t\n\t\t\treturn deferred.promise();\n\t\t}\n\t} );\n\t\n\t\n\t// The deferred used on DOM ready\n\tvar readyList;\n\t\n\tjQuery.fn.ready = function( fn ) {\n\t\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done( fn );\n\t\n\t\treturn this;\n\t};\n\t\n\tjQuery.extend( {\n\t\n\t\t// Is the DOM ready to be used? Set to true once it occurs.\n\t\tisReady: false,\n\t\n\t\t// A counter to track how many items to wait for before\n\t\t// the ready event fires. See #6781\n\t\treadyWait: 1,\n\t\n\t\t// Hold (or release) the ready event\n\t\tholdReady: function( hold ) {\n\t\t\tif ( hold ) {\n\t\t\t\tjQuery.readyWait++;\n\t\t\t} else {\n\t\t\t\tjQuery.ready( true );\n\t\t\t}\n\t\t},\n\t\n\t\t// Handle when the DOM is ready\n\t\tready: function( wait ) {\n\t\n\t\t\t// Abort if there are pending holds or we're already ready\n\t\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\n\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If there are functions bound, to execute\n\t\t\treadyList.resolveWith( document, [ jQuery ] );\n\t\n\t\t\t// Trigger any bound ready events\n\t\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\t\tjQuery( document ).off( \"ready\" );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/**\n\t * The ready event handler and self cleanup method\n\t */\n\tfunction completed() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\t\twindow.removeEventListener( \"load\", completed );\n\t\tjQuery.ready();\n\t}\n\t\n\tjQuery.ready.promise = function( obj ) {\n\t\tif ( !readyList ) {\n\t\n\t\t\treadyList = jQuery.Deferred();\n\t\n\t\t\t// Catch cases where $(document).ready() is called\n\t\t\t// after the browser event has already occurred.\n\t\t\t// Support: IE9-10 only\n\t\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\t\tif ( document.readyState === \"complete\" ||\n\t\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\t\n\t\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\t\twindow.setTimeout( jQuery.ready );\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// Use the handy event callback\n\t\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\t\n\t\t\t\t// A fallback to window.onload, that will always work\n\t\t\t\twindow.addEventListener( \"load\", completed );\n\t\t\t}\n\t\t}\n\t\treturn readyList.promise( obj );\n\t};\n\t\n\t// Kick off the DOM ready check even if the user does not\n\tjQuery.ready.promise();\n\t\n\t\n\t\n\t\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\tvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlen = elems.length,\n\t\t\tbulk = key == null;\n\t\n\t\t// Sets many values\n\t\tif ( jQuery.type( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t\t}\n\t\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\t\n\t\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\t\n\t\t\tif ( bulk ) {\n\t\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\t\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tfn(\n\t\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn chainable ?\n\t\t\telems :\n\t\n\t\t\t// Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call( elems ) :\n\t\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n\t};\n\tvar acceptData = function( owner ) {\n\t\n\t\t// Accepts only:\n\t\t//  - Node\n\t\t//    - Node.ELEMENT_NODE\n\t\t//    - Node.DOCUMENT_NODE\n\t\t//  - Object\n\t\t//    - Any\n\t\t/* jshint -W018 */\n\t\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n\t};\n\t\n\t\n\t\n\t\n\tfunction Data() {\n\t\tthis.expando = jQuery.expando + Data.uid++;\n\t}\n\t\n\tData.uid = 1;\n\t\n\tData.prototype = {\n\t\n\t\tregister: function( owner, initial ) {\n\t\t\tvar value = initial || {};\n\t\n\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t// use plain assignment\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = value;\n\t\n\t\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t\t// configurability must be true to allow the property to be\n\t\t\t// deleted with the delete operator\n\t\t\t} else {\n\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tconfigurable: true\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn owner[ this.expando ];\n\t\t},\n\t\tcache: function( owner ) {\n\t\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( !acceptData( owner ) ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\n\t\t\t// Check if the owner object already has a cache\n\t\t\tvar value = owner[ this.expando ];\n\t\n\t\t\t// If not, create one\n\t\t\tif ( !value ) {\n\t\t\t\tvalue = {};\n\t\n\t\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t\t// but we should not, see #8335.\n\t\t\t\t// Always return an empty object.\n\t\t\t\tif ( acceptData( owner ) ) {\n\t\n\t\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t\t// use plain assignment\n\t\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\t\towner[ this.expando ] = value;\n\t\n\t\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t\t// deleted when data is removed\n\t\t\t\t\t} else {\n\t\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn value;\n\t\t},\n\t\tset: function( owner, data, value ) {\n\t\t\tvar prop,\n\t\t\t\tcache = this.cache( owner );\n\t\n\t\t\t// Handle: [ owner, key, value ] args\n\t\t\tif ( typeof data === \"string\" ) {\n\t\t\t\tcache[ data ] = value;\n\t\n\t\t\t// Handle: [ owner, { properties } ] args\n\t\t\t} else {\n\t\n\t\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cache;\n\t\t},\n\t\tget: function( owner, key ) {\n\t\t\treturn key === undefined ?\n\t\t\t\tthis.cache( owner ) :\n\t\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t\t},\n\t\taccess: function( owner, key, value ) {\n\t\t\tvar stored;\n\t\n\t\t\t// In cases where either:\n\t\t\t//\n\t\t\t//   1. No key was specified\n\t\t\t//   2. A string key was specified, but no value provided\n\t\t\t//\n\t\t\t// Take the \"read\" path and allow the get method to determine\n\t\t\t// which value to return, respectively either:\n\t\t\t//\n\t\t\t//   1. The entire cache object\n\t\t\t//   2. The data stored at the key\n\t\t\t//\n\t\t\tif ( key === undefined ||\n\t\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\t\n\t\t\t\tstored = this.get( owner, key );\n\t\n\t\t\t\treturn stored !== undefined ?\n\t\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t\t}\n\t\n\t\t\t// When the key is not a string, or both a key and value\n\t\t\t// are specified, set or extend (existing objects) with either:\n\t\t\t//\n\t\t\t//   1. An object of properties\n\t\t\t//   2. A key and value\n\t\t\t//\n\t\t\tthis.set( owner, key, value );\n\t\n\t\t\t// Since the \"set\" path can have two possible entry points\n\t\t\t// return the expected data based on which path was taken[*]\n\t\t\treturn value !== undefined ? value : key;\n\t\t},\n\t\tremove: function( owner, key ) {\n\t\t\tvar i, name, camel,\n\t\t\t\tcache = owner[ this.expando ];\n\t\n\t\t\tif ( cache === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( key === undefined ) {\n\t\t\t\tthis.register( owner );\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// Support array or space separated string of keys\n\t\t\t\tif ( jQuery.isArray( key ) ) {\n\t\n\t\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t\t} else {\n\t\t\t\t\tcamel = jQuery.camelCase( key );\n\t\n\t\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\t\tif ( key in cache ) {\n\t\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\t\tname = camel;\n\t\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\ti = name.length;\n\t\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Remove the expando if there's no more data\n\t\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\t\n\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tdelete owner[ this.expando ];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thasData: function( owner ) {\n\t\t\tvar cache = owner[ this.expando ];\n\t\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t\t}\n\t};\n\tvar dataPriv = new Data();\n\t\n\tvar dataUser = new Data();\n\t\n\t\n\t\n\t//\tImplementation Summary\n\t//\n\t//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t//\t2. Improve the module's maintainability by reducing the storage\n\t//\t\tpaths to a single mechanism.\n\t//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\t\n\tvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\t\trmultiDash = /[A-Z]/g;\n\t\n\tfunction dataAttr( elem, key, data ) {\n\t\tvar name;\n\t\n\t\t// If nothing was found internally, try to fetch any\n\t\t// data from the HTML5 data-* attribute\n\t\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\t\tdata = elem.getAttribute( name );\n\t\n\t\t\tif ( typeof data === \"string\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\t\tdata === \"null\" ? null :\n\t\n\t\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\t\tdata;\n\t\t\t\t} catch ( e ) {}\n\t\n\t\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\t\tdataUser.set( elem, key, data );\n\t\t\t} else {\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\t\n\tjQuery.extend( {\n\t\thasData: function( elem ) {\n\t\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t\t},\n\t\n\t\tdata: function( elem, name, data ) {\n\t\t\treturn dataUser.access( elem, name, data );\n\t\t},\n\t\n\t\tremoveData: function( elem, name ) {\n\t\t\tdataUser.remove( elem, name );\n\t\t},\n\t\n\t\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t\t// with direct calls to dataPriv methods, these can be deprecated.\n\t\t_data: function( elem, name, data ) {\n\t\t\treturn dataPriv.access( elem, name, data );\n\t\t},\n\t\n\t\t_removeData: function( elem, name ) {\n\t\t\tdataPriv.remove( elem, name );\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tdata: function( key, value ) {\n\t\t\tvar i, name, data,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tattrs = elem && elem.attributes;\n\t\n\t\t\t// Gets all values\n\t\t\tif ( key === undefined ) {\n\t\t\t\tif ( this.length ) {\n\t\t\t\t\tdata = dataUser.get( elem );\n\t\n\t\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\t\ti = attrs.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\n\t\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t}\n\t\n\t\t\t// Sets multiple values\n\t\t\tif ( typeof key === \"object\" ) {\n\t\t\t\treturn this.each( function() {\n\t\t\t\t\tdataUser.set( this, key );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn access( this, function( value ) {\n\t\t\t\tvar data, camelKey;\n\t\n\t\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\t\tif ( elem && value === undefined ) {\n\t\n\t\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t\t// with the key as-is\n\t\t\t\t\tdata = dataUser.get( elem, key ) ||\n\t\n\t\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\t\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcamelKey = jQuery.camelCase( key );\n\t\n\t\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t\t// with the key camelized\n\t\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Set the data...\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\t\tthis.each( function() {\n\t\n\t\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\t\tvar data = dataUser.get( this, camelKey );\n\t\n\t\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t\t// This might not apply to all properties...*\n\t\t\t\t\tdataUser.set( this, camelKey, value );\n\t\n\t\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t\t// unchanged property.\n\t\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}, null, value, arguments.length > 1, null, true );\n\t\t},\n\t\n\t\tremoveData: function( key ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.remove( this, key );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.extend( {\n\t\tqueue: function( elem, type, data ) {\n\t\t\tvar queue;\n\t\n\t\t\tif ( elem ) {\n\t\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\t\tqueue = dataPriv.get( elem, type );\n\t\n\t\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\t\tif ( data ) {\n\t\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tqueue.push( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn queue || [];\n\t\t\t}\n\t\t},\n\t\n\t\tdequeue: function( elem, type ) {\n\t\t\ttype = type || \"fx\";\n\t\n\t\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\t\tstartLength = queue.length,\n\t\t\t\tfn = queue.shift(),\n\t\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\t\tnext = function() {\n\t\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t\t};\n\t\n\t\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\t\tif ( fn === \"inprogress\" ) {\n\t\t\t\tfn = queue.shift();\n\t\t\t\tstartLength--;\n\t\t\t}\n\t\n\t\t\tif ( fn ) {\n\t\n\t\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t\t// automatically dequeued\n\t\t\t\tif ( type === \"fx\" ) {\n\t\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Clear up the last queue stop function\n\t\t\t\tdelete hooks.stop;\n\t\t\t\tfn.call( elem, next, hooks );\n\t\t\t}\n\t\n\t\t\tif ( !startLength && hooks ) {\n\t\t\t\thooks.empty.fire();\n\t\t\t}\n\t\t},\n\t\n\t\t// Not public - generate a queueHooks object, or return the current one\n\t\t_queueHooks: function( elem, type ) {\n\t\t\tvar key = type + \"queueHooks\";\n\t\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t\t} )\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tqueue: function( type, data ) {\n\t\t\tvar setter = 2;\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tdata = type;\n\t\t\t\ttype = \"fx\";\n\t\t\t\tsetter--;\n\t\t\t}\n\t\n\t\t\tif ( arguments.length < setter ) {\n\t\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t\t}\n\t\n\t\t\treturn data === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function() {\n\t\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\t\n\t\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\t\tjQuery._queueHooks( this, type );\n\t\n\t\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t},\n\t\tdequeue: function( type ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t} );\n\t\t},\n\t\tclearQueue: function( type ) {\n\t\t\treturn this.queue( type || \"fx\", [] );\n\t\t},\n\t\n\t\t// Get a promise resolved when queues of a certain type\n\t\t// are emptied (fx is the type by default)\n\t\tpromise: function( type, obj ) {\n\t\t\tvar tmp,\n\t\t\t\tcount = 1,\n\t\t\t\tdefer = jQuery.Deferred(),\n\t\t\t\telements = this,\n\t\t\t\ti = this.length,\n\t\t\t\tresolve = function() {\n\t\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tobj = type;\n\t\t\t\ttype = undefined;\n\t\t\t}\n\t\t\ttype = type || \"fx\";\n\t\n\t\t\twhile ( i-- ) {\n\t\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\t\tcount++;\n\t\t\t\t\ttmp.empty.add( resolve );\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve();\n\t\t\treturn defer.promise( obj );\n\t\t}\n\t} );\n\tvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\t\n\tvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\t\n\t\n\tvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\t\n\tvar isHidden = function( elem, el ) {\n\t\n\t\t\t// isHidden might be called from jQuery#filter function;\n\t\t\t// in that case, element will be second argument\n\t\t\telem = el || elem;\n\t\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t\t};\n\t\n\t\n\t\n\tfunction adjustCSS( elem, prop, valueParts, tween ) {\n\t\tvar adjusted,\n\t\t\tscale = 1,\n\t\t\tmaxIterations = 20,\n\t\t\tcurrentValue = tween ?\n\t\t\t\tfunction() { return tween.cur(); } :\n\t\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\t\tinitial = currentValue(),\n\t\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\t\n\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\t\n\t\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\t\n\t\t\t// Trust units reported by jQuery.css\n\t\t\tunit = unit || initialInUnit[ 3 ];\n\t\n\t\t\t// Make sure we update the tween properties later on\n\t\t\tvalueParts = valueParts || [];\n\t\n\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\tinitialInUnit = +initial || 1;\n\t\n\t\t\tdo {\n\t\n\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\tscale = scale || \".5\";\n\t\n\t\t\t\t// Adjust and apply\n\t\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\n\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t\t} while (\n\t\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t\t);\n\t\t}\n\t\n\t\tif ( valueParts ) {\n\t\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\t\n\t\t\t// Apply relative offset (+=/-=) if specified\n\t\t\tadjusted = valueParts[ 1 ] ?\n\t\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t\t+valueParts[ 2 ];\n\t\t\tif ( tween ) {\n\t\t\t\ttween.unit = unit;\n\t\t\t\ttween.start = initialInUnit;\n\t\t\t\ttween.end = adjusted;\n\t\t\t}\n\t\t}\n\t\treturn adjusted;\n\t}\n\tvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\t\n\tvar rtagName = ( /<([\\w:-]+)/ );\n\t\n\tvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\t\n\t\n\t\n\t// We have to close these tags to support XHTML (#13200)\n\tvar wrapMap = {\n\t\n\t\t// Support: IE9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\t\n\t\t// XHTML parsers do not magically insert elements in the\n\t\t// same way that tag soup parsers do. So we cannot shorten\n\t\t// this by omitting <tbody> or other required elements.\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\t\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\t\n\t// Support: IE9\n\twrapMap.optgroup = wrapMap.option;\n\t\n\twrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\twrapMap.th = wrapMap.td;\n\t\n\t\n\tfunction getAll( context, tag ) {\n\t\n\t\t// Support: IE9-11+\n\t\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\t\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t\t[];\n\t\n\t\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\t\tjQuery.merge( [ context ], ret ) :\n\t\t\tret;\n\t}\n\t\n\t\n\t// Mark scripts as having already been evaluated\n\tfunction setGlobalEval( elems, refElements ) {\n\t\tvar i = 0,\n\t\t\tl = elems.length;\n\t\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tdataPriv.set(\n\t\t\t\telems[ i ],\n\t\t\t\t\"globalEval\",\n\t\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t\t);\n\t\t}\n\t}\n\t\n\t\n\tvar rhtml = /<|&#?\\w+;/;\n\t\n\tfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\t\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\t\n\t\t\tif ( elem || elem === 0 ) {\n\t\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\n\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\t\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\t\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\t\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\t\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\t\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\t\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\t\n\t\ti = 0;\n\t\twhile ( ( elem = nodes[ i++ ] ) ) {\n\t\n\t\t\t// Skip elements already in the context collection (trac-4087)\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\t\tif ( ignored ) {\n\t\t\t\t\tignored.push( elem );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\t\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\t\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\t\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn fragment;\n\t}\n\t\n\t\n\t( function() {\n\t\tvar fragment = document.createDocumentFragment(),\n\t\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\t\tinput = document.createElement( \"input\" );\n\t\n\t\t// Support: Android 4.0-4.3, Safari<=5.1\n\t\t// Check state lost if the name is set (#11217)\n\t\t// Support: Windows Web Apps (WWA)\n\t\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\t\tinput.setAttribute( \"type\", \"radio\" );\n\t\tinput.setAttribute( \"checked\", \"checked\" );\n\t\tinput.setAttribute( \"name\", \"t\" );\n\t\n\t\tdiv.appendChild( input );\n\t\n\t\t// Support: Safari<=5.1, Android<4.2\n\t\t// Older WebKit doesn't clone checked state correctly in fragments\n\t\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\t\n\t\t// Support: IE<=11+\n\t\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\t\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\t} )();\n\t\n\t\n\tvar\n\t\trkeyEvent = /^key/,\n\t\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\t\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\t\n\tfunction returnTrue() {\n\t\treturn true;\n\t}\n\t\n\tfunction returnFalse() {\n\t\treturn false;\n\t}\n\t\n\t// Support: IE9\n\t// See #13393 for more info\n\tfunction safeActiveElement() {\n\t\ttry {\n\t\t\treturn document.activeElement;\n\t\t} catch ( err ) { }\n\t}\n\t\n\tfunction on( elem, types, selector, data, fn, one ) {\n\t\tvar origFn, type;\n\t\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn elem;\n\t\t}\n\t\n\t\tif ( data == null && fn == null ) {\n\t\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn elem;\n\t\t}\n\t\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn elem.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t} );\n\t}\n\t\n\t/*\n\t * Helper functions for managing events -- not part of the public interface.\n\t * Props to Dean Edwards' addEvent library for many of the ideas.\n\t */\n\tjQuery.event = {\n\t\n\t\tglobal: {},\n\t\n\t\tadd: function( elem, types, handler, data, selector ) {\n\t\n\t\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\t\tevents, t, handleObj,\n\t\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\t\telemData = dataPriv.get( elem );\n\t\n\t\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\t\tif ( !elemData ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\t\tif ( handler.handler ) {\n\t\t\t\thandleObjIn = handler;\n\t\t\t\thandler = handleObjIn.handler;\n\t\t\t\tselector = handleObjIn.selector;\n\t\t\t}\n\t\n\t\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\t\tif ( !handler.guid ) {\n\t\t\t\thandler.guid = jQuery.guid++;\n\t\t\t}\n\t\n\t\t\t// Init the element's event structure and main handler, if this is the first\n\t\t\tif ( !( events = elemData.events ) ) {\n\t\t\t\tevents = elemData.events = {};\n\t\t\t}\n\t\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\t\teventHandle = elemData.handle = function( e ) {\n\t\n\t\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t// Handle multiple events separated by a space\n\t\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\t\tt = types.length;\n\t\t\twhile ( t-- ) {\n\t\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\t\ttype = origType = tmp[ 1 ];\n\t\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\t\n\t\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\t\tif ( !type ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\n\t\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\n\t\t\t\t// Update special based on newly reset type\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\n\t\t\t\t// handleObj is passed to all event handlers\n\t\t\t\thandleObj = jQuery.extend( {\n\t\t\t\t\ttype: type,\n\t\t\t\t\torigType: origType,\n\t\t\t\t\tdata: data,\n\t\t\t\t\thandler: handler,\n\t\t\t\t\tguid: handler.guid,\n\t\t\t\t\tselector: selector,\n\t\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t\t}, handleObjIn );\n\t\n\t\t\t\t// Init the event handler queue if we're the first\n\t\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\t\thandlers.delegateCount = 0;\n\t\n\t\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\t\tif ( !special.setup ||\n\t\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\n\t\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif ( special.add ) {\n\t\t\t\t\tspecial.add.call( elem, handleObj );\n\t\n\t\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Add to the element's handler list, delegates in front\n\t\t\t\tif ( selector ) {\n\t\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t\t} else {\n\t\t\t\t\thandlers.push( handleObj );\n\t\t\t\t}\n\t\n\t\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\t\tjQuery.event.global[ type ] = true;\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\t\n\t\t\tvar j, origCount, tmp,\n\t\t\t\tevents, t, handleObj,\n\t\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\t\n\t\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Once for each type.namespace in types; type may be omitted\n\t\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\t\tt = types.length;\n\t\t\twhile ( t-- ) {\n\t\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\t\ttype = origType = tmp[ 1 ];\n\t\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\t\n\t\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\t\tif ( !type ) {\n\t\t\t\t\tfor ( type in events ) {\n\t\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\t\thandlers = events[ type ] || [];\n\t\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\t\n\t\t\t\t// Remove matching events\n\t\t\t\torigCount = j = handlers.length;\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\thandleObj = handlers[ j ];\n\t\n\t\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\t\thandlers.splice( j, 1 );\n\t\n\t\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\n\t\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdelete events[ type ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Remove data and the expando if it's no longer used\n\t\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t\t}\n\t\t},\n\t\n\t\tdispatch: function( event ) {\n\t\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( event );\n\t\n\t\t\tvar i, j, ret, matched, handleObj,\n\t\t\t\thandlerQueue = [],\n\t\t\t\targs = slice.call( arguments ),\n\t\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\t\n\t\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\t\targs[ 0 ] = event;\n\t\t\tevent.delegateTarget = this;\n\t\n\t\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Determine handlers\n\t\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\t\n\t\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\t\ti = 0;\n\t\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\t\tevent.currentTarget = matched.elem;\n\t\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\t\n\t\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\t\n\t\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\t\tevent.data = handleObj.data;\n\t\n\t\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Call the postDispatch hook for the mapped type\n\t\t\tif ( special.postDispatch ) {\n\t\t\t\tspecial.postDispatch.call( this, event );\n\t\t\t}\n\t\n\t\t\treturn event.result;\n\t\t},\n\t\n\t\thandlers: function( event, handlers ) {\n\t\t\tvar i, matches, sel, handleObj,\n\t\t\t\thandlerQueue = [],\n\t\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\t\tcur = event.target;\n\t\n\t\t\t// Support (at least): Chrome, IE9\n\t\t\t// Find delegate handlers\n\t\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t\t//\n\t\t\t// Support: Firefox<=42+\n\t\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\t\n\t\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\t\n\t\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\t\tmatches = [];\n\t\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\t\thandleObj = handlers[ i ];\n\t\n\t\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\t\n\t\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Add the remaining (directly-bound) handlers\n\t\t\tif ( delegateCount < handlers.length ) {\n\t\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t\t}\n\t\n\t\t\treturn handlerQueue;\n\t\t},\n\t\n\t\t// Includes some event props shared by KeyEvent and MouseEvent\n\t\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\t\n\t\tfixHooks: {},\n\t\n\t\tkeyHooks: {\n\t\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\t\tfilter: function( event, original ) {\n\t\n\t\t\t\t// Add which for key events\n\t\t\t\tif ( event.which == null ) {\n\t\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t\t}\n\t\n\t\t\t\treturn event;\n\t\t\t}\n\t\t},\n\t\n\t\tmouseHooks: {\n\t\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\t\tfilter: function( event, original ) {\n\t\t\t\tvar eventDoc, doc, body,\n\t\t\t\t\tbutton = original.button;\n\t\n\t\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\t\tbody = eventDoc.body;\n\t\n\t\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t\t}\n\t\n\t\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t\t// Note: button is not normalized, so don't use it\n\t\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t\t}\n\t\n\t\t\t\treturn event;\n\t\t\t}\n\t\t},\n\t\n\t\tfix: function( event ) {\n\t\t\tif ( event[ jQuery.expando ] ) {\n\t\t\t\treturn event;\n\t\t\t}\n\t\n\t\t\t// Create a writable copy of the event object and normalize some properties\n\t\t\tvar i, prop, copy,\n\t\t\t\ttype = event.type,\n\t\t\t\toriginalEvent = event,\n\t\t\t\tfixHook = this.fixHooks[ type ];\n\t\n\t\t\tif ( !fixHook ) {\n\t\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t\t{};\n\t\t\t}\n\t\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\t\n\t\t\tevent = new jQuery.Event( originalEvent );\n\t\n\t\t\ti = copy.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tprop = copy[ i ];\n\t\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t\t}\n\t\n\t\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t\t// All events should have a target; Cordova deviceready doesn't\n\t\t\tif ( !event.target ) {\n\t\t\t\tevent.target = document;\n\t\t\t}\n\t\n\t\t\t// Support: Safari 6.0+, Chrome<28\n\t\t\t// Target should not be a text node (#504, #13143)\n\t\t\tif ( event.target.nodeType === 3 ) {\n\t\t\t\tevent.target = event.target.parentNode;\n\t\t\t}\n\t\n\t\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t\t},\n\t\n\t\tspecial: {\n\t\t\tload: {\n\t\n\t\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\t\tnoBubble: true\n\t\t\t},\n\t\t\tfocus: {\n\t\n\t\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdelegateType: \"focusin\"\n\t\t\t},\n\t\t\tblur: {\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdelegateType: \"focusout\"\n\t\t\t},\n\t\t\tclick: {\n\t\n\t\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\t\tthis.click();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t\t_default: function( event ) {\n\t\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tbeforeunload: {\n\t\t\t\tpostDispatch: function( event ) {\n\t\n\t\t\t\t\t// Support: Firefox 20+\n\t\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.removeEvent = function( elem, type, handle ) {\n\t\n\t\t// This \"if\" is needed for plain objects\n\t\tif ( elem.removeEventListener ) {\n\t\t\telem.removeEventListener( type, handle );\n\t\t}\n\t};\n\t\n\tjQuery.Event = function( src, props ) {\n\t\n\t\t// Allow instantiation without the 'new' keyword\n\t\tif ( !( this instanceof jQuery.Event ) ) {\n\t\t\treturn new jQuery.Event( src, props );\n\t\t}\n\t\n\t\t// Event object\n\t\tif ( src && src.type ) {\n\t\t\tthis.originalEvent = src;\n\t\t\tthis.type = src.type;\n\t\n\t\t\t// Events bubbling up the document may have been marked as prevented\n\t\t\t// by a handler lower down the tree; reflect the correct value.\n\t\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\n\t\t\t\t\t// Support: Android<4.0\n\t\t\t\t\tsrc.returnValue === false ?\n\t\t\t\treturnTrue :\n\t\t\t\treturnFalse;\n\t\n\t\t// Event type\n\t\t} else {\n\t\t\tthis.type = src;\n\t\t}\n\t\n\t\t// Put explicitly provided properties onto the event object\n\t\tif ( props ) {\n\t\t\tjQuery.extend( this, props );\n\t\t}\n\t\n\t\t// Create a timestamp if incoming event doesn't have one\n\t\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\t\n\t\t// Mark it as fixed\n\t\tthis[ jQuery.expando ] = true;\n\t};\n\t\n\t// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n\t// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\tjQuery.Event.prototype = {\n\t\tconstructor: jQuery.Event,\n\t\tisDefaultPrevented: returnFalse,\n\t\tisPropagationStopped: returnFalse,\n\t\tisImmediatePropagationStopped: returnFalse,\n\t\tisSimulated: false,\n\t\n\t\tpreventDefault: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isDefaultPrevented = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\tstopPropagation: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isPropagationStopped = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t},\n\t\tstopImmediatePropagation: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t}\n\t\n\t\t\tthis.stopPropagation();\n\t\t}\n\t};\n\t\n\t// Create mouseenter/leave events using mouseover/out and event-time checks\n\t// so that event delegation works in jQuery.\n\t// Do the same for pointerenter/pointerleave and pointerover/pointerout\n\t//\n\t// Support: Safari 7 only\n\t// Safari sends mouseenter too often; see:\n\t// https://code.google.com/p/chromium/issues/detail?id=470258\n\t// for the description of the bug (it existed in older Chrome versions as well).\n\tjQuery.each( {\n\t\tmouseenter: \"mouseover\",\n\t\tmouseleave: \"mouseout\",\n\t\tpointerenter: \"pointerover\",\n\t\tpointerleave: \"pointerout\"\n\t}, function( orig, fix ) {\n\t\tjQuery.event.special[ orig ] = {\n\t\t\tdelegateType: fix,\n\t\t\tbindType: fix,\n\t\n\t\t\thandle: function( event ) {\n\t\t\t\tvar ret,\n\t\t\t\t\ttarget = this,\n\t\t\t\t\trelated = event.relatedTarget,\n\t\t\t\t\thandleObj = event.handleObj;\n\t\n\t\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\t\tevent.type = fix;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t};\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\ton: function( types, selector, data, fn ) {\n\t\t\treturn on( this, types, selector, data, fn );\n\t\t},\n\t\tone: function( types, selector, data, fn ) {\n\t\t\treturn on( this, types, selector, data, fn, 1 );\n\t\t},\n\t\toff: function( types, selector, fn ) {\n\t\t\tvar handleObj, type;\n\t\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\n\t\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\t\thandleObj = types.handleObj;\n\t\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\t\thandleObj.namespace ?\n\t\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\t\thandleObj.origType,\n\t\t\t\t\thandleObj.selector,\n\t\t\t\t\thandleObj.handler\n\t\t\t\t);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( typeof types === \"object\" ) {\n\t\n\t\t\t\t// ( types-object [, selector] )\n\t\t\t\tfor ( type in types ) {\n\t\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\n\t\t\t\t// ( types [, fn] )\n\t\t\t\tfn = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tif ( fn === false ) {\n\t\t\t\tfn = returnFalse;\n\t\t\t}\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tvar\n\t\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\t\n\t\t// Support: IE 10-11, Edge 10240+\n\t\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\t\trnoInnerhtml = /<script|<style|<link/i,\n\t\n\t\t// checked=\"checked\" or checked\n\t\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\t\trscriptTypeMasked = /^true\\/(.*)/,\n\t\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\t\n\t// Manipulating tables requires a tbody\n\tfunction manipulationTarget( elem, content ) {\n\t\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\t\n\t\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\t\telem;\n\t}\n\t\n\t// Replace/restore the type attribute of script elements for safe DOM manipulation\n\tfunction disableScript( elem ) {\n\t\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\t\treturn elem;\n\t}\n\tfunction restoreScript( elem ) {\n\t\tvar match = rscriptTypeMasked.exec( elem.type );\n\t\n\t\tif ( match ) {\n\t\t\telem.type = match[ 1 ];\n\t\t} else {\n\t\t\telem.removeAttribute( \"type\" );\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\tfunction cloneCopyEvent( src, dest ) {\n\t\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\t\n\t\tif ( dest.nodeType !== 1 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// 1. Copy private data: events, handlers, etc.\n\t\tif ( dataPriv.hasData( src ) ) {\n\t\t\tpdataOld = dataPriv.access( src );\n\t\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\t\tevents = pdataOld.events;\n\t\n\t\t\tif ( events ) {\n\t\t\t\tdelete pdataCur.handle;\n\t\t\t\tpdataCur.events = {};\n\t\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// 2. Copy user data\n\t\tif ( dataUser.hasData( src ) ) {\n\t\t\tudataOld = dataUser.access( src );\n\t\t\tudataCur = jQuery.extend( {}, udataOld );\n\t\n\t\t\tdataUser.set( dest, udataCur );\n\t\t}\n\t}\n\t\n\t// Fix IE bugs, see support tests\n\tfunction fixInput( src, dest ) {\n\t\tvar nodeName = dest.nodeName.toLowerCase();\n\t\n\t\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\t\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\t\tdest.checked = src.checked;\n\t\n\t\t// Fails to return the selected option to the default selected state when cloning options\n\t\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\t\tdest.defaultValue = src.defaultValue;\n\t\t}\n\t}\n\t\n\tfunction domManip( collection, args, callback, ignored ) {\n\t\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\t\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = collection.length,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\t\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn collection.each( function( index ) {\n\t\t\t\tvar self = collection.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tdomManip( self, args, callback, ignored );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( l ) {\n\t\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\t\tfirst = fragment.firstChild;\n\t\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\t\n\t\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\t\tif ( first || ignored ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\t\n\t\t\t\t// Use the original fragment for the last item\n\t\t\t\t// instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\t\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\t\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\n\t\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t\t}\n\t\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\t\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\t\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\t\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn collection;\n\t}\n\t\n\tfunction remove( elem, selector, keepData ) {\n\t\tvar node,\n\t\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\t\ti = 0;\n\t\n\t\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t\t}\n\t\n\t\t\tif ( node.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t\t}\n\t\t\t\tnode.parentNode.removeChild( node );\n\t\t\t}\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\tjQuery.extend( {\n\t\thtmlPrefilter: function( html ) {\n\t\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t\t},\n\t\n\t\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\t\tvar i, l, srcElements, destElements,\n\t\t\t\tclone = elem.cloneNode( true ),\n\t\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\t\n\t\t\t// Fix IE cloning issues\n\t\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\t\n\t\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\t\tdestElements = getAll( clone );\n\t\t\t\tsrcElements = getAll( elem );\n\t\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Copy the events from the original to the clone\n\t\t\tif ( dataAndEvents ) {\n\t\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\t\tdestElements = destElements || getAll( clone );\n\t\n\t\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Preserve script evaluation history\n\t\t\tdestElements = getAll( clone, \"script\" );\n\t\t\tif ( destElements.length > 0 ) {\n\t\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t\t}\n\t\n\t\t\t// Return the cloned set\n\t\t\treturn clone;\n\t\t},\n\t\n\t\tcleanData: function( elems ) {\n\t\t\tvar data, elem, type,\n\t\t\t\tspecial = jQuery.event.special,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\t\n\t\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\t\n\t\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\n\t\t// Keep domManip exposed until 3.0 (gh-2225)\n\t\tdomManip: domManip,\n\t\n\t\tdetach: function( selector ) {\n\t\t\treturn remove( this, selector, true );\n\t\t},\n\t\n\t\tremove: function( selector ) {\n\t\t\treturn remove( this, selector );\n\t\t},\n\t\n\t\ttext: function( value ) {\n\t\t\treturn access( this, function( value ) {\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\tjQuery.text( this ) :\n\t\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t}, null, value, arguments.length );\n\t\t},\n\t\n\t\tappend: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\t\ttarget.appendChild( elem );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tprepend: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tbefore: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.parentNode ) {\n\t\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tafter: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.parentNode ) {\n\t\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tempty: function() {\n\t\t\tvar elem,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\n\t\t\t\t\t// Prevent memory leaks\n\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\n\t\t\t\t\t// Remove any remaining nodes\n\t\t\t\t\telem.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\t\n\t\t\treturn this.map( function() {\n\t\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t\t} );\n\t\t},\n\t\n\t\thtml: function( value ) {\n\t\t\treturn access( this, function( value ) {\n\t\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\t\ti = 0,\n\t\t\t\t\tl = this.length;\n\t\n\t\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\t\treturn elem.innerHTML;\n\t\t\t\t}\n\t\n\t\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\t\n\t\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\t\telem = this[ i ] || {};\n\t\n\t\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\telem = 0;\n\t\n\t\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t\t} catch ( e ) {}\n\t\t\t\t}\n\t\n\t\t\t\tif ( elem ) {\n\t\t\t\t\tthis.empty().append( value );\n\t\t\t\t}\n\t\t\t}, null, value, arguments.length );\n\t\t},\n\t\n\t\treplaceWith: function() {\n\t\t\tvar ignored = [];\n\t\n\t\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tvar parent = this.parentNode;\n\t\n\t\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\t\tif ( parent ) {\n\t\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Force callback invocation\n\t\t\t}, ignored );\n\t\t}\n\t} );\n\t\n\tjQuery.each( {\n\t\tappendTo: \"append\",\n\t\tprependTo: \"prepend\",\n\t\tinsertBefore: \"before\",\n\t\tinsertAfter: \"after\",\n\t\treplaceAll: \"replaceWith\"\n\t}, function( name, original ) {\n\t\tjQuery.fn[ name ] = function( selector ) {\n\t\t\tvar elems,\n\t\t\t\tret = [],\n\t\t\t\tinsert = jQuery( selector ),\n\t\t\t\tlast = insert.length - 1,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; i <= last; i++ ) {\n\t\t\t\telems = i === last ? this : this.clone( true );\n\t\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\t\n\t\t\t\t// Support: QtWebKit\n\t\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\t\tpush.apply( ret, elems.get() );\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( ret );\n\t\t};\n\t} );\n\t\n\t\n\tvar iframe,\n\t\telemdisplay = {\n\t\n\t\t\t// Support: Firefox\n\t\t\t// We have to pre-define these values for FF (#10227)\n\t\t\tHTML: \"block\",\n\t\t\tBODY: \"block\"\n\t\t};\n\t\n\t/**\n\t * Retrieve the actual display of a element\n\t * @param {String} name nodeName of the element\n\t * @param {Object} doc Document object\n\t */\n\t\n\t// Called only from within defaultDisplay\n\tfunction actualDisplay( name, doc ) {\n\t\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\t\n\t\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\t\n\t\t// We don't have any data stored on the element,\n\t\t// so use \"detach\" method as fast way to get rid of the element\n\t\telem.detach();\n\t\n\t\treturn display;\n\t}\n\t\n\t/**\n\t * Try to determine the default display value of an element\n\t * @param {String} nodeName\n\t */\n\tfunction defaultDisplay( nodeName ) {\n\t\tvar doc = document,\n\t\t\tdisplay = elemdisplay[ nodeName ];\n\t\n\t\tif ( !display ) {\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\n\t\t\t// If the simple way fails, read from inside an iframe\n\t\t\tif ( display === \"none\" || !display ) {\n\t\n\t\t\t\t// Use the already-created iframe if possible\n\t\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t\t.appendTo( doc.documentElement );\n\t\n\t\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\t\tdoc = iframe[ 0 ].contentDocument;\n\t\n\t\t\t\t// Support: IE\n\t\t\t\tdoc.write();\n\t\t\t\tdoc.close();\n\t\n\t\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\t\tiframe.detach();\n\t\t\t}\n\t\n\t\t\t// Store the correct default display\n\t\t\telemdisplay[ nodeName ] = display;\n\t\t}\n\t\n\t\treturn display;\n\t}\n\tvar rmargin = ( /^margin/ );\n\t\n\tvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\t\n\tvar getStyles = function( elem ) {\n\t\n\t\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t\t// IE throws on elements created in popups\n\t\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\t\tvar view = elem.ownerDocument.defaultView;\n\t\n\t\t\tif ( !view || !view.opener ) {\n\t\t\t\tview = window;\n\t\t\t}\n\t\n\t\t\treturn view.getComputedStyle( elem );\n\t\t};\n\t\n\tvar swap = function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\t\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\t\n\t\tret = callback.apply( elem, args || [] );\n\t\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\t\n\t\treturn ret;\n\t};\n\t\n\t\n\tvar documentElement = document.documentElement;\n\t\n\t\n\t\n\t( function() {\n\t\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\t\tcontainer = document.createElement( \"div\" ),\n\t\t\tdiv = document.createElement( \"div\" );\n\t\n\t\t// Finish early in limited (non-browser) environments\n\t\tif ( !div.style ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Support: IE9-11+\n\t\t// Style of cloned element affects source element cloned (#8908)\n\t\tdiv.style.backgroundClip = \"content-box\";\n\t\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\t\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\t\n\t\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\t\"padding:0;margin-top:1px;position:absolute\";\n\t\tcontainer.appendChild( div );\n\t\n\t\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t\t// so they're executed at the same time to save the second computation.\n\t\tfunction computeStyleTests() {\n\t\t\tdiv.style.cssText =\n\t\n\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\t\"position:relative;display:block;\" +\n\t\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\t\"top:1%;width:50%\";\n\t\t\tdiv.innerHTML = \"\";\n\t\t\tdocumentElement.appendChild( container );\n\t\n\t\t\tvar divStyle = window.getComputedStyle( div );\n\t\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\t\n\t\t\t// Support: Android 4.0 - 4.3 only\n\t\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\t\tdiv.style.marginRight = \"50%\";\n\t\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\t\n\t\t\tdocumentElement.removeChild( container );\n\t\t}\n\t\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\t\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputeStyleTests();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\tpixelMarginRight: function() {\n\t\n\t\t\t\t// Support: Android 4.0-4.3\n\t\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputeStyleTests();\n\t\t\t\t}\n\t\t\t\treturn pixelMarginRightVal;\n\t\t\t},\n\t\t\treliableMarginLeft: function() {\n\t\n\t\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputeStyleTests();\n\t\t\t\t}\n\t\t\t\treturn reliableMarginLeftVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\t\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\t\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\n\t\t\t\t\t// Support: Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocumentElement.appendChild( container );\n\t\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\t\n\t\t\t\tdocumentElement.removeChild( container );\n\t\t\t\tdiv.removeChild( marginDiv );\n\t\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} );\n\t} )();\n\t\n\t\n\tfunction curCSS( elem, name, computed ) {\n\t\tvar width, minWidth, maxWidth, ret,\n\t\t\tstyle = elem.style;\n\t\n\t\tcomputed = computed || getStyles( elem );\n\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\t\n\t\t// Support: Opera 12.1x only\n\t\t// Fall back to style even without computed\n\t\t// computed is undefined for elems on document fragments\n\t\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\t\n\t\t// Support: IE9\n\t\t// getPropertyValue is only needed for .css('filter') (#12537)\n\t\tif ( computed ) {\n\t\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Android Browser returns percentage for some values,\n\t\t\t// but width seems to be reliably pixels.\n\t\t\t// This is against the CSSOM draft spec:\n\t\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\t\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\t\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\t\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret !== undefined ?\n\t\n\t\t\t// Support: IE9-11+\n\t\t\t// IE returns zIndex value as an integer.\n\t\t\tret + \"\" :\n\t\t\tret;\n\t}\n\t\n\t\n\tfunction addGetHookIf( conditionFn, hookFn ) {\n\t\n\t\t// Define the hook, we'll check on the first run if it's really needed.\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\tif ( conditionFn() ) {\n\t\n\t\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t\t// to missing dependency), remove it.\n\t\t\t\t\tdelete this.get;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t\t}\n\t\t};\n\t}\n\t\n\t\n\tvar\n\t\n\t\t// Swappable if display is none or starts with table\n\t\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\t\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\t\n\t\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\t\tcssNormalTransform = {\n\t\t\tletterSpacing: \"0\",\n\t\t\tfontWeight: \"400\"\n\t\t},\n\t\n\t\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\t\temptyStyle = document.createElement( \"div\" ).style;\n\t\n\t// Return a css property mapped to a potentially vendor prefixed property\n\tfunction vendorPropName( name ) {\n\t\n\t\t// Shortcut for names that are not vendor prefixed\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t\n\t\t// Check for vendor prefixed names\n\t\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\t\ti = cssPrefixes.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tname = cssPrefixes[ i ] + capName;\n\t\t\tif ( name in emptyStyle ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction setPositiveNumber( elem, value, subtract ) {\n\t\n\t\t// Any relative (+/-) values have already been\n\t\t// normalized at this point\n\t\tvar matches = rcssNum.exec( value );\n\t\treturn matches ?\n\t\n\t\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\t\tvalue;\n\t}\n\t\n\tfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\t\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\n\t\t\t// If we already have the right measurement, avoid augmentation\n\t\t\t4 :\n\t\n\t\t\t// Otherwise initialize for horizontal or vertical properties\n\t\t\tname === \"width\" ? 1 : 0,\n\t\n\t\t\tval = 0;\n\t\n\t\tfor ( ; i < 4; i += 2 ) {\n\t\n\t\t\t// Both box models exclude margin, so add it if we want it\n\t\t\tif ( extra === \"margin\" ) {\n\t\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t\t}\n\t\n\t\t\tif ( isBorderBox ) {\n\t\n\t\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\t\tif ( extra === \"content\" ) {\n\t\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t\t}\n\t\n\t\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t\t}\n\t\t\t} else {\n\t\n\t\t\t\t// At this point, extra isn't content, so add padding\n\t\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\n\t\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn val;\n\t}\n\t\n\tfunction getWidthOrHeight( elem, name, extra ) {\n\t\n\t\t// Start with offset property, which is equivalent to the border-box value\n\t\tvar valueIsBorderBox = true,\n\t\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\t\tstyles = getStyles( elem ),\n\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\t\n\t\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\t\tif ( val <= 0 || val == null ) {\n\t\n\t\t\t// Fall back to computed then uncomputed css if necessary\n\t\t\tval = curCSS( elem, name, styles );\n\t\t\tif ( val < 0 || val == null ) {\n\t\t\t\tval = elem.style[ name ];\n\t\t\t}\n\t\n\t\t\t// Computed unit is not pixels. Stop here and return.\n\t\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\t\treturn val;\n\t\t\t}\n\t\n\t\t\t// Check for style in case a browser which returns unreliable values\n\t\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\t\n\t\t\t// Normalize \"\", auto, and prepare for extra\n\t\t\tval = parseFloat( val ) || 0;\n\t\t}\n\t\n\t\t// Use the active box-sizing model to add/subtract irrelevant styles\n\t\treturn ( val +\n\t\t\taugmentWidthOrHeight(\n\t\t\t\telem,\n\t\t\t\tname,\n\t\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\t\tvalueIsBorderBox,\n\t\t\t\tstyles\n\t\t\t)\n\t\t) + \"px\";\n\t}\n\t\n\tfunction showHide( elements, show ) {\n\t\tvar display, elem, hidden,\n\t\t\tvalues = [],\n\t\t\tindex = 0,\n\t\t\tlength = elements.length;\n\t\n\t\tfor ( ; index < length; index++ ) {\n\t\t\telem = elements[ index ];\n\t\t\tif ( !elem.style ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\t\tdisplay = elem.style.display;\n\t\t\tif ( show ) {\n\t\n\t\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t\t// being hidden by cascaded rules or not\n\t\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\n\t\t\t\t// Set elements which have been overridden with display: none\n\t\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t\t// for such an element\n\t\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thidden = isHidden( elem );\n\t\n\t\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\t\tdataPriv.set(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Set the display of most of the elements in a second loop\n\t\t// to avoid the constant reflow\n\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\telem = elements[ index ];\n\t\t\tif ( !elem.style ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t\t}\n\t\t}\n\t\n\t\treturn elements;\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\t// Add in style property hooks for overriding the default\n\t\t// behavior of getting and setting a style property\n\t\tcssHooks: {\n\t\t\topacity: {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\n\t\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t// Don't automatically add \"px\" to these possibly-unitless properties\n\t\tcssNumber: {\n\t\t\t\"animationIterationCount\": true,\n\t\t\t\"columnCount\": true,\n\t\t\t\"fillOpacity\": true,\n\t\t\t\"flexGrow\": true,\n\t\t\t\"flexShrink\": true,\n\t\t\t\"fontWeight\": true,\n\t\t\t\"lineHeight\": true,\n\t\t\t\"opacity\": true,\n\t\t\t\"order\": true,\n\t\t\t\"orphans\": true,\n\t\t\t\"widows\": true,\n\t\t\t\"zIndex\": true,\n\t\t\t\"zoom\": true\n\t\t},\n\t\n\t\t// Add in properties whose names you wish to fix before\n\t\t// setting or getting the value\n\t\tcssProps: {\n\t\t\t\"float\": \"cssFloat\"\n\t\t},\n\t\n\t\t// Get and set the style property on a DOM Node\n\t\tstyle: function( elem, name, value, extra ) {\n\t\n\t\t\t// Don't set styles on text and comment nodes\n\t\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Make sure that we're working with the right name\n\t\t\tvar ret, type, hooks,\n\t\t\t\torigName = jQuery.camelCase( name ),\n\t\t\t\tstyle = elem.style;\n\t\n\t\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\t\n\t\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\t\n\t\t\t// Check if we're setting a value\n\t\t\tif ( value !== undefined ) {\n\t\t\t\ttype = typeof value;\n\t\n\t\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\t\n\t\t\t\t\t// Fixes bug #9237\n\t\t\t\t\ttype = \"number\";\n\t\t\t\t}\n\t\n\t\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\t\tif ( value == null || value !== value ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t\tif ( type === \"number\" ) {\n\t\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: IE9-11+\n\t\t\t\t// background-* props affect original clone's values\n\t\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t\t}\n\t\n\t\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\t\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\t\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\t// Otherwise just get the value from the style object\n\t\t\t\treturn style[ name ];\n\t\t\t}\n\t\t},\n\t\n\t\tcss: function( elem, name, extra, styles ) {\n\t\t\tvar val, num, hooks,\n\t\t\t\torigName = jQuery.camelCase( name );\n\t\n\t\t\t// Make sure that we're working with the right name\n\t\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\t\n\t\t\t// Try prefixed name followed by the unprefixed name\n\t\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\t\n\t\t\t// If a hook was provided get the computed value from there\n\t\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\t\tval = hooks.get( elem, true, extra );\n\t\t\t}\n\t\n\t\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\t\tif ( val === undefined ) {\n\t\t\t\tval = curCSS( elem, name, styles );\n\t\t\t}\n\t\n\t\t\t// Convert \"normal\" to computed value\n\t\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\t\tval = cssNormalTransform[ name ];\n\t\t\t}\n\t\n\t\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\t\tif ( extra === \"\" || extra ) {\n\t\t\t\tnum = parseFloat( val );\n\t\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t\t}\n\t\t\treturn val;\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\t\tjQuery.cssHooks[ name ] = {\n\t\t\tget: function( elem, computed, extra ) {\n\t\t\t\tif ( computed ) {\n\t\n\t\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t\t} ) :\n\t\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tset: function( elem, value, extra ) {\n\t\t\t\tvar matches,\n\t\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\t\tstyles\n\t\t\t\t\t);\n\t\n\t\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\t\n\t\t\t\t\telem.style[ name ] = value;\n\t\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t\t}\n\t\n\t\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t\t}\n\t\t};\n\t} );\n\t\n\tjQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t\t} )\n\t\t\t\t\t) + \"px\";\n\t\t\t}\n\t\t}\n\t);\n\t\n\t// Support: Android 2.3\n\tjQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t\t}\n\t\t}\n\t);\n\t\n\t// These hooks are used by animate to expand properties\n\tjQuery.each( {\n\t\tmargin: \"\",\n\t\tpadding: \"\",\n\t\tborder: \"Width\"\n\t}, function( prefix, suffix ) {\n\t\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\t\texpand: function( value ) {\n\t\t\t\tvar i = 0,\n\t\t\t\t\texpanded = {},\n\t\n\t\t\t\t\t// Assumes a single number if not a string\n\t\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\t\n\t\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t\t}\n\t\n\t\t\t\treturn expanded;\n\t\t\t}\n\t\t};\n\t\n\t\tif ( !rmargin.test( prefix ) ) {\n\t\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tcss: function( name, value ) {\n\t\t\treturn access( this, function( elem, name, value ) {\n\t\t\t\tvar styles, len,\n\t\t\t\t\tmap = {},\n\t\t\t\t\ti = 0;\n\t\n\t\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\t\tstyles = getStyles( elem );\n\t\t\t\t\tlen = name.length;\n\t\n\t\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn map;\n\t\t\t\t}\n\t\n\t\t\t\treturn value !== undefined ?\n\t\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\t\tjQuery.css( elem, name );\n\t\t\t}, name, value, arguments.length > 1 );\n\t\t},\n\t\tshow: function() {\n\t\t\treturn showHide( this, true );\n\t\t},\n\t\thide: function() {\n\t\t\treturn showHide( this );\n\t\t},\n\t\ttoggle: function( state ) {\n\t\t\tif ( typeof state === \"boolean\" ) {\n\t\t\t\treturn state ? this.show() : this.hide();\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tif ( isHidden( this ) ) {\n\t\t\t\t\tjQuery( this ).show();\n\t\t\t\t} else {\n\t\t\t\t\tjQuery( this ).hide();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tfunction Tween( elem, options, prop, end, easing ) {\n\t\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n\t}\n\tjQuery.Tween = Tween;\n\t\n\tTween.prototype = {\n\t\tconstructor: Tween,\n\t\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\t\tthis.elem = elem;\n\t\t\tthis.prop = prop;\n\t\t\tthis.easing = easing || jQuery.easing._default;\n\t\t\tthis.options = options;\n\t\t\tthis.start = this.now = this.cur();\n\t\t\tthis.end = end;\n\t\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t\t},\n\t\tcur: function() {\n\t\t\tvar hooks = Tween.propHooks[ this.prop ];\n\t\n\t\t\treturn hooks && hooks.get ?\n\t\t\t\thooks.get( this ) :\n\t\t\t\tTween.propHooks._default.get( this );\n\t\t},\n\t\trun: function( percent ) {\n\t\t\tvar eased,\n\t\t\t\thooks = Tween.propHooks[ this.prop ];\n\t\n\t\t\tif ( this.options.duration ) {\n\t\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.pos = eased = percent;\n\t\t\t}\n\t\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\t\n\t\t\tif ( this.options.step ) {\n\t\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t\t}\n\t\n\t\t\tif ( hooks && hooks.set ) {\n\t\t\t\thooks.set( this );\n\t\t\t} else {\n\t\t\t\tTween.propHooks._default.set( this );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t};\n\t\n\tTween.prototype.init.prototype = Tween.prototype;\n\t\n\tTween.propHooks = {\n\t\t_default: {\n\t\t\tget: function( tween ) {\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t\t// or when there is no matching style property that exists.\n\t\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t\t}\n\t\n\t\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\n\t\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t\t},\n\t\t\tset: function( tween ) {\n\t\n\t\t\t\t// Use step hook for back compat.\n\t\t\t\t// Use cssHook if its there.\n\t\t\t\t// Use .style if available and use plain properties where available.\n\t\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t\t} else {\n\t\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Support: IE9\n\t// Panic based approach to setting things on disconnected nodes\n\tTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\t\tset: function( tween ) {\n\t\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.easing = {\n\t\tlinear: function( p ) {\n\t\t\treturn p;\n\t\t},\n\t\tswing: function( p ) {\n\t\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t\t},\n\t\t_default: \"swing\"\n\t};\n\t\n\tjQuery.fx = Tween.prototype.init;\n\t\n\t// Back Compat <1.8 extension point\n\tjQuery.fx.step = {};\n\t\n\t\n\t\n\t\n\tvar\n\t\tfxNow, timerId,\n\t\trfxtypes = /^(?:toggle|show|hide)$/,\n\t\trrun = /queueHooks$/;\n\t\n\t// Animations created synchronously will run synchronously\n\tfunction createFxNow() {\n\t\twindow.setTimeout( function() {\n\t\t\tfxNow = undefined;\n\t\t} );\n\t\treturn ( fxNow = jQuery.now() );\n\t}\n\t\n\t// Generate parameters to create a standard animation\n\tfunction genFx( type, includeWidth ) {\n\t\tvar which,\n\t\t\ti = 0,\n\t\t\tattrs = { height: type };\n\t\n\t\t// If we include width, step value is 1 to do all cssExpand values,\n\t\t// otherwise step value is 2 to skip over Left and Right\n\t\tincludeWidth = includeWidth ? 1 : 0;\n\t\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\t\twhich = cssExpand[ i ];\n\t\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t\t}\n\t\n\t\tif ( includeWidth ) {\n\t\t\tattrs.opacity = attrs.width = type;\n\t\t}\n\t\n\t\treturn attrs;\n\t}\n\t\n\tfunction createTween( value, prop, animation ) {\n\t\tvar tween,\n\t\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\t\tindex = 0,\n\t\t\tlength = collection.length;\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\t\n\t\t\t\t// We're done with this property\n\t\t\t\treturn tween;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction defaultPrefilter( elem, props, opts ) {\n\t\t/* jshint validthis: true */\n\t\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\t\tanim = this,\n\t\t\torig = {},\n\t\t\tstyle = elem.style,\n\t\t\thidden = elem.nodeType && isHidden( elem ),\n\t\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\t\n\t\t// Handle queue: false promises\n\t\tif ( !opts.queue ) {\n\t\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\t\tif ( hooks.unqueued == null ) {\n\t\t\t\thooks.unqueued = 0;\n\t\t\t\toldfire = hooks.empty.fire;\n\t\t\t\thooks.empty.fire = function() {\n\t\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\t\toldfire();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\thooks.unqueued++;\n\t\n\t\t\tanim.always( function() {\n\t\n\t\t\t\t// Ensure the complete handler is called before this completes\n\t\t\t\tanim.always( function() {\n\t\t\t\t\thooks.unqueued--;\n\t\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\t\thooks.empty.fire();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Height/width overflow pass\n\t\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\n\t\t\t// Make sure that nothing sneaks out\n\t\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t\t// change the overflow attribute when overflowX and\n\t\t\t// overflowY are set to the same value\n\t\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\t\n\t\t\t// Set display property to inline-block for height/width\n\t\t\t// animations on inline elements that are having width/height animated\n\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\n\t\t\t// Test default display if display is currently \"none\"\n\t\t\tcheckDisplay = display === \"none\" ?\n\t\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\t\n\t\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t\n\t\tif ( opts.overflow ) {\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tanim.always( function() {\n\t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t\t} );\n\t\t}\n\t\n\t\t// show/hide pass\n\t\tfor ( prop in props ) {\n\t\t\tvalue = props[ prop ];\n\t\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\t\tdelete props[ prop ];\n\t\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\t\n\t\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\n\t\t\t// Any non-fx value stops us from restoring the original display value\n\t\t\t} else {\n\t\t\t\tdisplay = undefined;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t\t}\n\t\n\t\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\t\t\tif ( hidden ) {\n\t\t\t\tjQuery( elem ).show();\n\t\t\t} else {\n\t\t\t\tanim.done( function() {\n\t\t\t\t\tjQuery( elem ).hide();\n\t\t\t\t} );\n\t\t\t}\n\t\t\tanim.done( function() {\n\t\t\t\tvar prop;\n\t\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\n\t\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\t\tif ( hidden ) {\n\t\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\t\tstyle.display = display;\n\t\t}\n\t}\n\t\n\tfunction propFilter( props, specialEasing ) {\n\t\tvar index, name, easing, value, hooks;\n\t\n\t\t// camelCase, specialEasing and expand cssHook pass\n\t\tfor ( index in props ) {\n\t\t\tname = jQuery.camelCase( index );\n\t\t\teasing = specialEasing[ name ];\n\t\t\tvalue = props[ index ];\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\teasing = value[ 1 ];\n\t\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t\t}\n\t\n\t\t\tif ( index !== name ) {\n\t\t\t\tprops[ name ] = value;\n\t\t\t\tdelete props[ index ];\n\t\t\t}\n\t\n\t\t\thooks = jQuery.cssHooks[ name ];\n\t\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\t\tvalue = hooks.expand( value );\n\t\t\t\tdelete props[ name ];\n\t\n\t\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\t\tfor ( index in value ) {\n\t\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tspecialEasing[ name ] = easing;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction Animation( elem, properties, options ) {\n\t\tvar result,\n\t\t\tstopped,\n\t\t\tindex = 0,\n\t\t\tlength = Animation.prefilters.length,\n\t\t\tdeferred = jQuery.Deferred().always( function() {\n\t\n\t\t\t\t// Don't match elem in the :animated selector\n\t\t\t\tdelete tick.elem;\n\t\t\t} ),\n\t\t\ttick = function() {\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\n\t\t\t\t\t// Support: Android 2.3\n\t\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\t\tpercent = 1 - temp,\n\t\t\t\t\tindex = 0,\n\t\t\t\t\tlength = animation.tweens.length;\n\t\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t\t}\n\t\n\t\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\t\n\t\t\t\tif ( percent < 1 && length ) {\n\t\t\t\t\treturn remaining;\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimation = deferred.promise( {\n\t\t\t\telem: elem,\n\t\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\t\topts: jQuery.extend( true, {\n\t\t\t\t\tspecialEasing: {},\n\t\t\t\t\teasing: jQuery.easing._default\n\t\t\t\t}, options ),\n\t\t\t\toriginalProperties: properties,\n\t\t\t\toriginalOptions: options,\n\t\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\t\tduration: options.duration,\n\t\t\t\ttweens: [],\n\t\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\t\treturn tween;\n\t\t\t\t},\n\t\t\t\tstop: function( gotoEnd ) {\n\t\t\t\t\tvar index = 0,\n\t\n\t\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\t\tif ( stopped ) {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t\tstopped = true;\n\t\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} ),\n\t\t\tprops = animation.props;\n\t\n\t\tpropFilter( props, animation.opts.specialEasing );\n\t\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\t\tif ( result ) {\n\t\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\n\t\tjQuery.map( props, createTween, animation );\n\t\n\t\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\t\tanimation.opts.start.call( elem, animation );\n\t\t}\n\t\n\t\tjQuery.fx.timer(\n\t\t\tjQuery.extend( tick, {\n\t\t\t\telem: elem,\n\t\t\t\tanim: animation,\n\t\t\t\tqueue: animation.opts.queue\n\t\t\t} )\n\t\t);\n\t\n\t\t// attach callbacks from options\n\t\treturn animation.progress( animation.opts.progress )\n\t\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t\t.fail( animation.opts.fail )\n\t\t\t.always( animation.opts.always );\n\t}\n\t\n\tjQuery.Animation = jQuery.extend( Animation, {\n\t\ttweeners: {\n\t\t\t\"*\": [ function( prop, value ) {\n\t\t\t\tvar tween = this.createTween( prop, value );\n\t\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\t\treturn tween;\n\t\t\t} ]\n\t\t},\n\t\n\t\ttweener: function( props, callback ) {\n\t\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\t\tcallback = props;\n\t\t\t\tprops = [ \"*\" ];\n\t\t\t} else {\n\t\t\t\tprops = props.match( rnotwhite );\n\t\t\t}\n\t\n\t\t\tvar prop,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = props.length;\n\t\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tprop = props[ index ];\n\t\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t\t}\n\t\t},\n\t\n\t\tprefilters: [ defaultPrefilter ],\n\t\n\t\tprefilter: function( callback, prepend ) {\n\t\t\tif ( prepend ) {\n\t\t\t\tAnimation.prefilters.unshift( callback );\n\t\t\t} else {\n\t\t\t\tAnimation.prefilters.push( callback );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tjQuery.speed = function( speed, easing, fn ) {\n\t\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\t\tcomplete: fn || !fn && easing ||\n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t\t};\n\t\n\t\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\t\n\t\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\t\tif ( opt.queue == null || opt.queue === true ) {\n\t\t\topt.queue = \"fx\";\n\t\t}\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\n\t\topt.complete = function() {\n\t\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\t\topt.old.call( this );\n\t\t\t}\n\t\n\t\t\tif ( opt.queue ) {\n\t\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t\t}\n\t\t};\n\t\n\t\treturn opt;\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tfadeTo: function( speed, to, easing, callback ) {\n\t\n\t\t\t// Show any hidden elements after setting opacity to 0\n\t\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\t\n\t\t\t\t// Animate to the value specified\n\t\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t\t},\n\t\tanimate: function( prop, speed, easing, callback ) {\n\t\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\t\tdoAnimation = function() {\n\t\n\t\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\t\n\t\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\t\tanim.stop( true );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tdoAnimation.finish = doAnimation;\n\t\n\t\t\treturn empty || optall.queue === false ?\n\t\t\t\tthis.each( doAnimation ) :\n\t\t\t\tthis.queue( optall.queue, doAnimation );\n\t\t},\n\t\tstop: function( type, clearQueue, gotoEnd ) {\n\t\t\tvar stopQueue = function( hooks ) {\n\t\t\t\tvar stop = hooks.stop;\n\t\t\t\tdelete hooks.stop;\n\t\t\t\tstop( gotoEnd );\n\t\t\t};\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tgotoEnd = clearQueue;\n\t\t\t\tclearQueue = type;\n\t\t\t\ttype = undefined;\n\t\t\t}\n\t\t\tif ( clearQueue && type !== false ) {\n\t\t\t\tthis.queue( type || \"fx\", [] );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar dequeue = true,\n\t\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\t\ttimers = jQuery.timers,\n\t\t\t\t\tdata = dataPriv.get( this );\n\t\n\t\t\t\tif ( index ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( index in data ) {\n\t\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\t\n\t\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\t\tdequeue = false;\n\t\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\tfinish: function( type ) {\n\t\t\tif ( type !== false ) {\n\t\t\t\ttype = type || \"fx\";\n\t\t\t}\n\t\t\treturn this.each( function() {\n\t\t\t\tvar index,\n\t\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\t\ttimers = jQuery.timers,\n\t\t\t\t\tlength = queue ? queue.length : 0;\n\t\n\t\t\t\t// Enable finishing flag on private data\n\t\t\t\tdata.finish = true;\n\t\n\t\t\t\t// Empty the queue first\n\t\t\t\tjQuery.queue( this, type, [] );\n\t\n\t\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\t\thooks.stop.call( this, true );\n\t\t\t\t}\n\t\n\t\t\t\t// Look for any active animations, and finish them\n\t\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Look for any animations in the old queue and finish them\n\t\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Turn off finishing flag\n\t\t\t\tdelete data.finish;\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\t\tvar cssFn = jQuery.fn[ name ];\n\t\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\t\tcssFn.apply( this, arguments ) :\n\t\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t\t};\n\t} );\n\t\n\t// Generate shortcuts for custom animations\n\tjQuery.each( {\n\t\tslideDown: genFx( \"show\" ),\n\t\tslideUp: genFx( \"hide\" ),\n\t\tslideToggle: genFx( \"toggle\" ),\n\t\tfadeIn: { opacity: \"show\" },\n\t\tfadeOut: { opacity: \"hide\" },\n\t\tfadeToggle: { opacity: \"toggle\" }\n\t}, function( name, props ) {\n\t\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\t\treturn this.animate( props, speed, easing, callback );\n\t\t};\n\t} );\n\t\n\tjQuery.timers = [];\n\tjQuery.fx.tick = function() {\n\t\tvar timer,\n\t\t\ti = 0,\n\t\t\ttimers = jQuery.timers;\n\t\n\t\tfxNow = jQuery.now();\n\t\n\t\tfor ( ; i < timers.length; i++ ) {\n\t\t\ttimer = timers[ i ];\n\t\n\t\t\t// Checks the timer has not already been removed\n\t\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\t\ttimers.splice( i--, 1 );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !timers.length ) {\n\t\t\tjQuery.fx.stop();\n\t\t}\n\t\tfxNow = undefined;\n\t};\n\t\n\tjQuery.fx.timer = function( timer ) {\n\t\tjQuery.timers.push( timer );\n\t\tif ( timer() ) {\n\t\t\tjQuery.fx.start();\n\t\t} else {\n\t\t\tjQuery.timers.pop();\n\t\t}\n\t};\n\t\n\tjQuery.fx.interval = 13;\n\tjQuery.fx.start = function() {\n\t\tif ( !timerId ) {\n\t\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t\t}\n\t};\n\t\n\tjQuery.fx.stop = function() {\n\t\twindow.clearInterval( timerId );\n\t\n\t\ttimerId = null;\n\t};\n\t\n\tjQuery.fx.speeds = {\n\t\tslow: 600,\n\t\tfast: 200,\n\t\n\t\t// Default speed\n\t\t_default: 400\n\t};\n\t\n\t\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tjQuery.fn.delay = function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\t\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = window.setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\twindow.clearTimeout( timeout );\n\t\t\t};\n\t\t} );\n\t};\n\t\n\t\n\t( function() {\n\t\tvar input = document.createElement( \"input\" ),\n\t\t\tselect = document.createElement( \"select\" ),\n\t\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\t\n\t\tinput.type = \"checkbox\";\n\t\n\t\t// Support: iOS<=5.1, Android<=4.2+\n\t\t// Default value for a checkbox should be \"on\"\n\t\tsupport.checkOn = input.value !== \"\";\n\t\n\t\t// Support: IE<=11+\n\t\t// Must access selectedIndex to make default options select\n\t\tsupport.optSelected = opt.selected;\n\t\n\t\t// Support: Android<=2.3\n\t\t// Options inside disabled selects are incorrectly marked as disabled\n\t\tselect.disabled = true;\n\t\tsupport.optDisabled = !opt.disabled;\n\t\n\t\t// Support: IE<=11+\n\t\t// An input loses its value after becoming a radio\n\t\tinput = document.createElement( \"input\" );\n\t\tinput.value = \"t\";\n\t\tinput.type = \"radio\";\n\t\tsupport.radioValue = input.value === \"t\";\n\t} )();\n\t\n\t\n\tvar boolHook,\n\t\tattrHandle = jQuery.expr.attrHandle;\n\t\n\tjQuery.fn.extend( {\n\t\tattr: function( name, value ) {\n\t\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t\t},\n\t\n\t\tremoveAttr: function( name ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.removeAttr( this, name );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tattr: function( elem, name, value ) {\n\t\t\tvar ret, hooks,\n\t\t\t\tnType = elem.nodeType;\n\t\n\t\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Fallback to prop when attributes are not supported\n\t\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\t\treturn jQuery.prop( elem, name, value );\n\t\t\t}\n\t\n\t\t\t// All attributes are lowercase\n\t\t\t// Grab necessary hook if one is defined\n\t\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\t\tname = name.toLowerCase();\n\t\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t\t}\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tif ( value === null ) {\n\t\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\t\n\t\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\t\tret = jQuery.find.attr( elem, name );\n\t\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ? undefined : ret;\n\t\t},\n\t\n\t\tattrHooks: {\n\t\t\ttype: {\n\t\t\t\tset: function( elem, value ) {\n\t\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tremoveAttr: function( elem, value ) {\n\t\t\tvar name, propName,\n\t\t\t\ti = 0,\n\t\t\t\tattrNames = value && value.match( rnotwhite );\n\t\n\t\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\t\n\t\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\n\t\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t\t}\n\t\n\t\t\t\t\telem.removeAttribute( name );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Hooks for boolean attributes\n\tboolHook = {\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( value === false ) {\n\t\n\t\t\t\t// Remove boolean attributes when set to false\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, name );\n\t\t\t}\n\t\t\treturn name;\n\t\t}\n\t};\n\tjQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\t\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\t\n\t\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\t\tvar ret, handle;\n\t\t\tif ( !isXML ) {\n\t\n\t\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\t\thandle = attrHandle[ name ];\n\t\t\t\tattrHandle[ name ] = ret;\n\t\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\t\t\t\tattrHandle[ name ] = handle;\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\t} );\n\t\n\t\n\t\n\t\n\tvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\t\trclickable = /^(?:a|area)$/i;\n\t\n\tjQuery.fn.extend( {\n\t\tprop: function( name, value ) {\n\t\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t\t},\n\t\n\t\tremoveProp: function( name ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tprop: function( elem, name, value ) {\n\t\t\tvar ret, hooks,\n\t\t\t\tnType = elem.nodeType;\n\t\n\t\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\n\t\t\t\t// Fix name and attach hooks\n\t\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\t\thooks = jQuery.propHooks[ name ];\n\t\t\t}\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\treturn ( elem[ name ] = value );\n\t\t\t}\n\t\n\t\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\t\treturn elem[ name ];\n\t\t},\n\t\n\t\tpropHooks: {\n\t\t\ttabIndex: {\n\t\t\t\tget: function( elem ) {\n\t\n\t\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\t\n\t\t\t\t\treturn tabindex ?\n\t\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t\t-1;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tpropFix: {\n\t\t\t\"for\": \"htmlFor\",\n\t\t\t\"class\": \"className\"\n\t\t}\n\t} );\n\t\n\t// Support: IE <=11 only\n\t// Accessing the selectedIndex property\n\t// forces the browser to respect setting selected\n\t// on the option\n\t// The getter ensures a default option is selected\n\t// when in an optgroup\n\tif ( !support.optSelected ) {\n\t\tjQuery.propHooks.selected = {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tset: function( elem ) {\n\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.selectedIndex;\n\t\n\t\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tjQuery.each( [\n\t\t\"tabIndex\",\n\t\t\"readOnly\",\n\t\t\"maxLength\",\n\t\t\"cellSpacing\",\n\t\t\"cellPadding\",\n\t\t\"rowSpan\",\n\t\t\"colSpan\",\n\t\t\"useMap\",\n\t\t\"frameBorder\",\n\t\t\"contentEditable\"\n\t], function() {\n\t\tjQuery.propFix[ this.toLowerCase() ] = this;\n\t} );\n\t\n\t\n\t\n\t\n\tvar rclass = /[\\t\\r\\n\\f]/g;\n\t\n\tfunction getClass( elem ) {\n\t\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n\t}\n\t\n\tjQuery.fn.extend( {\n\t\taddClass: function( value ) {\n\t\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\t\ti = 0;\n\t\n\t\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\t\treturn this.each( function( j ) {\n\t\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tif ( typeof value === \"string\" && value ) {\n\t\t\t\tclasses = value.match( rnotwhite ) || [];\n\t\n\t\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\t\tcurValue = getClass( elem );\n\t\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\t\n\t\t\t\t\tif ( cur ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\tremoveClass: function( value ) {\n\t\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\t\ti = 0;\n\t\n\t\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\t\treturn this.each( function( j ) {\n\t\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tif ( !arguments.length ) {\n\t\t\t\treturn this.attr( \"class\", \"\" );\n\t\t\t}\n\t\n\t\t\tif ( typeof value === \"string\" && value ) {\n\t\t\t\tclasses = value.match( rnotwhite ) || [];\n\t\n\t\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\t\tcurValue = getClass( elem );\n\t\n\t\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\t\n\t\t\t\t\tif ( cur ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\n\t\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\ttoggleClass: function( value, stateVal ) {\n\t\t\tvar type = typeof value;\n\t\n\t\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t\t}\n\t\n\t\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\t\tstateVal\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar className, i, self, classNames;\n\t\n\t\t\t\tif ( type === \"string\" ) {\n\t\n\t\t\t\t\t// Toggle individual class names\n\t\t\t\t\ti = 0;\n\t\t\t\t\tself = jQuery( this );\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\t\n\t\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\t\n\t\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t// Toggle whole class name\n\t\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\t\tclassName = getClass( this );\n\t\t\t\t\tif ( className ) {\n\t\n\t\t\t\t\t\t// Store className if set\n\t\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\thasClass: function( selector ) {\n\t\t\tvar className, elem,\n\t\t\t\ti = 0;\n\t\n\t\t\tclassName = \" \" + selector + \" \";\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tvar rreturn = /\\r/g,\n\t\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\t\n\tjQuery.fn.extend( {\n\t\tval: function( value ) {\n\t\t\tvar hooks, ret, isFunction,\n\t\t\t\telem = this[ 0 ];\n\t\n\t\t\tif ( !arguments.length ) {\n\t\t\t\tif ( elem ) {\n\t\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\t\n\t\t\t\t\tif ( hooks &&\n\t\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tret = elem.value;\n\t\n\t\t\t\t\treturn typeof ret === \"string\" ?\n\t\n\t\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\t\n\t\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t\t}\n\t\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tisFunction = jQuery.isFunction( value );\n\t\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tvar val;\n\t\n\t\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t\t} else {\n\t\t\t\t\tval = value;\n\t\t\t\t}\n\t\n\t\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\t\tif ( val == null ) {\n\t\t\t\t\tval = \"\";\n\t\n\t\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\t\tval += \"\";\n\t\n\t\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\n\t\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\t\n\t\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\t\tthis.value = val;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tvalHooks: {\n\t\t\toption: {\n\t\t\t\tget: function( elem ) {\n\t\n\t\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\t\treturn val != null ?\n\t\t\t\t\t\tval :\n\t\n\t\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t\t}\n\t\t\t},\n\t\t\tselect: {\n\t\t\t\tget: function( elem ) {\n\t\t\t\t\tvar value, option,\n\t\t\t\t\t\toptions = elem.options,\n\t\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\t\tmax :\n\t\t\t\t\t\t\tone ? index : 0;\n\t\n\t\t\t\t\t// Loop through all the selected options\n\t\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\n\t\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\n\t\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\t\n\t\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\t\tvalue = jQuery( option ).val();\n\t\n\t\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn values;\n\t\t\t\t},\n\t\n\t\t\t\tset: function( elem, value ) {\n\t\t\t\t\tvar optionSet, option,\n\t\t\t\t\t\toptions = elem.options,\n\t\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\t\ti = options.length;\n\t\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn values;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Radios and checkboxes getter/setter\n\tjQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\t\tjQuery.valHooks[ this ] = {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif ( !support.checkOn ) {\n\t\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Return jQuery for attributes-only inclusion\n\t\n\t\n\tvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\t\n\tjQuery.extend( jQuery.event, {\n\t\n\t\ttrigger: function( event, data, elem, onlyHandlers ) {\n\t\n\t\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\t\teventPath = [ elem || document ],\n\t\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\t\n\t\t\tcur = tmp = elem = elem || document;\n\t\n\t\t\t// Don't do events on text and comment nodes\n\t\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\t\n\t\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\t\tnamespaces = type.split( \".\" );\n\t\t\t\ttype = namespaces.shift();\n\t\t\t\tnamespaces.sort();\n\t\t\t}\n\t\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\t\n\t\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\t\tevent = event[ jQuery.expando ] ?\n\t\t\t\tevent :\n\t\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\t\n\t\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\t\tevent.namespace = namespaces.join( \".\" );\n\t\t\tevent.rnamespace = event.namespace ?\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\t\tnull;\n\t\n\t\t\t// Clean up the event in case it is being reused\n\t\t\tevent.result = undefined;\n\t\t\tif ( !event.target ) {\n\t\t\t\tevent.target = elem;\n\t\t\t}\n\t\n\t\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\t\tdata = data == null ?\n\t\t\t\t[ event ] :\n\t\t\t\tjQuery.makeArray( data, [ event ] );\n\t\n\t\t\t// Allow special events to draw outside the lines\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\t\n\t\t\t\tbubbleType = special.delegateType || type;\n\t\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\t\tcur = cur.parentNode;\n\t\t\t\t}\n\t\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\t\teventPath.push( cur );\n\t\t\t\t\ttmp = cur;\n\t\t\t\t}\n\t\n\t\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Fire handlers on the event path\n\t\t\ti = 0;\n\t\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\n\t\t\t\tevent.type = i > 1 ?\n\t\t\t\t\tbubbleType :\n\t\t\t\t\tspecial.bindType || type;\n\t\n\t\t\t\t// jQuery handler\n\t\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\t\tif ( handle ) {\n\t\t\t\t\thandle.apply( cur, data );\n\t\t\t\t}\n\t\n\t\t\t\t// Native handler\n\t\t\t\thandle = ontype && cur[ ontype ];\n\t\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tevent.type = type;\n\t\n\t\t\t// If nobody prevented the default action, do it now\n\t\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\t\n\t\t\t\tif ( ( !special._default ||\n\t\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\t\tacceptData( elem ) ) {\n\t\n\t\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\t\n\t\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\t\ttmp = elem[ ontype ];\n\t\n\t\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\t\telem[ type ]();\n\t\t\t\t\t\tjQuery.event.triggered = undefined;\n\t\n\t\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn event.result;\n\t\t},\n\t\n\t\t// Piggyback on a donor event to simulate a different one\n\t\t// Used only for `focus(in | out)` events\n\t\tsimulate: function( type, elem, event ) {\n\t\t\tvar e = jQuery.extend(\n\t\t\t\tnew jQuery.Event(),\n\t\t\t\tevent,\n\t\t\t\t{\n\t\t\t\t\ttype: type,\n\t\t\t\t\tisSimulated: true\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t}\n\t\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\n\t\ttrigger: function( type, data ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.event.trigger( type, data, this );\n\t\t\t} );\n\t\t},\n\t\ttriggerHandler: function( type, data ) {\n\t\t\tvar elem = this[ 0 ];\n\t\t\tif ( elem ) {\n\t\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\t\tfunction( i, name ) {\n\t\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\thover: function( fnOver, fnOut ) {\n\t\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tsupport.focusin = \"onfocusin\" in window;\n\t\n\t\n\t// Support: Firefox\n\t// Firefox doesn't have focus(in | out) events\n\t// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n\t//\n\t// Support: Chrome, Safari\n\t// focus(in | out) events fire after focus & blur events,\n\t// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n\t// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\n\tif ( !support.focusin ) {\n\t\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\t\n\t\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t\t};\n\t\n\t\t\tjQuery.event.special[ fix ] = {\n\t\t\t\tsetup: function() {\n\t\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\t\n\t\t\t\t\tif ( !attaches ) {\n\t\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t\t},\n\t\t\t\tteardown: function() {\n\t\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\t\n\t\t\t\t\tif ( !attaches ) {\n\t\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\t\tdataPriv.remove( doc, fix );\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t} );\n\t}\n\tvar location = window.location;\n\t\n\tvar nonce = jQuery.now();\n\t\n\tvar rquery = ( /\\?/ );\n\t\n\t\n\t\n\t// Support: Android 2.3\n\t// Workaround failure to string-cast null input\n\tjQuery.parseJSON = function( data ) {\n\t\treturn JSON.parse( data + \"\" );\n\t};\n\t\n\t\n\t// Cross-browser xml parsing\n\tjQuery.parseXML = function( data ) {\n\t\tvar xml;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// Support: IE9\n\t\ttry {\n\t\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t\t} catch ( e ) {\n\t\t\txml = undefined;\n\t\t}\n\t\n\t\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t};\n\t\n\t\n\tvar\n\t\trhash = /#.*$/,\n\t\trts = /([?&])_=[^&]*/,\n\t\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t\n\t\t// #7653, #8125, #8152: local protocol detection\n\t\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\t\trnoContent = /^(?:GET|HEAD)$/,\n\t\trprotocol = /^\\/\\//,\n\t\n\t\t/* Prefilters\n\t\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t\t * 2) These are called:\n\t\t *    - BEFORE asking for a transport\n\t\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t\t * 3) key is the dataType\n\t\t * 4) the catchall symbol \"*\" can be used\n\t\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t\t */\n\t\tprefilters = {},\n\t\n\t\t/* Transports bindings\n\t\t * 1) key is the dataType\n\t\t * 2) the catchall symbol \"*\" can be used\n\t\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t\t */\n\t\ttransports = {},\n\t\n\t\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\t\tallTypes = \"*/\".concat( \"*\" ),\n\t\n\t\t// Anchor tag for parsing the document origin\n\t\toriginAnchor = document.createElement( \"a\" );\n\t\toriginAnchor.href = location.href;\n\t\n\t// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\tfunction addToPrefiltersOrTransports( structure ) {\n\t\n\t\t// dataTypeExpression is optional and defaults to \"*\"\n\t\treturn function( dataTypeExpression, func ) {\n\t\n\t\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\t\tfunc = dataTypeExpression;\n\t\t\t\tdataTypeExpression = \"*\";\n\t\t\t}\n\t\n\t\t\tvar dataType,\n\t\t\t\ti = 0,\n\t\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\t\n\t\t\tif ( jQuery.isFunction( func ) ) {\n\t\n\t\t\t\t// For each dataType in the dataTypeExpression\n\t\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\t\n\t\t\t\t\t// Prepend if requested\n\t\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\t\n\t\t\t\t\t// Otherwise append\n\t\t\t\t\t} else {\n\t\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\t// Base inspection function for prefilters and transports\n\tfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\t\n\t\tvar inspected = {},\n\t\t\tseekingTransport = ( structure === transports );\n\t\n\t\tfunction inspect( dataType ) {\n\t\t\tvar selected;\n\t\t\tinspected[ dataType ] = true;\n\t\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\n\t\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\t\treturn false;\n\t\t\t\t} else if ( seekingTransport ) {\n\t\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn selected;\n\t\t}\n\t\n\t\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n\t}\n\t\n\t// A special extend for ajax options\n\t// that takes \"flat\" options (not to be deep extended)\n\t// Fixes #9887\n\tfunction ajaxExtend( target, src ) {\n\t\tvar key, deep,\n\t\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\t\n\t\tfor ( key in src ) {\n\t\t\tif ( src[ key ] !== undefined ) {\n\t\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t\t}\n\t\t}\n\t\tif ( deep ) {\n\t\t\tjQuery.extend( true, target, deep );\n\t\t}\n\t\n\t\treturn target;\n\t}\n\t\n\t/* Handles responses to an ajax request:\n\t * - finds the right dataType (mediates between content-type and expected dataType)\n\t * - returns the corresponding response\n\t */\n\tfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\t\n\t\tvar ct, type, finalDataType, firstDataType,\n\t\t\tcontents = s.contents,\n\t\t\tdataTypes = s.dataTypes;\n\t\n\t\t// Remove auto dataType and get content-type in the process\n\t\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\t\tdataTypes.shift();\n\t\t\tif ( ct === undefined ) {\n\t\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t\t}\n\t\t}\n\t\n\t\t// Check if we're dealing with a known content-type\n\t\tif ( ct ) {\n\t\t\tfor ( type in contents ) {\n\t\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\t\tdataTypes.unshift( type );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Check to see if we have a response for the expected dataType\n\t\tif ( dataTypes[ 0 ] in responses ) {\n\t\t\tfinalDataType = dataTypes[ 0 ];\n\t\t} else {\n\t\n\t\t\t// Try convertible dataTypes\n\t\t\tfor ( type in responses ) {\n\t\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\t\tfinalDataType = type;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( !firstDataType ) {\n\t\t\t\t\tfirstDataType = type;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Or just use first one\n\t\t\tfinalDataType = finalDataType || firstDataType;\n\t\t}\n\t\n\t\t// If we found a dataType\n\t\t// We add the dataType to the list if needed\n\t\t// and return the corresponding response\n\t\tif ( finalDataType ) {\n\t\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\t\tdataTypes.unshift( finalDataType );\n\t\t\t}\n\t\t\treturn responses[ finalDataType ];\n\t\t}\n\t}\n\t\n\t/* Chain conversions given the request and the original response\n\t * Also sets the responseXXX fields on the jqXHR instance\n\t */\n\tfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\t\tvar conv2, current, conv, tmp, prev,\n\t\t\tconverters = {},\n\t\n\t\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\t\tdataTypes = s.dataTypes.slice();\n\t\n\t\t// Create converters map with lowercased keys\n\t\tif ( dataTypes[ 1 ] ) {\n\t\t\tfor ( conv in s.converters ) {\n\t\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t\t}\n\t\t}\n\t\n\t\tcurrent = dataTypes.shift();\n\t\n\t\t// Convert to each sequential dataType\n\t\twhile ( current ) {\n\t\n\t\t\tif ( s.responseFields[ current ] ) {\n\t\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t\t}\n\t\n\t\t\t// Apply the dataFilter if provided\n\t\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t\t}\n\t\n\t\t\tprev = current;\n\t\t\tcurrent = dataTypes.shift();\n\t\n\t\t\tif ( current ) {\n\t\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\t\tif ( current === \"*\" ) {\n\t\n\t\t\t\t\tcurrent = prev;\n\t\n\t\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\t\n\t\t\t\t\t// Seek a direct converter\n\t\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\t\n\t\t\t\t\t// If none found, seek a pair\n\t\t\t\t\tif ( !conv ) {\n\t\t\t\t\t\tfor ( conv2 in converters ) {\n\t\n\t\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\t\n\t\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\t\tif ( conv ) {\n\t\n\t\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\t\n\t\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\t\tif ( conv !== true ) {\n\t\n\t\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn { state: \"success\", data: response };\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\t// Counter for holding the number of active queries\n\t\tactive: 0,\n\t\n\t\t// Last-Modified header cache for next request\n\t\tlastModified: {},\n\t\tetag: {},\n\t\n\t\tajaxSettings: {\n\t\t\turl: location.href,\n\t\t\ttype: \"GET\",\n\t\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\t\tglobal: true,\n\t\t\tprocessData: true,\n\t\t\tasync: true,\n\t\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t\t/*\n\t\t\ttimeout: 0,\n\t\t\tdata: null,\n\t\t\tdataType: null,\n\t\t\tusername: null,\n\t\t\tpassword: null,\n\t\t\tcache: null,\n\t\t\tthrows: false,\n\t\t\ttraditional: false,\n\t\t\theaders: {},\n\t\t\t*/\n\t\n\t\t\taccepts: {\n\t\t\t\t\"*\": allTypes,\n\t\t\t\ttext: \"text/plain\",\n\t\t\t\thtml: \"text/html\",\n\t\t\t\txml: \"application/xml, text/xml\",\n\t\t\t\tjson: \"application/json, text/javascript\"\n\t\t\t},\n\t\n\t\t\tcontents: {\n\t\t\t\txml: /\\bxml\\b/,\n\t\t\t\thtml: /\\bhtml/,\n\t\t\t\tjson: /\\bjson\\b/\n\t\t\t},\n\t\n\t\t\tresponseFields: {\n\t\t\t\txml: \"responseXML\",\n\t\t\t\ttext: \"responseText\",\n\t\t\t\tjson: \"responseJSON\"\n\t\t\t},\n\t\n\t\t\t// Data converters\n\t\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\t\tconverters: {\n\t\n\t\t\t\t// Convert anything to text\n\t\t\t\t\"* text\": String,\n\t\n\t\t\t\t// Text to html (true = no transformation)\n\t\t\t\t\"text html\": true,\n\t\n\t\t\t\t// Evaluate text as a json expression\n\t\t\t\t\"text json\": jQuery.parseJSON,\n\t\n\t\t\t\t// Parse text as xml\n\t\t\t\t\"text xml\": jQuery.parseXML\n\t\t\t},\n\t\n\t\t\t// For options that shouldn't be deep extended:\n\t\t\t// you can add your own custom options here if\n\t\t\t// and when you create one that shouldn't be\n\t\t\t// deep extended (see ajaxExtend)\n\t\t\tflatOptions: {\n\t\t\t\turl: true,\n\t\t\t\tcontext: true\n\t\t\t}\n\t\t},\n\t\n\t\t// Creates a full fledged settings object into target\n\t\t// with both ajaxSettings and settings fields.\n\t\t// If target is omitted, writes into ajaxSettings.\n\t\tajaxSetup: function( target, settings ) {\n\t\t\treturn settings ?\n\t\n\t\t\t\t// Building a settings object\n\t\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\t\n\t\t\t\t// Extending ajaxSettings\n\t\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t\t},\n\t\n\t\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\t\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\t\n\t\t// Main method\n\t\tajax: function( url, options ) {\n\t\n\t\t\t// If url is an object, simulate pre-1.5 signature\n\t\t\tif ( typeof url === \"object\" ) {\n\t\t\t\toptions = url;\n\t\t\t\turl = undefined;\n\t\t\t}\n\t\n\t\t\t// Force options to be an object\n\t\t\toptions = options || {};\n\t\n\t\t\tvar transport,\n\t\n\t\t\t\t// URL without anti-cache param\n\t\t\t\tcacheURL,\n\t\n\t\t\t\t// Response headers\n\t\t\t\tresponseHeadersString,\n\t\t\t\tresponseHeaders,\n\t\n\t\t\t\t// timeout handle\n\t\t\t\ttimeoutTimer,\n\t\n\t\t\t\t// Url cleanup var\n\t\t\t\turlAnchor,\n\t\n\t\t\t\t// To know if global events are to be dispatched\n\t\t\t\tfireGlobals,\n\t\n\t\t\t\t// Loop variable\n\t\t\t\ti,\n\t\n\t\t\t\t// Create the final options object\n\t\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\n\t\t\t\t// Callbacks context\n\t\t\t\tcallbackContext = s.context || s,\n\t\n\t\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\t\tglobalEventContext = s.context &&\n\t\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\t\tjQuery.event,\n\t\n\t\t\t\t// Deferreds\n\t\t\t\tdeferred = jQuery.Deferred(),\n\t\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\t\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode = s.statusCode || {},\n\t\n\t\t\t\t// Headers (they are sent all at once)\n\t\t\t\trequestHeaders = {},\n\t\t\t\trequestHeadersNames = {},\n\t\n\t\t\t\t// The jqXHR state\n\t\t\t\tstate = 0,\n\t\n\t\t\t\t// Default abort message\n\t\t\t\tstrAbort = \"canceled\",\n\t\n\t\t\t\t// Fake xhr\n\t\t\t\tjqXHR = {\n\t\t\t\t\treadyState: 0,\n\t\n\t\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\t\tvar match;\n\t\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Raw string\n\t\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Caches the header\n\t\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Overrides response content-type header\n\t\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Status-dependent callbacks\n\t\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\t\tvar code;\n\t\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\t\tfor ( code in map ) {\n\t\n\t\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Cancel the request\n\t\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t// Attach deferreds\n\t\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\t\tjqXHR.success = jqXHR.done;\n\t\t\tjqXHR.error = jqXHR.fail;\n\t\n\t\t\t// Remove hash character (#7531: and string promotion)\n\t\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t\t// We also use the url parameter if available\n\t\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\t\n\t\t\t// Alias method option to type as per ticket #12004\n\t\t\ts.type = options.method || options.type || s.method || s.type;\n\t\n\t\t\t// Extract dataTypes list\n\t\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\t\n\t\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\t\tif ( s.crossDomain == null ) {\n\t\t\t\turlAnchor = document.createElement( \"a\" );\n\t\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\t\ttry {\n\t\t\t\t\turlAnchor.href = s.url;\n\t\n\t\t\t\t\t// Support: IE8-11+\n\t\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\t\ts.crossDomain = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Convert data if not already a string\n\t\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t\t}\n\t\n\t\t\t// Apply prefilters\n\t\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\t\n\t\t\t// If request was aborted inside a prefilter, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\t\n\t\t\t// We can fire global events as of now if asked to\n\t\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\t\tfireGlobals = jQuery.event && s.global;\n\t\n\t\t\t// Watch for a new set of requests\n\t\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t\t}\n\t\n\t\t\t// Uppercase the type\n\t\t\ts.type = s.type.toUpperCase();\n\t\n\t\t\t// Determine if request has content\n\t\t\ts.hasContent = !rnoContent.test( s.type );\n\t\n\t\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t\t// and/or If-None-Match header later on\n\t\t\tcacheURL = s.url;\n\t\n\t\t\t// More options handling for requests with no content\n\t\t\tif ( !s.hasContent ) {\n\t\n\t\t\t\t// If data is available, append data to url\n\t\t\t\tif ( s.data ) {\n\t\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\n\t\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\t\tdelete s.data;\n\t\t\t\t}\n\t\n\t\t\t\t// Add anti-cache in url if needed\n\t\t\t\tif ( s.cache === false ) {\n\t\t\t\t\ts.url = rts.test( cacheURL ) ?\n\t\n\t\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\t\n\t\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\tif ( s.ifModified ) {\n\t\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t\t}\n\t\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Set the correct header, if data is being sent\n\t\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t\t}\n\t\n\t\t\t// Set the Accepts header for the server, depending on the dataType\n\t\t\tjqXHR.setRequestHeader(\n\t\t\t\t\"Accept\",\n\t\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\t\ts.accepts[ \"*\" ]\n\t\t\t);\n\t\n\t\t\t// Check for headers option\n\t\t\tfor ( i in s.headers ) {\n\t\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t\t}\n\t\n\t\t\t// Allow custom headers/mimetypes and early abort\n\t\t\tif ( s.beforeSend &&\n\t\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\n\t\t\t\t// Abort if not done already and return\n\t\t\t\treturn jqXHR.abort();\n\t\t\t}\n\t\n\t\t\t// Aborting is no longer a cancellation\n\t\t\tstrAbort = \"abort\";\n\t\n\t\t\t// Install callbacks on deferreds\n\t\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t\t}\n\t\n\t\t\t// Get transport\n\t\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\t\n\t\t\t// If no transport, we auto-abort\n\t\t\tif ( !transport ) {\n\t\t\t\tdone( -1, \"No Transport\" );\n\t\t\t} else {\n\t\t\t\tjqXHR.readyState = 1;\n\t\n\t\t\t\t// Send global event\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t\t}\n\t\n\t\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\treturn jqXHR;\n\t\t\t\t}\n\t\n\t\t\t\t// Timeout\n\t\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t\t}, s.timeout );\n\t\t\t\t}\n\t\n\t\t\t\ttry {\n\t\t\t\t\tstate = 1;\n\t\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t// Propagate exception as error if not done\n\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\tdone( -1, e );\n\t\n\t\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Callback for when everything is done\n\t\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\t\tstatusText = nativeStatusText;\n\t\n\t\t\t\t// Called once\n\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// State is \"done\" now\n\t\t\t\tstate = 2;\n\t\n\t\t\t\t// Clear timeout if it exists\n\t\t\t\tif ( timeoutTimer ) {\n\t\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t\t}\n\t\n\t\t\t\t// Dereference transport for early garbage collection\n\t\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\t\ttransport = undefined;\n\t\n\t\t\t\t// Cache response headers\n\t\t\t\tresponseHeadersString = headers || \"\";\n\t\n\t\t\t\t// Set readyState\n\t\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\t\n\t\t\t\t// Determine if successful\n\t\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\t\n\t\t\t\t// Get response data\n\t\t\t\tif ( responses ) {\n\t\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t\t}\n\t\n\t\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\t\n\t\t\t\t// If successful, handle type chaining\n\t\t\t\tif ( isSuccess ) {\n\t\n\t\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// if no content\n\t\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\t\tstatusText = \"nocontent\";\n\t\n\t\t\t\t\t// if not modified\n\t\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\t\tstatusText = \"notmodified\";\n\t\n\t\t\t\t\t// If we have data, let's convert it\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\t\terror = response.error;\n\t\t\t\t\t\tisSuccess = !error;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\t\terror = statusText;\n\t\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Set data for the fake xhr object\n\t\t\t\tjqXHR.status = status;\n\t\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\t\n\t\t\t\t// Success/Error\n\t\t\t\tif ( isSuccess ) {\n\t\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tjqXHR.statusCode( statusCode );\n\t\t\t\tstatusCode = undefined;\n\t\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Complete\n\t\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\t\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\n\t\t\t\t\t// Handle the global AJAX counter\n\t\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn jqXHR;\n\t\t},\n\t\n\t\tgetJSON: function( url, data, callback ) {\n\t\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t\t},\n\t\n\t\tgetScript: function( url, callback ) {\n\t\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\t\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\n\t\t\t// Shift arguments if data argument was omitted\n\t\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\t\ttype = type || callback;\n\t\t\t\tcallback = data;\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\n\t\t\t// The url can be an options object (which then must have .url)\n\t\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\t\turl: url,\n\t\t\t\ttype: method,\n\t\t\t\tdataType: type,\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: callback\n\t\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t\t};\n\t} );\n\t\n\t\n\tjQuery._evalUrl = function( url ) {\n\t\treturn jQuery.ajax( {\n\t\t\turl: url,\n\t\n\t\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"script\",\n\t\t\tasync: false,\n\t\t\tglobal: false,\n\t\t\t\"throws\": true\n\t\t} );\n\t};\n\t\n\t\n\tjQuery.fn.extend( {\n\t\twrapAll: function( html ) {\n\t\t\tvar wrap;\n\t\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tif ( this[ 0 ] ) {\n\t\n\t\t\t\t// The elements to wrap the target around\n\t\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\t\n\t\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\twrap.map( function() {\n\t\t\t\t\tvar elem = this;\n\t\n\t\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn elem;\n\t\t\t\t} ).append( this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\twrapInner: function( html ) {\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar self = jQuery( this ),\n\t\t\t\t\tcontents = self.contents();\n\t\n\t\t\t\tif ( contents.length ) {\n\t\t\t\t\tcontents.wrapAll( html );\n\t\n\t\t\t\t} else {\n\t\t\t\t\tself.append( html );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\twrap: function( html ) {\n\t\t\tvar isFunction = jQuery.isFunction( html );\n\t\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t\t} );\n\t\t},\n\t\n\t\tunwrap: function() {\n\t\t\treturn this.parent().each( function() {\n\t\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t\t}\n\t\t\t} ).end();\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.expr.filters.hidden = function( elem ) {\n\t\treturn !jQuery.expr.filters.visible( elem );\n\t};\n\tjQuery.expr.filters.visible = function( elem ) {\n\t\n\t\t// Support: Opera <= 12.12\n\t\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t\t// Use OR instead of AND as the element is not visible if either is true\n\t\t// See tickets #10406 and #13132\n\t\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n\t};\n\t\n\t\n\t\n\t\n\tvar r20 = /%20/g,\n\t\trbracket = /\\[\\]$/,\n\t\trCRLF = /\\r?\\n/g,\n\t\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\t\n\tfunction buildParams( prefix, obj, traditional, add ) {\n\t\tvar name;\n\t\n\t\tif ( jQuery.isArray( obj ) ) {\n\t\n\t\t\t// Serialize array item.\n\t\t\tjQuery.each( obj, function( i, v ) {\n\t\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\n\t\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\t\tadd( prefix, v );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\t\tbuildParams(\n\t\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\t\tv,\n\t\t\t\t\t\ttraditional,\n\t\t\t\t\t\tadd\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\n\t\t\t// Serialize object item.\n\t\t\tfor ( name in obj ) {\n\t\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t\t}\n\t\n\t\t} else {\n\t\n\t\t\t// Serialize scalar item.\n\t\t\tadd( prefix, obj );\n\t\t}\n\t}\n\t\n\t// Serialize an array of form elements or a set of\n\t// key/values into a query string\n\tjQuery.param = function( a, traditional ) {\n\t\tvar prefix,\n\t\t\ts = [],\n\t\t\tadd = function( key, value ) {\n\t\n\t\t\t\t// If value is a function, invoke it and return its value\n\t\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t\t};\n\t\n\t\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\t\tif ( traditional === undefined ) {\n\t\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t\t}\n\t\n\t\t// If an array was passed in, assume that it is an array of form elements.\n\t\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\n\t\t\t// Serialize the form elements\n\t\t\tjQuery.each( a, function() {\n\t\t\t\tadd( this.name, this.value );\n\t\t\t} );\n\t\n\t\t} else {\n\t\n\t\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t\t// did it), otherwise encode params recursively.\n\t\t\tfor ( prefix in a ) {\n\t\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the resulting serialization\n\t\treturn s.join( \"&\" ).replace( r20, \"+\" );\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tserialize: function() {\n\t\t\treturn jQuery.param( this.serializeArray() );\n\t\t},\n\t\tserializeArray: function() {\n\t\t\treturn this.map( function() {\n\t\n\t\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t\t} )\n\t\t\t.filter( function() {\n\t\t\t\tvar type = this.type;\n\t\n\t\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t\t} )\n\t\t\t.map( function( i, elem ) {\n\t\t\t\tvar val = jQuery( this ).val();\n\t\n\t\t\t\treturn val == null ?\n\t\t\t\t\tnull :\n\t\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t} ).get();\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.ajaxSettings.xhr = function() {\n\t\ttry {\n\t\t\treturn new window.XMLHttpRequest();\n\t\t} catch ( e ) {}\n\t};\n\t\n\tvar xhrSuccessStatus = {\n\t\n\t\t\t// File protocol always yields status code 0, assume 200\n\t\t\t0: 200,\n\t\n\t\t\t// Support: IE9\n\t\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t\t1223: 204\n\t\t},\n\t\txhrSupported = jQuery.ajaxSettings.xhr();\n\t\n\tsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n\tsupport.ajax = xhrSupported = !!xhrSupported;\n\t\n\tjQuery.ajaxTransport( function( options ) {\n\t\tvar callback, errorCallback;\n\t\n\t\t// Cross domain only allowed if supported through XMLHttpRequest\n\t\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\t\treturn {\n\t\t\t\tsend: function( headers, complete ) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\txhr = options.xhr();\n\t\n\t\t\t\t\txhr.open(\n\t\t\t\t\t\toptions.type,\n\t\t\t\t\t\toptions.url,\n\t\t\t\t\t\toptions.async,\n\t\t\t\t\t\toptions.username,\n\t\t\t\t\t\toptions.password\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Apply custom fields if provided\n\t\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Override mime type if needed\n\t\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Set headers\n\t\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Callback\n\t\t\t\t\tcallback = function( type ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\t\n\t\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcomplete(\n\t\n\t\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// Listen to events\n\t\t\t\t\txhr.onload = callback();\n\t\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\t\n\t\t\t\t\t// Support: IE9\n\t\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t\t// to handle uncaught aborts\n\t\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txhr.onreadystatechange = function() {\n\t\n\t\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\t\n\t\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Create the abort callback\n\t\t\t\t\tcallback = callback( \"abort\" );\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Install script dataType\n\tjQuery.ajaxSetup( {\n\t\taccepts: {\n\t\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t\t},\n\t\tcontents: {\n\t\t\tscript: /\\b(?:java|ecma)script\\b/\n\t\t},\n\t\tconverters: {\n\t\t\t\"text script\": function( text ) {\n\t\t\t\tjQuery.globalEval( text );\n\t\t\t\treturn text;\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Handle cache's special case and crossDomain\n\tjQuery.ajaxPrefilter( \"script\", function( s ) {\n\t\tif ( s.cache === undefined ) {\n\t\t\ts.cache = false;\n\t\t}\n\t\tif ( s.crossDomain ) {\n\t\t\ts.type = \"GET\";\n\t\t}\n\t} );\n\t\n\t// Bind script tag hack transport\n\tjQuery.ajaxTransport( \"script\", function( s ) {\n\t\n\t\t// This transport only deals with cross domain requests\n\t\tif ( s.crossDomain ) {\n\t\t\tvar script, callback;\n\t\t\treturn {\n\t\t\t\tsend: function( _, complete ) {\n\t\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\t\tsrc: s.url\n\t\t\t\t\t} ).on(\n\t\t\t\t\t\t\"load error\",\n\t\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t\t},\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tvar oldCallbacks = [],\n\t\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\t\n\t// Default jsonp settings\n\tjQuery.ajaxSetup( {\n\t\tjsonp: \"callback\",\n\t\tjsonpCallback: function() {\n\t\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\t\tthis[ callback ] = true;\n\t\t\treturn callback;\n\t\t}\n\t} );\n\t\n\t// Detect, normalize options and install callbacks for jsonp requests\n\tjQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\t\n\t\tvar callbackName, overwritten, responseContainer,\n\t\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\t\"url\" :\n\t\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t\t);\n\t\n\t\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\t\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\t\n\t\t\t// Get callback name, remembering preexisting value associated with it\n\t\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\t\ts.jsonpCallback() :\n\t\t\t\ts.jsonpCallback;\n\t\n\t\t\t// Insert callback into url or form data\n\t\t\tif ( jsonProp ) {\n\t\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t\t} else if ( s.jsonp !== false ) {\n\t\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t\t}\n\t\n\t\t\t// Use data converter to retrieve json after script execution\n\t\t\ts.converters[ \"script json\" ] = function() {\n\t\t\t\tif ( !responseContainer ) {\n\t\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t\t}\n\t\t\t\treturn responseContainer[ 0 ];\n\t\t\t};\n\t\n\t\t\t// Force json dataType\n\t\t\ts.dataTypes[ 0 ] = \"json\";\n\t\n\t\t\t// Install callback\n\t\t\toverwritten = window[ callbackName ];\n\t\t\twindow[ callbackName ] = function() {\n\t\t\t\tresponseContainer = arguments;\n\t\t\t};\n\t\n\t\t\t// Clean-up function (fires after converters)\n\t\t\tjqXHR.always( function() {\n\t\n\t\t\t\t// If previous value didn't exist - remove it\n\t\t\t\tif ( overwritten === undefined ) {\n\t\t\t\t\tjQuery( window ).removeProp( callbackName );\n\t\n\t\t\t\t// Otherwise restore preexisting value\n\t\t\t\t} else {\n\t\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t\t}\n\t\n\t\t\t\t// Save back as free\n\t\t\t\tif ( s[ callbackName ] ) {\n\t\n\t\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\t\n\t\t\t\t\t// Save the callback name for future use\n\t\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t\t}\n\t\n\t\t\t\t// Call if it was a function and we have a response\n\t\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\tresponseContainer = overwritten = undefined;\n\t\t\t} );\n\t\n\t\t\t// Delegate to script\n\t\t\treturn \"script\";\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Argument \"data\" should be string of html\n\t// context (optional): If specified, the fragment will be created in this context,\n\t// defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tjQuery.parseHTML = function( data, context, keepScripts ) {\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\tcontext = context || document;\n\t\n\t\tvar parsed = rsingleTag.exec( data ),\n\t\t\tscripts = !keepScripts && [];\n\t\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t\t}\n\t\n\t\tparsed = buildFragment( [ data ], context, scripts );\n\t\n\t\tif ( scripts && scripts.length ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\t\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t};\n\t\n\t\n\t// Keep a copy of the old load method\n\tvar _load = jQuery.fn.load;\n\t\n\t/**\n\t * Load a url into a page\n\t */\n\tjQuery.fn.load = function( url, params, callback ) {\n\t\tif ( typeof url !== \"string\" && _load ) {\n\t\t\treturn _load.apply( this, arguments );\n\t\t}\n\t\n\t\tvar selector, type, response,\n\t\t\tself = this,\n\t\t\toff = url.indexOf( \" \" );\n\t\n\t\tif ( off > -1 ) {\n\t\t\tselector = jQuery.trim( url.slice( off ) );\n\t\t\turl = url.slice( 0, off );\n\t\t}\n\t\n\t\t// If it's a function\n\t\tif ( jQuery.isFunction( params ) ) {\n\t\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = undefined;\n\t\n\t\t// Otherwise, build a param string\n\t\t} else if ( params && typeof params === \"object\" ) {\n\t\t\ttype = \"POST\";\n\t\t}\n\t\n\t\t// If we have elements to modify, make the request\n\t\tif ( self.length > 0 ) {\n\t\t\tjQuery.ajax( {\n\t\t\t\turl: url,\n\t\n\t\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t\t// Make value of this field explicit since\n\t\t\t\t// user can override it through ajaxSetup method\n\t\t\t\ttype: type || \"GET\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tdata: params\n\t\t\t} ).done( function( responseText ) {\n\t\n\t\t\t\t// Save response for use in complete callback\n\t\t\t\tresponse = arguments;\n\t\n\t\t\t\tself.html( selector ?\n\t\n\t\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\t\n\t\t\t\t\t// Otherwise use the full result\n\t\t\t\t\tresponseText );\n\t\n\t\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t\t// but they are ignored because response was set above.\n\t\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\t\tself.each( function() {\n\t\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t\n\t\treturn this;\n\t};\n\t\n\t\n\t\n\t\n\t// Attach a bunch of functions for handling common AJAX events\n\tjQuery.each( [\n\t\t\"ajaxStart\",\n\t\t\"ajaxStop\",\n\t\t\"ajaxComplete\",\n\t\t\"ajaxError\",\n\t\t\"ajaxSuccess\",\n\t\t\"ajaxSend\"\n\t], function( i, type ) {\n\t\tjQuery.fn[ type ] = function( fn ) {\n\t\t\treturn this.on( type, fn );\n\t\t};\n\t} );\n\t\n\t\n\t\n\t\n\tjQuery.expr.filters.animated = function( elem ) {\n\t\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t} ).length;\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Gets a window from an element\n\t */\n\tfunction getWindow( elem ) {\n\t\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n\t}\n\t\n\tjQuery.offset = {\n\t\tsetOffset: function( elem, options, i ) {\n\t\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\t\tcurElem = jQuery( elem ),\n\t\t\t\tprops = {};\n\t\n\t\t\t// Set position first, in-case top/left are set even on static elem\n\t\t\tif ( position === \"static\" ) {\n\t\t\t\telem.style.position = \"relative\";\n\t\t\t}\n\t\n\t\t\tcurOffset = curElem.offset();\n\t\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\t\n\t\t\t// Need to be able to calculate position if either\n\t\t\t// top or left is auto and position is either absolute or fixed\n\t\t\tif ( calculatePosition ) {\n\t\t\t\tcurPosition = curElem.position();\n\t\t\t\tcurTop = curPosition.top;\n\t\t\t\tcurLeft = curPosition.left;\n\t\n\t\t\t} else {\n\t\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t\t}\n\t\n\t\t\tif ( jQuery.isFunction( options ) ) {\n\t\n\t\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t\t}\n\t\n\t\t\tif ( options.top != null ) {\n\t\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t\t}\n\t\t\tif ( options.left != null ) {\n\t\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t\t}\n\t\n\t\t\tif ( \"using\" in options ) {\n\t\t\t\toptions.using.call( elem, props );\n\t\n\t\t\t} else {\n\t\t\t\tcurElem.css( props );\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\toffset: function( options ) {\n\t\t\tif ( arguments.length ) {\n\t\t\t\treturn options === undefined ?\n\t\t\t\t\tthis :\n\t\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tvar docElem, win,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tbox = { top: 0, left: 0 },\n\t\t\t\tdoc = elem && elem.ownerDocument;\n\t\n\t\t\tif ( !doc ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tdocElem = doc.documentElement;\n\t\n\t\t\t// Make sure it's not a disconnected DOM node\n\t\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\t\treturn box;\n\t\t\t}\n\t\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t\twin = getWindow( doc );\n\t\t\treturn {\n\t\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t\t};\n\t\t},\n\t\n\t\tposition: function() {\n\t\t\tif ( !this[ 0 ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar offsetParent, offset,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tparentOffset = { top: 0, left: 0 };\n\t\n\t\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t\t// because it is its only offset parent\n\t\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\n\t\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\t\toffset = elem.getBoundingClientRect();\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// Get *real* offsetParent\n\t\t\t\toffsetParent = this.offsetParent();\n\t\n\t\t\t\t// Get correct offsets\n\t\t\t\toffset = this.offset();\n\t\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t\t}\n\t\n\t\t\t\t// Add offsetParent borders\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t\t}\n\t\n\t\t\t// Subtract parent offsets and element margins\n\t\t\treturn {\n\t\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t\t};\n\t\t},\n\t\n\t\t// This method will return documentElement in the following cases:\n\t\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t\t//    documentElement of the parent window\n\t\t// 2) For the hidden or detached element\n\t\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t\t//\n\t\t// but those exceptions were never presented as a real life use-cases\n\t\t// and might be considered as more preferable results.\n\t\t//\n\t\t// This logic, however, is not guaranteed and can change at any point in the future\n\t\toffsetParent: function() {\n\t\t\treturn this.map( function() {\n\t\t\t\tvar offsetParent = this.offsetParent;\n\t\n\t\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t\t}\n\t\n\t\t\t\treturn offsetParent || documentElement;\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t// Create scrollLeft and scrollTop methods\n\tjQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\t\tvar top = \"pageYOffset\" === prop;\n\t\n\t\tjQuery.fn[ method ] = function( val ) {\n\t\t\treturn access( this, function( elem, method, val ) {\n\t\t\t\tvar win = getWindow( elem );\n\t\n\t\t\t\tif ( val === undefined ) {\n\t\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t\t}\n\t\n\t\t\t\tif ( win ) {\n\t\t\t\t\twin.scrollTo(\n\t\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t\t);\n\t\n\t\t\t\t} else {\n\t\t\t\t\telem[ method ] = val;\n\t\t\t\t}\n\t\t\t}, method, val, arguments.length );\n\t\t};\n\t} );\n\t\n\t// Support: Safari<7-8+, Chrome<37-44+\n\t// Add the top/left cssHooks using jQuery.fn.position\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n\t// getComputedStyle returns percent when specified for top/left/bottom/right;\n\t// rather than make the css module depend on the offset module, just check for it here\n\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\t\tfunction( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\n\t\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\tcomputed;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t} );\n\t\n\t\n\t// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\tjQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\t\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\t\tfunction( defaultExtra, funcName ) {\n\t\n\t\t\t// Margin is only for outerHeight, outerWidth\n\t\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\t\n\t\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\t\tvar doc;\n\t\n\t\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\n\t\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Get document width or height\n\t\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\t\tdoc = elem.documentElement;\n\t\n\t\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t\t// whichever is greatest\n\t\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn value === undefined ?\n\t\n\t\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\t\n\t\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t\t};\n\t\t} );\n\t} );\n\t\n\t\n\tjQuery.fn.extend( {\n\t\n\t\tbind: function( types, data, fn ) {\n\t\t\treturn this.on( types, null, data, fn );\n\t\t},\n\t\tunbind: function( types, fn ) {\n\t\t\treturn this.off( types, null, fn );\n\t\t},\n\t\n\t\tdelegate: function( selector, types, data, fn ) {\n\t\t\treturn this.on( types, selector, data, fn );\n\t\t},\n\t\tundelegate: function( selector, types, fn ) {\n\t\n\t\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\t\treturn arguments.length === 1 ?\n\t\t\t\tthis.off( selector, \"**\" ) :\n\t\t\t\tthis.off( types, selector || \"**\", fn );\n\t\t},\n\t\tsize: function() {\n\t\t\treturn this.length;\n\t\t}\n\t} );\n\t\n\tjQuery.fn.andSelf = jQuery.fn.addBack;\n\t\n\t\n\t\n\t\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\t\n\t// Note that for maximum portability, libraries that are not jQuery should\n\t// declare themselves as anonymous modules, and avoid setting a global if an\n\t// AMD loader is present. jQuery is a special case. For more information, see\n\t// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\t\n\tif ( true ) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn jQuery;\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t\n\t\n\t\n\tvar\n\t\n\t\t// Map over jQuery in case of overwrite\n\t\t_jQuery = window.jQuery,\n\t\n\t\t// Map over the $ in case of overwrite\n\t\t_$ = window.$;\n\t\n\tjQuery.noConflict = function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\t\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\t\n\t\treturn jQuery;\n\t};\n\t\n\t// Expose jQuery and $ identifiers, even in AMD\n\t// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n\t// and CommonJS for browser emulators (#13566)\n\tif ( !noGlobal ) {\n\t\twindow.jQuery = window.$ = jQuery;\n\t}\n\t\n\treturn jQuery;\n\t}));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (factory) {\r\n\t    // Module systems magic dance.\r\n\t\r\n\t    if (true) {\r\n\t        // CommonJS or Node: hard-coded dependency on \"knockout\"\r\n\t        factory(__webpack_require__(1), exports);\r\n\t    } else if (typeof define === \"function\" && define[\"amd\"]) {\r\n\t        // AMD anonymous module with hard-coded dependency on \"knockout\"\r\n\t        define([\"knockout\", \"exports\"], factory);\r\n\t    } else {\r\n\t        // <script> tag: use the global `ko` object, attaching a `mapping` property\r\n\t        factory(ko, ko.mapping = {});\r\n\t    }\r\n\t}(function (ko, exports) {\r\n\t    var DEBUG = true;\r\n\t    var mappingProperty = \"__ko_mapping__\";\r\n\t    var realKoDependentObservable = ko.dependentObservable;\r\n\t    var mappingNesting = 0;\r\n\t    var dependentObservables;\r\n\t    var visitedObjects;\r\n\t    var recognizedRootProperties = [\"create\", \"update\", \"key\", \"arrayChanged\"];\r\n\t    var emptyReturn = {};\r\n\t\r\n\t    var _defaultOptions = {\r\n\t        include: [\"_destroy\"],\r\n\t        ignore: [],\r\n\t        copy: [],\r\n\t        observe: []\r\n\t    };\r\n\t    var defaultOptions = _defaultOptions;\r\n\t\r\n\t    function unionArrays() {\r\n\t        var args = arguments,\r\n\t        l = args.length,\r\n\t        obj = {},\r\n\t        res = [],\r\n\t        i, j, k;\r\n\t\r\n\t        while (l--) {\r\n\t            k = args[l];\r\n\t            i = k.length;\r\n\t\r\n\t            while (i--) {\r\n\t                j = k[i];\r\n\t                if (!obj[j]) {\r\n\t                    obj[j] = 1;\r\n\t                    res.push(j);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return res;\r\n\t    }\r\n\t\r\n\t    function extendObject(destination, source) {\r\n\t        var destType;\r\n\t\r\n\t        for (var key in source) {\r\n\t            if (source.hasOwnProperty(key) && source[key]) {\r\n\t                destType = exports.getType(destination[key]);\r\n\t                if (key && destination[key] && destType !== \"array\" && destType !== \"string\") {\r\n\t                    extendObject(destination[key], source[key]);\r\n\t                } else {\r\n\t                    var bothArrays = exports.getType(destination[key]) === \"array\" && exports.getType(source[key]) === \"array\";\r\n\t                    if (bothArrays) {\r\n\t                        destination[key] = unionArrays(destination[key], source[key]);\r\n\t                    } else {\r\n\t                        destination[key] = source[key];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function merge(obj1, obj2) {\r\n\t        var merged = {};\r\n\t        extendObject(merged, obj1);\r\n\t        extendObject(merged, obj2);\r\n\t\r\n\t        return merged;\r\n\t    }\r\n\t\r\n\t    exports.isMapped = function (viewModel) {\r\n\t        var unwrapped = ko.utils.unwrapObservable(viewModel);\r\n\t        return unwrapped && unwrapped[mappingProperty];\r\n\t    };\r\n\t\r\n\t    exports.fromJS = function (jsObject /*, inputOptions, target*/ ) {\r\n\t        if (!arguments.length) throw new Error(\"When calling ko.mapping.fromJS, pass the object you want to convert.\");\r\n\t\r\n\t        try {\r\n\t            if (!mappingNesting++) {\r\n\t                dependentObservables = [];\r\n\t                visitedObjects = new objectLookup();\r\n\t            }\r\n\t\r\n\t            var options;\r\n\t            var target;\r\n\t\r\n\t            if (arguments.length == 2) {\r\n\t                if (arguments[1][mappingProperty]) {\r\n\t                    target = arguments[1];\r\n\t                } else {\r\n\t                    options = arguments[1];\r\n\t                }\r\n\t            }\r\n\t            if (arguments.length == 3) {\r\n\t                options = arguments[1];\r\n\t                target = arguments[2];\r\n\t            }\r\n\t\r\n\t            if (target) {\r\n\t                options = merge(options, target[mappingProperty]);\r\n\t            }\r\n\t            options = fillOptions(options);\r\n\t\r\n\t            var result = updateViewModel(target, jsObject, options);\r\n\t            if (target) {\r\n\t                result = target;\r\n\t            }\r\n\t\r\n\t            // Evaluate any dependent observables that were proxied.\r\n\t            // Do this after the model's observables have been created\r\n\t            if (!--mappingNesting) {\r\n\t                while (dependentObservables.length) {\r\n\t                    var DO = dependentObservables.pop();\r\n\t                    if (DO) {\r\n\t                        DO();\r\n\t\r\n\t                        // Move this magic property to the underlying dependent observable\r\n\t                        DO.__DO[\"throttleEvaluation\"] = DO[\"throttleEvaluation\"];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            // Save any new mapping options in the view model, so that updateFromJS can use them later.\r\n\t            result[mappingProperty] = merge(result[mappingProperty], options);\r\n\t\r\n\t            return result;\r\n\t        } catch(e) {\r\n\t            mappingNesting = 0;\r\n\t            throw e;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    exports.fromJSON = function (jsonString /*, options, target*/ ) {\r\n\t        var parsed = ko.utils.parseJson(jsonString);\r\n\t        var argArray = Array.prototype.slice.call(arguments);\r\n\t        argArray[0] = parsed;\r\n\t        return exports.fromJS.apply(this, argArray);\r\n\t    };\r\n\t\r\n\t    exports.updateFromJS = function (viewModel) {\r\n\t        throw new Error(\"ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!\");\r\n\t    };\r\n\t\r\n\t    exports.updateFromJSON = function (viewModel) {\r\n\t        throw new Error(\"ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!\");\r\n\t    };\r\n\t\r\n\t    exports.toJS = function (rootObject, options) {\r\n\t        if (!defaultOptions) exports.resetDefaultOptions();\r\n\t\r\n\t        if (!arguments.length) throw new Error(\"When calling ko.mapping.toJS, pass the object you want to convert.\");\r\n\t        if (exports.getType(defaultOptions.ignore) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().ignore should be an array.\");\r\n\t        if (exports.getType(defaultOptions.include) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().include should be an array.\");\r\n\t        if (exports.getType(defaultOptions.copy) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().copy should be an array.\");\r\n\t\r\n\t        // Merge in the options used in fromJS\r\n\t        options = fillOptions(options, rootObject[mappingProperty]);\r\n\t\r\n\t        // We just unwrap everything at every level in the object graph\r\n\t        return exports.visitModel(rootObject, function (x) {\r\n\t            return ko.utils.unwrapObservable(x);\r\n\t        }, options);\r\n\t    };\r\n\t\r\n\t    exports.toJSON = function (rootObject, options) {\r\n\t        var plainJavaScriptObject = exports.toJS(rootObject, options);\r\n\t        return ko.utils.stringifyJson(plainJavaScriptObject);\r\n\t    };\r\n\t\r\n\t    exports.defaultOptions = function () {\r\n\t        if (arguments.length > 0) {\r\n\t            defaultOptions = arguments[0];\r\n\t        } else {\r\n\t            return defaultOptions;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    exports.resetDefaultOptions = function () {\r\n\t        defaultOptions = {\r\n\t            include: _defaultOptions.include.slice(0),\r\n\t            ignore: _defaultOptions.ignore.slice(0),\r\n\t            copy: _defaultOptions.copy.slice(0),\r\n\t            observe: _defaultOptions.observe.slice(0)\r\n\t        };\r\n\t    };\r\n\t\r\n\t    exports.getType = function(x) {\r\n\t        if ((x) && (typeof (x) === \"object\")) {\r\n\t            if (x.constructor === Date) return \"date\";\r\n\t            if (x.constructor === Array) return \"array\";\r\n\t        }\r\n\t        return typeof x;\r\n\t    };\r\n\t\r\n\t    function fillOptions(rawOptions, otherOptions) {\r\n\t        var options = merge({}, rawOptions);\r\n\t\r\n\t        // Move recognized root-level properties into a root namespace\r\n\t        for (var i = recognizedRootProperties.length - 1; i >= 0; i--) {\r\n\t            var property = recognizedRootProperties[i];\r\n\t\r\n\t            // Carry on, unless this property is present\r\n\t            if (!options[property]) continue;\r\n\t\r\n\t            // Move the property into the root namespace\r\n\t            if (!(options[\"\"] instanceof Object)) options[\"\"] = {};\r\n\t            options[\"\"][property] = options[property];\r\n\t            delete options[property];\r\n\t        }\r\n\t\r\n\t        if (otherOptions) {\r\n\t            options.ignore = mergeArrays(otherOptions.ignore, options.ignore);\r\n\t            options.include = mergeArrays(otherOptions.include, options.include);\r\n\t            options.copy = mergeArrays(otherOptions.copy, options.copy);\r\n\t            options.observe = mergeArrays(otherOptions.observe, options.observe);\r\n\t        }\r\n\t        options.ignore = mergeArrays(options.ignore, defaultOptions.ignore);\r\n\t        options.include = mergeArrays(options.include, defaultOptions.include);\r\n\t        options.copy = mergeArrays(options.copy, defaultOptions.copy);\r\n\t        options.observe = mergeArrays(options.observe, defaultOptions.observe);\r\n\t\r\n\t        options.mappedProperties = options.mappedProperties || {};\r\n\t        options.copiedProperties = options.copiedProperties || {};\r\n\t        return options;\r\n\t    }\r\n\t\r\n\t    function mergeArrays(a, b) {\r\n\t        if (exports.getType(a) !== \"array\") {\r\n\t            if (exports.getType(a) === \"undefined\") a = [];\r\n\t            else a = [a];\r\n\t        }\r\n\t        if (exports.getType(b) !== \"array\") {\r\n\t            if (exports.getType(b) === \"undefined\") b = [];\r\n\t            else b = [b];\r\n\t        }\r\n\t\r\n\t        return ko.utils.arrayGetDistinctValues(a.concat(b));\r\n\t    }\r\n\t\r\n\t    // When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.\r\n\t    // The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.\r\n\t    function withProxyDependentObservable(dependentObservables, callback) {\r\n\t        var localDO = ko.dependentObservable;\r\n\t        ko.dependentObservable = function (read, owner, options) {\r\n\t            options = options || {};\r\n\t\r\n\t            if (read && typeof read == \"object\") { // mirrors condition in knockout implementation of DO's\r\n\t                options = read;\r\n\t            }\r\n\t\r\n\t            var realDeferEvaluation = options.deferEvaluation;\r\n\t\r\n\t            var isRemoved = false;\r\n\t\r\n\t            // We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has\r\n\t            // completed if the user already evaluated the DO themselves in the meantime.\r\n\t            var wrap = function (DO) {\r\n\t                // Temporarily revert ko.dependentObservable, since it is used in ko.isWriteableObservable\r\n\t                var tmp = ko.dependentObservable;\r\n\t                ko.dependentObservable = realKoDependentObservable;\r\n\t                var isWriteable = ko.isWriteableObservable(DO);\r\n\t                ko.dependentObservable = tmp;\r\n\t\r\n\t                var wrapped = realKoDependentObservable({\r\n\t                    read: function () {\r\n\t                        if (!isRemoved) {\r\n\t                            ko.utils.arrayRemoveItem(dependentObservables, DO);\r\n\t                            isRemoved = true;\r\n\t                        }\r\n\t                        return DO.apply(DO, arguments);\r\n\t                    },\r\n\t                    write: isWriteable && function (val) {\r\n\t                        return DO(val);\r\n\t                    },\r\n\t                    deferEvaluation: true\r\n\t                });\r\n\t                if (DEBUG) wrapped._wrapper = true;\r\n\t                wrapped.__DO = DO;\r\n\t                return wrapped;\r\n\t            };\r\n\t\r\n\t            options.deferEvaluation = true; // will either set for just options, or both read/options.\r\n\t            var realDependentObservable = new realKoDependentObservable(read, owner, options);\r\n\t\r\n\t            if (!realDeferEvaluation) {\r\n\t                realDependentObservable = wrap(realDependentObservable);\r\n\t                dependentObservables.push(realDependentObservable);\r\n\t            }\r\n\t\r\n\t            return realDependentObservable;\r\n\t        };\r\n\t        ko.dependentObservable.fn = realKoDependentObservable.fn;\r\n\t        ko.computed = ko.dependentObservable;\r\n\t        var result = callback();\r\n\t        ko.dependentObservable = localDO;\r\n\t        ko.computed = ko.dependentObservable;\r\n\t        return result;\r\n\t    }\r\n\t\r\n\t    function updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName, mappedParent) {\r\n\t        var isArray = exports.getType(ko.utils.unwrapObservable(rootObject)) === \"array\";\r\n\t\r\n\t        parentPropertyName = parentPropertyName || \"\";\r\n\t\r\n\t        // If this object was already mapped previously, take the options from there and merge them with our existing ones.\r\n\t        if (exports.isMapped(mappedRootObject)) {\r\n\t            var previousMapping = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];\r\n\t            options = merge(previousMapping, options);\r\n\t        }\r\n\t\r\n\t        var callbackParams = {\r\n\t            data: rootObject,\r\n\t            parent: mappedParent || parent\r\n\t        };\r\n\t\r\n\t        var hasCreateCallback = function () {\r\n\t            return options[parentName] && options[parentName].create instanceof Function;\r\n\t        };\r\n\t\r\n\t        var createCallback = function (data) {\r\n\t            return withProxyDependentObservable(dependentObservables, function () {\r\n\t\r\n\t                if (ko.utils.unwrapObservable(parent) instanceof Array) {\r\n\t                    return options[parentName].create({\r\n\t                        data: data || callbackParams.data,\r\n\t                        parent: callbackParams.parent,\r\n\t                        skip: emptyReturn\r\n\t                    });\r\n\t                } else {\r\n\t                    return options[parentName].create({\r\n\t                        data: data || callbackParams.data,\r\n\t                        parent: callbackParams.parent\r\n\t                    });\r\n\t                }\r\n\t            });\r\n\t        };\r\n\t\r\n\t        var hasUpdateCallback = function () {\r\n\t            return options[parentName] && options[parentName].update instanceof Function;\r\n\t        };\r\n\t\r\n\t        var updateCallback = function (obj, data) {\r\n\t            var params = {\r\n\t                data: data || callbackParams.data,\r\n\t                parent: callbackParams.parent,\r\n\t                target: ko.utils.unwrapObservable(obj)\r\n\t            };\r\n\t\r\n\t            if (ko.isWriteableObservable(obj)) {\r\n\t                params.observable = obj;\r\n\t            }\r\n\t\r\n\t            return options[parentName].update(params);\r\n\t        };\r\n\t\r\n\t        var alreadyMapped = visitedObjects.get(rootObject);\r\n\t        if (alreadyMapped) {\r\n\t            return alreadyMapped;\r\n\t        }\r\n\t\r\n\t        parentName = parentName || \"\";\r\n\t\r\n\t        if (!isArray) {\r\n\t            // For atomic types, do a direct update on the observable\r\n\t            if (!canHaveProperties(rootObject)) {\r\n\t                switch (exports.getType(rootObject)) {\r\n\t                case \"function\":\r\n\t                    if (hasUpdateCallback()) {\r\n\t                        if (ko.isWriteableObservable(rootObject)) {\r\n\t                            rootObject(updateCallback(rootObject));\r\n\t                            mappedRootObject = rootObject;\r\n\t                        } else {\r\n\t                            mappedRootObject = updateCallback(rootObject);\r\n\t                        }\r\n\t                    } else {\r\n\t                        mappedRootObject = rootObject;\r\n\t                    }\r\n\t                    break;\r\n\t                default:\r\n\t                    var valueToWrite;\r\n\t                    if (ko.isWriteableObservable(mappedRootObject)) {\r\n\t                        if (hasUpdateCallback()) {\r\n\t                            valueToWrite = updateCallback(mappedRootObject);\r\n\t                            mappedRootObject(valueToWrite);\r\n\t                            return valueToWrite;\r\n\t                        } else {\r\n\t                            valueToWrite = ko.utils.unwrapObservable(rootObject);\r\n\t                            mappedRootObject(valueToWrite);\r\n\t                            return valueToWrite;\r\n\t                        }\r\n\t                    } else {\r\n\t                        var hasCreateOrUpdateCallback = hasCreateCallback() || hasUpdateCallback();\r\n\t\r\n\t                        if (hasCreateCallback()) {\r\n\t                            mappedRootObject = createCallback();\r\n\t                        } else {\r\n\t                            mappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));\r\n\t                        }\r\n\t\r\n\t                        if (hasUpdateCallback()) {\r\n\t                            mappedRootObject(updateCallback(mappedRootObject));\r\n\t                        }\r\n\t\r\n\t                        if (hasCreateOrUpdateCallback) return mappedRootObject;\r\n\t                    }\r\n\t                }\r\n\t\r\n\t            } else {\r\n\t                mappedRootObject = ko.utils.unwrapObservable(mappedRootObject);\r\n\t                if (!mappedRootObject) {\r\n\t                    if (hasCreateCallback()) {\r\n\t                        var result = createCallback();\r\n\t\r\n\t                        if (hasUpdateCallback()) {\r\n\t                            result = updateCallback(result);\r\n\t                        }\r\n\t\r\n\t                        return result;\r\n\t                    } else {\r\n\t                        if (hasUpdateCallback()) {\r\n\t                            return updateCallback(result);\r\n\t                        }\r\n\t\r\n\t                        mappedRootObject = {};\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                if (hasUpdateCallback()) {\r\n\t                    mappedRootObject = updateCallback(mappedRootObject);\r\n\t                }\r\n\t\r\n\t                visitedObjects.save(rootObject, mappedRootObject);\r\n\t                if (hasUpdateCallback()) return mappedRootObject;\r\n\t\r\n\t                // For non-atomic types, visit all properties and update recursively\r\n\t                visitPropertiesOrArrayEntries(rootObject, function (indexer) {\r\n\t                    var fullPropertyName = parentPropertyName.length ? parentPropertyName + \".\" + indexer : indexer;\r\n\t\r\n\t                    if (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {\r\n\t                        return;\r\n\t                    }\r\n\t\r\n\t                    if (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {\r\n\t                        mappedRootObject[indexer] = rootObject[indexer];\r\n\t                        return;\r\n\t                    }\r\n\t\r\n\t                    if(typeof rootObject[indexer] != \"object\" && typeof rootObject[indexer] != \"array\" && options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\r\n\t                    {\r\n\t                        mappedRootObject[indexer] = rootObject[indexer];\r\n\t                        options.copiedProperties[fullPropertyName] = true;\r\n\t                        return;\r\n\t                    }\r\n\t\r\n\t                    // In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.\r\n\t                    // If this is a property that was generated by fromJS, we should use the options specified there\r\n\t                    var prevMappedProperty = visitedObjects.get(rootObject[indexer]);\r\n\t                    var retval = updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName, mappedRootObject);\r\n\t                    var value = prevMappedProperty || retval;\r\n\t\r\n\t                    if(options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\r\n\t                    {\r\n\t                        mappedRootObject[indexer] = ko.utils.unwrapObservable(value);\r\n\t                        options.copiedProperties[fullPropertyName] = true;\r\n\t                        return;\r\n\t                    }\r\n\t\r\n\t                    if (ko.isWriteableObservable(mappedRootObject[indexer])) {\r\n\t                        value = ko.utils.unwrapObservable(value);\r\n\t                        if (mappedRootObject[indexer]() !== value) {\r\n\t                            mappedRootObject[indexer](value);\r\n\t                        }\r\n\t                    } else {\r\n\t                        value = mappedRootObject[indexer] === undefined ? value : ko.utils.unwrapObservable(value);\r\n\t                        mappedRootObject[indexer] = value;\r\n\t                    }\r\n\t\r\n\t                    options.mappedProperties[fullPropertyName] = true;\r\n\t                });\r\n\t            }\r\n\t        } else { //mappedRootObject is an array\r\n\t            var changes = [];\r\n\t\r\n\t            var hasKeyCallback = false;\r\n\t            var keyCallback = function (x) {\r\n\t                return x;\r\n\t            };\r\n\t            if (options[parentName] && options[parentName].key) {\r\n\t                keyCallback = options[parentName].key;\r\n\t                hasKeyCallback = true;\r\n\t            }\r\n\t\r\n\t            if (!ko.isObservable(mappedRootObject)) {\r\n\t                // When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.\r\n\t                mappedRootObject = ko.observableArray([]);\r\n\t\r\n\t                mappedRootObject.mappedRemove = function (valueOrPredicate) {\r\n\t                    var predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\r\n\t                            return value === keyCallback(valueOrPredicate);\r\n\t                        };\r\n\t                    return mappedRootObject.remove(function (item) {\r\n\t                        return predicate(keyCallback(item));\r\n\t                    });\r\n\t                };\r\n\t\r\n\t                mappedRootObject.mappedRemoveAll = function (arrayOfValues) {\r\n\t                    var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\r\n\t                    return mappedRootObject.remove(function (item) {\r\n\t                        return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\r\n\t                    });\r\n\t                };\r\n\t\r\n\t                mappedRootObject.mappedDestroy = function (valueOrPredicate) {\r\n\t                    var predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\r\n\t                            return value === keyCallback(valueOrPredicate);\r\n\t                        };\r\n\t                    return mappedRootObject.destroy(function (item) {\r\n\t                        return predicate(keyCallback(item));\r\n\t                    });\r\n\t                };\r\n\t\r\n\t                mappedRootObject.mappedDestroyAll = function (arrayOfValues) {\r\n\t                    var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\r\n\t                    return mappedRootObject.destroy(function (item) {\r\n\t                        return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\r\n\t                    });\r\n\t                };\r\n\t\r\n\t                mappedRootObject.mappedIndexOf = function (item) {\r\n\t                    var keys = filterArrayByKey(mappedRootObject(), keyCallback);\r\n\t                    var key = keyCallback(item);\r\n\t                    return ko.utils.arrayIndexOf(keys, key);\r\n\t                };\r\n\t\r\n\t                mappedRootObject.mappedGet = function (item) {\r\n\t                    return mappedRootObject()[mappedRootObject.mappedIndexOf(item)];\r\n\t                };\r\n\t\r\n\t                mappedRootObject.mappedCreate = function (value) {\r\n\t                    if (mappedRootObject.mappedIndexOf(value) !== -1) {\r\n\t                        throw new Error(\"There already is an object with the key that you specified.\");\r\n\t                    }\r\n\t\r\n\t                    var item = hasCreateCallback() ? createCallback(value) : value;\r\n\t                    if (hasUpdateCallback()) {\r\n\t                        var newValue = updateCallback(item, value);\r\n\t                        if (ko.isWriteableObservable(item)) {\r\n\t                            item(newValue);\r\n\t                        } else {\r\n\t                            item = newValue;\r\n\t                        }\r\n\t                    }\r\n\t                    mappedRootObject.push(item);\r\n\t                    return item;\r\n\t                };\r\n\t            }\r\n\t\r\n\t            var currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();\r\n\t            var newArrayKeys = filterArrayByKey(rootObject, keyCallback);\r\n\t            if (hasKeyCallback) newArrayKeys.sort();\r\n\t            var editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);\r\n\t\r\n\t            var ignoreIndexOf = {};\r\n\t\r\n\t            var i;\r\n\t            var j;\r\n\t\r\n\t            var key;\r\n\t            var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\r\n\t            var itemsByKey = {};\r\n\t            var optimizedKeys = true;\r\n\t            for (i = 0, j = unwrappedRootObject.length; i < j; i++) {\r\n\t                key = keyCallback(unwrappedRootObject[i]);\r\n\t                if (key === undefined || key instanceof Object) {\r\n\t                    optimizedKeys = false;\r\n\t                    break;\r\n\t                }\r\n\t                itemsByKey[key] = unwrappedRootObject[i];\r\n\t            }\r\n\t\r\n\t            var newContents = [];\r\n\t            var passedOver = 0;\r\n\t            for (i = 0, j = editScript.length; i < j; i++) {\r\n\t                key = editScript[i];\r\n\t                var mappedItem;\r\n\t                var fullPropertyName = parentPropertyName + \"[\" + i + \"]\";\r\n\t                var item;\r\n\t                var index;\r\n\t                switch (key.status) {\r\n\t                case \"added\":\r\n\t                    item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\r\n\t                    mappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName, parent);\r\n\t                    if(!hasCreateCallback()) {\r\n\t                        mappedItem = ko.utils.unwrapObservable(mappedItem);\r\n\t                    }\r\n\t\r\n\t                    index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\r\n\t\r\n\t                    if (mappedItem === emptyReturn) {\r\n\t                        passedOver++;\r\n\t                    } else {\r\n\t                        newContents[index - passedOver] = mappedItem;\r\n\t                    }\r\n\t\r\n\t                    ignoreIndexOf[index] = true;\r\n\t                    break;\r\n\t                case \"retained\":\r\n\t                    item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\r\n\t                    mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\r\n\t                    updateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName, parent);\r\n\t\r\n\t                    index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\r\n\t                    newContents[index] = mappedItem;\r\n\t                    ignoreIndexOf[index] = true;\r\n\t                    break;\r\n\t                case \"deleted\":\r\n\t                    mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\r\n\t                    break;\r\n\t                }\r\n\t\r\n\t                changes.push({\r\n\t                    event: key.status,\r\n\t                    item: mappedItem\r\n\t                });\r\n\t            }\r\n\t\r\n\t            mappedRootObject(newContents);\r\n\t\r\n\t            if (options[parentName] && options[parentName].arrayChanged) {\r\n\t                ko.utils.arrayForEach(changes, function (change) {\r\n\t                    options[parentName].arrayChanged(change.event, change.item);\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return mappedRootObject;\r\n\t    }\r\n\t\r\n\t    function ignorableIndexOf(array, item, ignoreIndices) {\r\n\t        for (var i = 0, j = array.length; i < j; i++) {\r\n\t            if (ignoreIndices[i] === true) continue;\r\n\t            if (array[i] === item) return i;\r\n\t        }\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t    function mapKey(item, callback) {\r\n\t        var mappedItem;\r\n\t        if (callback) mappedItem = callback(item);\r\n\t        if (exports.getType(mappedItem) === \"undefined\") mappedItem = item;\r\n\t\r\n\t        return ko.utils.unwrapObservable(mappedItem);\r\n\t    }\r\n\t\r\n\t    function getItemByKey(array, key, callback) {\r\n\t        array = ko.utils.unwrapObservable(array);\r\n\t        for (var i = 0, j = array.length; i < j; i++) {\r\n\t            var item = array[i];\r\n\t            if (mapKey(item, callback) === key) return item;\r\n\t        }\r\n\t\r\n\t        throw new Error(\"When calling ko.update*, the key '\" + key + \"' was not found!\");\r\n\t    }\r\n\t\r\n\t    function filterArrayByKey(array, callback) {\r\n\t        return ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {\r\n\t            if (callback) {\r\n\t                return mapKey(item, callback);\r\n\t            } else {\r\n\t                return item;\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t\r\n\t    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\r\n\t        if (exports.getType(rootObject) === \"array\") {\r\n\t            for (var i = 0; i < rootObject.length; i++)\r\n\t            visitorCallback(i);\r\n\t        } else {\r\n\t            for (var propertyName in rootObject)\r\n\t            visitorCallback(propertyName);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function canHaveProperties(object) {\r\n\t        var type = exports.getType(object);\r\n\t        return ((type === \"object\") || (type === \"array\")) && (object !== null);\r\n\t    }\r\n\t\r\n\t    // Based on the parentName, this creates a fully classified name of a property\r\n\t\r\n\t    function getPropertyName(parentName, parent, indexer) {\r\n\t        var propertyName = parentName || \"\";\r\n\t        if (exports.getType(parent) === \"array\") {\r\n\t            if (parentName) {\r\n\t                propertyName += \"[\" + indexer + \"]\";\r\n\t            }\r\n\t        } else {\r\n\t            if (parentName) {\r\n\t                propertyName += \".\";\r\n\t            }\r\n\t            propertyName += indexer;\r\n\t        }\r\n\t        return propertyName;\r\n\t    }\r\n\t\r\n\t    exports.visitModel = function (rootObject, callback, options) {\r\n\t        options = options || {};\r\n\t        options.visitedObjects = options.visitedObjects || new objectLookup();\r\n\t\r\n\t        var mappedRootObject;\r\n\t        var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\r\n\t\r\n\t        if (!canHaveProperties(unwrappedRootObject)) {\r\n\t            return callback(rootObject, options.parentName);\r\n\t        } else {\r\n\t            options = fillOptions(options, unwrappedRootObject[mappingProperty]);\r\n\t\r\n\t            // Only do a callback, but ignore the results\r\n\t            callback(rootObject, options.parentName);\r\n\t            mappedRootObject = exports.getType(unwrappedRootObject) === \"array\" ? [] : {};\r\n\t        }\r\n\t\r\n\t        options.visitedObjects.save(rootObject, mappedRootObject);\r\n\t\r\n\t        var parentName = options.parentName;\r\n\t        visitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {\r\n\t            if (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;\r\n\t\r\n\t            var propertyValue = unwrappedRootObject[indexer];\r\n\t            options.parentName = getPropertyName(parentName, unwrappedRootObject, indexer);\r\n\t\r\n\t            // If we don't want to explicitly copy the unmapped property...\r\n\t            if (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {\r\n\t                // ...find out if it's a property we want to explicitly include\r\n\t                if (ko.utils.arrayIndexOf(options.include, indexer) === -1) {\r\n\t                    // The mapped properties object contains all the properties that were part of the original object.\r\n\t                    // If a property does not exist, and it is not because it is part of an array (e.g. \"myProp[3]\"), then it should not be unmapped.\r\n\t                    if (unwrappedRootObject[mappingProperty] &&\r\n\t                        unwrappedRootObject[mappingProperty].mappedProperties &&\r\n\t                        !unwrappedRootObject[mappingProperty].mappedProperties[indexer] &&\r\n\t                        unwrappedRootObject[mappingProperty].copiedProperties &&\r\n\t                        !unwrappedRootObject[mappingProperty].copiedProperties[indexer] &&\r\n\t                        exports.getType(unwrappedRootObject) !== \"array\")\r\n\t                    {\r\n\t                        return;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            var outputProperty;\r\n\t            switch (exports.getType(ko.utils.unwrapObservable(propertyValue))) {\r\n\t            case \"object\":\r\n\t            case \"array\":\r\n\t            case \"undefined\":\r\n\t                var previouslyMappedValue = options.visitedObjects.get(propertyValue);\r\n\t                mappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== \"undefined\") ? previouslyMappedValue : exports.visitModel(propertyValue, callback, options);\r\n\t                break;\r\n\t            default:\r\n\t                mappedRootObject[indexer] = callback(propertyValue, options.parentName);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        return mappedRootObject;\r\n\t    };\r\n\t\r\n\t    function simpleObjectLookup() {\r\n\t        var keys = [];\r\n\t        var values = [];\r\n\t        this.save = function (key, value) {\r\n\t            var existingIndex = ko.utils.arrayIndexOf(keys, key);\r\n\t            if (existingIndex >= 0) values[existingIndex] = value;\r\n\t            else {\r\n\t                keys.push(key);\r\n\t                values.push(value);\r\n\t            }\r\n\t        };\r\n\t        this.get = function (key) {\r\n\t            var existingIndex = ko.utils.arrayIndexOf(keys, key);\r\n\t            var value = (existingIndex >= 0) ? values[existingIndex] : undefined;\r\n\t            return value;\r\n\t        };\r\n\t    }\r\n\t\r\n\t    function objectLookup() {\r\n\t        var buckets = {};\r\n\t\r\n\t        var findBucket = function(key) {\r\n\t            var bucketKey;\r\n\t            try {\r\n\t                bucketKey = key;//JSON.stringify(key);\r\n\t            }\r\n\t            catch (e) {\r\n\t                bucketKey = \"$$$\";\r\n\t            }\r\n\t\r\n\t            var bucket = buckets[bucketKey];\r\n\t            if (bucket === undefined) {\r\n\t                bucket = new simpleObjectLookup();\r\n\t                buckets[bucketKey] = bucket;\r\n\t            }\r\n\t            return bucket;\r\n\t        };\r\n\t\r\n\t        this.save = function (key, value) {\r\n\t            findBucket(key).save(key, value);\r\n\t        };\r\n\t        this.get = function (key) {\r\n\t            return findBucket(key).get(key);\r\n\t        };\r\n\t    }\r\n\t}));\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _scalejs = __webpack_require__(2);\r\n\t\r\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\tvar addOne = _scalejs2.default.array.addOne,\r\n\t    toArray = _scalejs2.default.array.toArray,\r\n\t    error = _scalejs2.default.log.error,\r\n\t    debug = _scalejs2.default.log.debug,\r\n\t\r\n\t\r\n\t/**\r\n\t * Holds modules that have been registered to the application\r\n\t * @property moduleRegistrations\r\n\t * @type Array\r\n\t * @memberOf applciation\r\n\t * @private\r\n\t */\r\n\tmoduleRegistrations = [],\r\n\t\r\n\t/**\r\n\t * Holds instances of running modules\r\n\t * @property moduleInstances\r\n\t * @type Array\r\n\t * @memberOf applciation\r\n\t * @private\r\n\t */\r\n\tmoduleInstances = [];\r\n\t\r\n\t/**\r\n\t * Registers a series of modules to the application\r\n\t *\r\n\t * @param {Function|Object} [module...] modules to register\r\n\t * @memberOf application\r\n\t */\r\n\t/**\r\n\t * Application manages the life cycle of modules.\r\n\t * @namespace scalejs.application\r\n\t * @module application\r\n\t */\r\n\t\r\n\t/*global define*/\r\n\tfunction registerModules() {\r\n\t    // Dynamic module loading is no longer supported for simplicity.\r\n\t    // Module is free to load any of its resources dynamically.\r\n\t    // Or an extension can provide dynamic module loading capabilities as needed.\r\n\t    if (_scalejs2.default.isApplicationRunning()) {\r\n\t        throw new Error('Can\\'t register module since the application is already running.', 'Dynamic module loading is not supported.');\r\n\t    }\r\n\t\r\n\t    Array.prototype.push.apply(moduleRegistrations, toArray(arguments).filter(function (m) {\r\n\t        return m;\r\n\t    }));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a module instance from the passed framework\r\n\t * @private\r\n\t *\r\n\t * @param {Function|Object} module what to obtain an instance of\r\n\t * @memberOf application\r\n\t * @return the module instance\r\n\t */\r\n\tfunction createModule(module) {\r\n\t    var moduleInstance, moduleId;\r\n\t\r\n\t    if (typeof module === 'function') {\r\n\t        try {\r\n\t            moduleInstance = module();\r\n\t        } catch (ex) {\r\n\t            if (module.getId) {\r\n\t                moduleId = module.getId();\r\n\t            } else {\r\n\t                moduleId = module.name;\r\n\t            }\r\n\t\r\n\t            error('Failed to create an instance of module \"' + moduleId + '\".', 'Application will continue running without the module. ' + 'See following exception stack for more details.', ex.stack);\r\n\t        }\r\n\t    } else {\r\n\t        moduleInstance = module;\r\n\t    }\r\n\t\r\n\t    addOne(moduleInstances, moduleInstance);\r\n\t\r\n\t    return moduleInstance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates all modules currently registered to this applciation\r\n\t * @private\r\n\t *\r\n\t * @memberOf application\r\n\t */\r\n\tfunction createAll() {\r\n\t    moduleRegistrations.forEach(createModule);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Starts all of the attached module instances\r\n\t * @private\r\n\t *\r\n\t * @memberOf application\r\n\t */\r\n\tfunction startAll() {\r\n\t    debug('Application started.');\r\n\t\r\n\t    _scalejs2.default.notifyApplicationStarted();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stops all of the attached module instances\r\n\t * @private\r\n\t *\r\n\t * @memberOf application\r\n\t */\r\n\tfunction stopAll() {\r\n\t    debug('Application exited.');\r\n\t\r\n\t    _scalejs2.default.notifyApplicationStopped();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Launches the application by creating all module instances\r\n\t * and launching them all\r\n\t *\r\n\t * @memberOf application\r\n\t */\r\n\tfunction run() {\r\n\t    createAll();\r\n\t    startAll();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Exits the application by stopping all running modules\r\n\t *\r\n\t * @memberOf application\r\n\t */\r\n\tfunction exit() {\r\n\t    stopAll();\r\n\t}\r\n\t\r\n\texports.default = {\r\n\t    registerModules: registerModules,\r\n\t    run: run,\r\n\t    exit: exit\r\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _scalejsBase = __webpack_require__(4);\r\n\t\r\n\tvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\tvar valueOrDefault = _scalejsBase2.default.valueOrDefault;\r\n\t\r\n\t/**\r\n\t * Adds an item to the passed array if it doesn't already exist\r\n\t *\r\n\t * @param {Array} array list to add the item to\r\n\t * @param {Any}   item  thing to add to the list\r\n\t * @memberOf array\r\n\t */\r\n\t/**\r\n\t * Provides array functionality to scalejs base\r\n\t * @namespace scalejs.base\r\n\t * @module array\r\n\t */\r\n\t\r\n\t/*global define*/\r\n\tfunction addOne(array, item) {\r\n\t    if (array.indexOf(item) < 0) {\r\n\t        array.push(item);\r\n\t    }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes the first occurrance of the passed item from the passed array\r\n\t *\r\n\t * @param {Array} array list remove the item from\r\n\t * @param {Any}   item  item to be removed from the list\r\n\t * @memberOf array\r\n\t */\r\n\tfunction removeOne(array, item) {\r\n\t    var found = array.indexOf(item);\r\n\t    if (found > -1) {\r\n\t        array.splice(found, 1);\r\n\t    }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes all items from an array\r\n\t *\r\n\t * @param {Array} array list to remove items from\r\n\t * @memberOf array\r\n\t */\r\n\tfunction removeAll(array) {\r\n\t    array.splice(0, array.length);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Copy the items from the array into a new one\r\n\t *\r\n\t * @param {Array}  array   list to copy from\r\n\t * @param {Number} [first] starting index to copy from (defult:0)\r\n\t * @param {Number} [count] number of items to copy (default:array.length)\r\n\t * @memberOf array\r\n\t * @return {Array} copied list\r\n\t */\r\n\tfunction copy(array, first, count) {\r\n\t    first = valueOrDefault(first, 0);\r\n\t    count = valueOrDefault(count, array.length);\r\n\t    return Array.prototype.slice.call(array, first, count);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Finds the passed item in the array\r\n\t *\r\n\t * @param {Array}    array   list in which to search\r\n\t * @param {Function} f       function to seach with\r\n\t * @param {Any}      content context on which to call the function\r\n\t * @memberOf array\r\n\t * @return {Any|Object} item if found, null if not\r\n\t */\r\n\tfunction find(array, f, context) {\r\n\t    var i, // iterative variable\r\n\t    l; // array length variable\r\n\t\r\n\t    for (i = 0, l = array.length; i < l; i += 1) {\r\n\t        if (array.hasOwnProperty(i) && f.call(context, array[i], i, array)) {\r\n\t            return array[i];\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Converts object structured like array into an array\r\n\t *\r\n\t * @param {Any}    list    object structred with numerical keys\r\n\t * @param {Number} [first] starting index to copy from (defult:0)\r\n\t * @param {Number} [count] number of items to copy (default:array.length)\r\n\t * @memberOf array\r\n\t * @return {Array} result of the array conversion\r\n\t */\r\n\tfunction toArray(list, start, count) {\r\n\t    return copy(list, start, count);\r\n\t}\r\n\t\r\n\texports.default = {\r\n\t    addOne: addOne,\r\n\t    removeOne: removeOne,\r\n\t    removeAll: removeAll,\r\n\t    copy: copy,\r\n\t    find: find,\r\n\t    toArray: toArray\r\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _scalejsBase = __webpack_require__(25);\r\n\t\r\n\tvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\t\r\n\tvar _scalejsBase3 = __webpack_require__(27);\r\n\t\r\n\tvar _scalejsBase4 = _interopRequireDefault(_scalejsBase3);\r\n\t\r\n\tvar _scalejsBase5 = __webpack_require__(4);\r\n\t\r\n\tvar _scalejsBase6 = _interopRequireDefault(_scalejsBase5);\r\n\t\r\n\tvar _scalejsBase7 = __webpack_require__(8);\r\n\t\r\n\tvar _scalejsBase8 = _interopRequireDefault(_scalejsBase7);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\t/*\r\n\t * Minimal base implementation.\r\n\t */\r\n\t\r\n\t/*global define*/\r\n\texports.default = {\r\n\t    type: _scalejsBase8.default,\r\n\t    object: _scalejsBase6.default,\r\n\t    array: _scalejsBase2.default,\r\n\t    log: _scalejsBase4.default\r\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _scalejsBase = __webpack_require__(4);\r\n\t\r\n\tvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\t// Workaround for IE8 and IE9 - in these browsers console.log exists but it's not a real JS function.\r\n\t// See http://stackoverflow.com/a/5539378/201958 for more details\r\n\t\r\n\t/*jslint sub:true*/\r\n\t/**\r\n\t * Aliases the built in console log function for IE support\r\n\t *\r\n\t * @property log\r\n\t * @type Function\r\n\t * @memberOf log\r\n\t * @private\r\n\t */\r\n\tvar log = Function.prototype.call.bind(console['log'], console),\r\n\t\r\n\t\r\n\t/**\r\n\t * Detects if the current browser is IE\r\n\t *\r\n\t * IMPORTANT: the method for obtaining this information is\r\n\t *            subject to change and this functionality may\r\n\t *            break at any time\r\n\t *\r\n\t * @property IE\r\n\t * @type Boolean\r\n\t * @memberOf log\r\n\t * @private\r\n\t */\r\n\tIE = navigator.userAgent.indexOf('MSIE') > 0 || navigator.userAgent.indexOf('Trident') > 0;\r\n\t\r\n\t/*jslint sub:false*/\r\n\t\r\n\t/**\r\n\t * Creates a new log function with the passed level\r\n\t * @private\r\n\t *\r\n\t * @param {String} level log level\r\n\t * @memberOf log\r\n\t * @return {Function} decorated log function\r\n\t */\r\n\t/**\r\n\t * Provides logging functionality to scalejs base\r\n\t * @namespace scalejs.base\r\n\t * @module log\r\n\t */\r\n\t\r\n\t/*global define,console,navigator*/\r\n\tfunction create(level) {\r\n\t    return function () {\r\n\t        var args, outstring;\r\n\t\r\n\t        args = Array.prototype.slice.call(arguments, 0);\r\n\t\r\n\t        if (!IE) {\r\n\t            args.unshift(level);\r\n\t        } else {\r\n\t            outstring = level + ' ';\r\n\t            args.forEach(function (arg) {\r\n\t                outstring += _scalejsBase2.default.stringify(arg) + ' ';\r\n\t            });\r\n\t            args = [outstring];\r\n\t        }\r\n\t\r\n\t        log.apply(this, arguments);\r\n\t    };\r\n\t}\r\n\t\r\n\t/**\r\n\t * Formats an exception for better output\r\n\t *\r\n\t * @param {Object} ex exception object\r\n\t * @memberOf log\r\n\t * @return {String} formatted exception\r\n\t */\r\n\tfunction formatException(ex) {\r\n\t    var stack = ex.stack ? String(ex.stack) : '',\r\n\t        message = ex.message || '';\r\n\t    return 'Error: ' + message + '\\nStack: ' + stack;\r\n\t}\r\n\t\r\n\texports.default = {\r\n\t    /**\r\n\t     * Logs to the console with no level\r\n\t     * @method log\r\n\t     * @param {Any} [message...] items to print to the console\r\n\t     * @memberOf log\r\n\t     */\r\n\t    log: create('      '),\r\n\t    /**\r\n\t     * Logs to the console with info level\r\n\t     * @method info\r\n\t     * @param {Any} [message...] items to print to the console\r\n\t     * @memberOf log\r\n\t     */\r\n\t    info: create('info: '),\r\n\t    /**\r\n\t     * Logs to the console with error level\r\n\t     * @method error\r\n\t     * @param {Any} [message...] items to print to the console\r\n\t     * @memberOf log\r\n\t     */\r\n\t    error: create('error:'),\r\n\t    /**\r\n\t     * Logs to the console with warn level\r\n\t     * @method warn\r\n\t     * @param {Any} [message...] items to print to the console\r\n\t     * @memberOf log\r\n\t     */\r\n\t    warn: create('warn: '),\r\n\t    /**\r\n\t     * Logs to the console with debug level\r\n\t     * @method debug\r\n\t     * @param {Any} [message...] items to print to the console\r\n\t     * @memberOf log\r\n\t     */\r\n\t    debug: create('debug:'),\r\n\t    /** */\r\n\t    formatException: formatException\r\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, \"__esModule\", {\r\n\t    value: true\r\n\t});\r\n\t\r\n\tvar _scalejs = __webpack_require__(26);\r\n\t\r\n\tvar _scalejs2 = _interopRequireDefault(_scalejs);\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\t\r\n\t// Imports\r\n\tvar has = _scalejs2.default.object.has,\r\n\t    is = _scalejs2.default.type.is,\r\n\t    extend = _scalejs2.default.object.extend,\r\n\t    addOne = _scalejs2.default.array.addOne,\r\n\t    error = _scalejs2.default.log.error,\r\n\t\r\n\t\r\n\t/**\r\n\t * Holds the core\r\n\t * @property self\r\n\t * @type Object\r\n\t * @memberOf core\r\n\t * @private\r\n\t */\r\n\tself = {},\r\n\t\r\n\t/**\r\n\t * Holds extensions for the core and sandbox\r\n\t * @property extensions\r\n\t * @type Array\r\n\t * @memberOf core\r\n\t * @private\r\n\t */\r\n\textensions = [],\r\n\t\r\n\t/**\r\n\t * Holds application event listeners\r\n\t * @property applicationEventListeners\r\n\t * @type Array\r\n\t * @memberOf core\r\n\t * @private\r\n\t */\r\n\tapplicationEventListeners = [],\r\n\t\r\n\t/**\r\n\t * Holds the current application state\r\n\t * @property isApplicationRunning\r\n\t * @type Boolean\r\n\t * @memberOf core\r\n\t * @private\r\n\t */\r\n\t_isApplicationRunning = false;\r\n\t\r\n\t/**\r\n\t * Registers an extension to the sandbox\r\n\t *\r\n\t * @param {Function|Object} extension function to create the extension or\r\n\t *                                    object representing the extension\r\n\t * @memberOf core\r\n\t */\r\n\t/**\r\n\t * Provides core functionality of scalejs\r\n\t * @namespace scalejs.core\r\n\t * @module core\r\n\t */\r\n\t\r\n\t/*global define*/\r\n\tfunction registerExtension(extension) {\r\n\t    try {\r\n\t        var ext; // Actual extension\r\n\t\r\n\t        if (is(extension, 'buildCore', 'function')) {\r\n\t            // If extension has buildCore function then give it an instance of the core.\r\n\t            extension.buildCore(self);\r\n\t            addOne(extensions, extension);\r\n\t            return; // No need to extend as that will be handled in buildCore\r\n\t        }\r\n\t\r\n\t        if (is(extension, 'function')) {\r\n\t            // If extension is a function then give it an instance of the core.\r\n\t            ext = extension(self);\r\n\t        } else if (has(extension, 'core')) {\r\n\t            // If extension has `core` property then extend core with it.\r\n\t            ext = extension.core;\r\n\t        } else {\r\n\t            // Otherwise extend core with the extension itself.\r\n\t            ext = extension;\r\n\t        }\r\n\t\r\n\t        if (ext) {\r\n\t            extend(self, ext);\r\n\t            addOne(extensions, extension);\r\n\t        }\r\n\t    } catch (ex) {\r\n\t        error('Fatal error during application initialization. ', 'Failed to build core with extension \"', extension, 'See following exception for more details.', ex);\r\n\t    }\r\n\t\r\n\t    return extension;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Builds a sandbox from the current list of extensions\r\n\t *\r\n\t * @param {String} id identifier for the sandbox\r\n\t * @memberOf core\r\n\t * @return {Object} object representing the built sandbox\r\n\t */\r\n\tfunction buildSandbox(id) {\r\n\t    if (!has(id)) {\r\n\t        throw new Error('Sandbox name is required to build a sandbox.');\r\n\t    }\r\n\t\r\n\t    // Create module instance specific sandbox\r\n\t    var sandbox = {\r\n\t        type: self.type,\r\n\t        object: self.object,\r\n\t        array: self.array,\r\n\t        log: self.log\r\n\t    };\r\n\t\r\n\t    // Add extensions to sandbox\r\n\t    extensions.forEach(function (extension) {\r\n\t        try {\r\n\t\r\n\t            // If extension has buildSandbox method use it to build sandbox\r\n\t            if (is(extension, 'buildSandbox', 'function')) {\r\n\t                extension.buildSandbox(sandbox);\r\n\t            }\r\n\t\r\n\t            // If extension has a sandbox object add it\r\n\t            else if (has(extension, 'sandbox')) {\r\n\t                    extend(sandbox, extension.sandbox);\r\n\t                }\r\n\t\r\n\t                // Otherwise extend the sandbox with the extension\r\n\t                else {\r\n\t                        extend(sandbox, extension);\r\n\t                    }\r\n\t        } catch (ex) {\r\n\t            error('Fatal error during application initialization. ', 'Failed to build sandbox with extension \"', extension, 'See following exception for more details.', ex);\r\n\t            throw ex;\r\n\t        }\r\n\t    });\r\n\t\r\n\t    return sandbox;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds a listener to the application event\r\n\t *\r\n\t * @param {Function} listener called on application event\r\n\t * @param {String}   listener.message event description\r\n\t * @memberOf core\r\n\t */\r\n\tfunction onApplicationEvent(listener) {\r\n\t    applicationEventListeners.push(listener);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Notify the event listeners the application has started\r\n\t *\r\n\t * @memberOf core\r\n\t */\r\n\tfunction notifyApplicationStarted() {\r\n\t    if (_isApplicationRunning) {\r\n\t        return;\r\n\t    }\r\n\t\r\n\t    _isApplicationRunning = true;\r\n\t    applicationEventListeners.forEach(function (listener) {\r\n\t        listener('started');\r\n\t    });\r\n\t}\r\n\t\r\n\t/**\r\n\t * Notify the event listeners the application has stopped\r\n\t *\r\n\t * @memberOf core\r\n\t */\r\n\tfunction notifyApplicationStopped() {\r\n\t    if (!_isApplicationRunning) {\r\n\t        return;\r\n\t    }\r\n\t\r\n\t    _isApplicationRunning = false;\r\n\t    applicationEventListeners.forEach(function (listener) {\r\n\t        listener('stopped');\r\n\t    });\r\n\t}\r\n\t\r\n\t/**\r\n\t * Constant for notifying application start\r\n\t *\r\n\t * @property STARTED\r\n\t * @type String\r\n\t * @memberOf core\r\n\t */\r\n\tObject.defineProperty(self, 'STARTED', {\r\n\t    value: 'started',\r\n\t    writable: false\r\n\t});\r\n\t\r\n\t/**\r\n\t * Constant for notifying application stop\r\n\t *\r\n\t * @property STOPPED\r\n\t * @type String\r\n\t * @memberOf core\r\n\t */\r\n\tObject.defineProperty(self, 'STOPPED', {\r\n\t    value: 'stopped',\r\n\t    writable: false\r\n\t});\r\n\t\r\n\texports.default = extend(self, {\r\n\t    type: _scalejs2.default.type,\r\n\t    object: _scalejs2.default.object,\r\n\t    array: _scalejs2.default.array,\r\n\t    log: _scalejs2.default.log,\r\n\t    buildSandbox: buildSandbox,\r\n\t    notifyApplicationStarted: notifyApplicationStarted,\r\n\t    notifyApplicationStopped: notifyApplicationStopped,\r\n\t    onApplicationEvent: onApplicationEvent,\r\n\t    registerExtension: registerExtension,\r\n\t    /**\r\n\t     * Accesses the current state of the application\r\n\t     *\r\n\t     * @memberOf core\r\n\t     * @return {Boolean} state of the application\r\n\t     */\r\n\t    isApplicationRunning: function isApplicationRunning() {\r\n\t        return _isApplicationRunning;\r\n\t    }\r\n\t\r\n\t});\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t/*globals window __webpack_hash__ */\r\n\tif(false) {\r\n\t\tvar lastData;\r\n\t\tvar upToDate = function upToDate() {\r\n\t\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\r\n\t\t};\r\n\t\tvar check = function check() {\r\n\t\t\tmodule.hot.check(true, function(err, updatedModules) {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t\t}) {\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(!updatedModules) {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(!upToDate()) {\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\r\n\t\r\n\t\t\t\tif(upToDate()) {\r\n\t\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t\t}\r\n\t\r\n\t\t\t});\r\n\t\t};\r\n\t\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\r\n\t\t\twindow.addEventListener(eventName, listener, false);\r\n\t\t} : function(eventName, listener) {\r\n\t\t\twindow.attachEvent(\"on\" + eventName, listener);\r\n\t\t};\r\n\t\taddEventListener(\"message\", function(event) {\r\n\t\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\r\n\t\t\t\tlastData = event.data;\r\n\t\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\r\n\t\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n\t} else {\r\n\t\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".bundle.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e361f65b40435f9e7a43\n **/","/*!\n * Knockout JavaScript library v3.4.0\n * (c) Steven Sanderson - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.0\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle;\n                return function () {\n                    ko.tasks.cancel(handle);\n                    handle = ko.tasks.schedule(callback);\n                    target['notifySubscribers'](undefined, 'dirty');\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = {};\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self();\n            }\n            ignoreBeforeChange = false;\n            if (self.isDifferent(previousValue, pendingValue)) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isStale || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if (dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed();\n        }\n    },\n    isActive: function () {\n        return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed();\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState];\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = false;\n        }\n    },\n    peek: function () {\n        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        var state = this[computedState];\n        if ((state.isStale && !state.dependenciesCount) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalDelayed = function () {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            this[computedState].isStale = true; // Mark as dirty\n\n            // Pass the observable to the \"limit\" code, which will access it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        }\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                state.isStale = true;\n                computedObservable.evaluateImmediate();\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\n                if (subscribable) {\n                    self._subscribable = subscribable;\n                }\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n        // the context object.\n        if (subscribable.isActive()) {\n            self._subscribable = subscribable;\n\n            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n            subscribable['equalityComparer'] = null;\n\n            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n            nodes = [];\n            subscribable._addNode = function(node) {\n                nodes.push(node);\n                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                    ko.utils.arrayRemoveItem(nodes, node);\n                    if (!nodes.length) {\n                        subscribable.dispose();\n                        self._subscribable = subscribable = undefined;\n                    }\n                });\n            };\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        });\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext['createChildContext'](dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                dataValue,\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\n                dataValue = ko.utils.unwrapObservable(options['data']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/knockout/build/output/knockout-latest.debug.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\r\n\r\nvar _scalejsEs = require(\"./scalejs.es6.core\");\r\n\r\nvar _scalejsEs2 = _interopRequireDefault(_scalejsEs);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nmodule.exports = _scalejsEs2.default;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.core.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _scalejs = require('scalejs.core');\r\n\r\nvar _scalejs2 = _interopRequireDefault(_scalejs);\r\n\r\nrequire('scalejs.extensions');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n// create a sandbox to shim existing requires\r\n// give ability to generate new sandbox if desired.\r\n/*global define*/\r\n/*jslint unparam:true*/\r\nvar sandbox = _scalejs2.default.buildSandbox('main', _scalejs2.default.object.merge({\r\n    buildSandbox: _scalejs2.default.buildSandbox\r\n}));\r\n\r\nexports.default = sandbox;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.sandbox.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /**\r\n                                                                                                                                                                                                                                                   * Provides object functionality to scalejs base\r\n                                                                                                                                                                                                                                                   * @namespace scalejs.base\r\n                                                                                                                                                                                                                                                   * @module object\r\n                                                                                                                                                                                                                                                   */\r\n\r\n/*global define*/\r\n\r\n\r\nvar _scalejsBase = require('./scalejs.base.type');\r\n\r\nvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar is = _scalejsBase2.default.is;\r\n\r\n/**\r\n * Determines if an object exists and if it does checks that each in\r\n * the chain of properties also exist\r\n *\r\n * @param {Object|Any} obj       object to test\r\n * @param {String}     [prop...] property chain of the object to test\r\n * @memberOf object\r\n * @return {Boolean} if the object 'has' (see inline documentation)\r\n */\r\nfunction has(object) {\r\n    // The intent of this method is to replace unsafe tests relying on type\r\n    // coercion for optional arguments or obj properties:\r\n    // | function on(event,options){\r\n    // |   options = options || {}; // type coercion\r\n    // |   if (!event || !event.data || !event.data.value){\r\n    // |     // unsafe due to type coercion: all falsy values '', false, 0\r\n    // |     // are discarded, not just null and undefined\r\n    // |     return;\r\n    // |   }\r\n    // |   // ...\r\n    // | }\r\n    // with a safer test without type coercion:\r\n    // | function on(event,options){\r\n    // |   options = has(options)? options : {}; // no type coercion\r\n    // |   if (!has(event,'data','value'){\r\n    // |     // safe check: only null/undefined values are rejected;\r\n    // |     return;\r\n    // |   }\r\n    // |   // ...\r\n    // | }\r\n    //\r\n    // Returns:\r\n    //   * false if no argument is provided or if the obj is null or\r\n    //     undefined, whatever the number of arguments\r\n    //   * true if the full chain of nested properties is found in the obj\r\n    //     and the corresponding value is neither null nor undefined\r\n    //   * false otherwise\r\n\r\n    var i,\r\n        // iterative variable\r\n    length,\r\n        o = object,\r\n        property;\r\n\r\n    if (!is(o)) {\r\n        return false;\r\n    }\r\n\r\n    for (i = 1, length = arguments.length; i < length; i += 1) {\r\n        property = arguments[i];\r\n        o = o[property];\r\n        if (!is(o)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Deep extend of the supplier into the reciever\r\n * @private\r\n *\r\n * @param {Object} reciever object into which to extend\r\n * @param {Object} supplier object from which to extend\r\n * @memberOf object\r\n * @return the reciever object for ease\r\n */\r\nfunction mix(receiver, supplier) {\r\n    var p;\r\n    for (p in supplier) {\r\n        if (supplier.hasOwnProperty(p)) {\r\n            if (has(supplier, p) && has(receiver, p) && supplier[p].constructor === Object) {\r\n                receiver[p] = mix(receiver[p], supplier[p]);\r\n            } else {\r\n                receiver[p] = supplier[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    return receiver;\r\n}\r\n\r\n/**\r\n * Merges all of the passed objects into a new object\r\n *\r\n * @param {Object} [obj...] object to mix into the new object\r\n * @memberOf object\r\n * @return {Object} the merged object\r\n */\r\nfunction merge() {\r\n    var args = arguments,\r\n        i,\r\n        // iterative variable\r\n    len = args.length,\r\n        result = {};\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        mix(result, args[i]);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Clones the passed object\r\n *\r\n * @param {Object} obj object to be cloned\r\n * @memberOf object\r\n * @return {Object} the cloned object\r\n */\r\nfunction clone(o) {\r\n    return merge(o);\r\n}\r\n\r\n/**\r\n * Extends the extension into the reciever\r\n *\r\n * @param {Object} reciever  object into which to extend\r\n * @param {Object} extension object from which to extend\r\n * @param {String} [path]    followed on the reciever before executing\r\n *                           the extend (form: \"obj.obj.obj\")\r\n * @memberOf object\r\n * @return the extended object (after having followed the path)\r\n */\r\nfunction extend(receiver, extension, path) {\r\n    var props = has(path) ? path.split('.') : [],\r\n        target = receiver,\r\n        i; // iterative variable\r\n\r\n    for (i = 0; i < props.length; i += 1) {\r\n        if (!has(target, props[i])) {\r\n            target[props[i]] = {};\r\n        }\r\n        target = target[props[i]];\r\n    }\r\n\r\n    mix(target, extension);\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Obtains a value from an object following a path with the option to\r\n * return a default value if that object was not found\r\n *\r\n * @param {Object} o    object in which to look for the specified path\r\n * @param {String} path string representing the chain of properties to\r\n *                      to be followed (form: \"obj.obj.obj\")\r\n * @param {Any}    [defaultValue] value to return if the path does not\r\n *                                evaluate successfully: default undefined\r\n * @memberOf object\r\n * @return {Any} object evaluated by following the given path or the default\r\n *               value should that object not exist\r\n */\r\nfunction get(o, path, defaultValue) {\r\n    var props = path.split('.'),\r\n        i,\r\n        // iterative variable\r\n    p,\r\n        // current property\r\n    success = true;\r\n\r\n    for (i = 0; i < props.length; i += 1) {\r\n        p = props[i];\r\n        if (has(o, p)) {\r\n            o = o[p];\r\n        } else {\r\n            success = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return success ? o : defaultValue;\r\n}\r\n\r\n/**\r\n * Gives the value if it exists or the default value if not\r\n *\r\n * @param {Any} value item to check\r\n * @param {Any} [defaultValue] item to return if value does not exist\r\n * @memberOf object\r\n * @return value if it exists or default if not\r\n */\r\nfunction valueOrDefault(value, defaultValue) {\r\n    return has(value) ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * Stringifies an object without the chance for circular error\r\n *\r\n * @param {Object} obj object to stringify\r\n * @memberOf object\r\n * @return {String} string form of the passed object\r\n */\r\nfunction stringify(obj) {\r\n    var cache = [];\r\n\r\n    return JSON.stringify(obj, function (key, value) {\r\n        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {\r\n            if (cache.indexOf(value) !== -1) {\r\n                return '[Circular]';\r\n            }\r\n            cache.push(value);\r\n        }\r\n        return value;\r\n    });\r\n}\r\n\r\nexports.default = {\r\n    has: has,\r\n    valueOrDefault: valueOrDefault,\r\n    merge: merge,\r\n    extend: extend,\r\n    clone: clone,\r\n    get: get,\r\n    stringify: stringify\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.base.object.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.13.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice;\n\n    /** Built-in method references that are mockable. */\n    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n        cache = this.__data__ = new MapCache(cache.__data__);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      // Recursively populate clone (susceptible to call stack limits).\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined &&\n              !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      stack['delete'](srcValue);\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var index = -1,\n          props = getAllKeysIn(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        predicate = getIteratee(predicate, 3);\n        if (!isArrayLike(collection)) {\n          var props = keys(collection);\n        }\n        var index = findIndexFunc(props || collection, function(value, key) {\n          if (props) {\n            key = value;\n            value = iterable[key];\n          }\n          return predicate(value, key, iterable);\n        }, fromIndex);\n        return index > -1 ? collection[props ? props[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return 0;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and\n          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n          // not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n          stack.set(object, other);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    function getPrototype(value) {\n      return nativeGetPrototype(Object(value));\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    function getSymbols(object) {\n      // Coerce `object` to an object to avoid non-object errors in V8.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n      return getOwnPropertySymbols(Object(object));\n    }\n\n    // Fallback for IE < 11.\n    if (!getOwnPropertySymbols) {\n      getSymbols = stubArray;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value);\n    }\n\n    /**\n     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n     * iteratee shorthand.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenableIteratee(value) {\n      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other given\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function, it's\n     * invoked for and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n        ? iteratees[0]\n        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\n      return baseOrderBy(collection, iteratees, []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [transforms[_.identity]] The functions to transform.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? stubFalse : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the\n     * presence of the `core-js` package because `core-js` circumvents this kind\n     * of detection. Despite multiple requests, the `core-js` maintainer has made\n     * it clear: any attempt to fix the detection will be obstructed. As a result,\n     * we're left with little choice but to throw an error. Unfortunately, this\n     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on `core-js`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(baseToString(target), position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['onClick']);\n     * jQuery(element).on('click', view.onClick);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A method that returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return rest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * A method that returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * A method that returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * A method that returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * A method that returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * A method that returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    });\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    });\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    });\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    });\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose Lodash on the free variable `window` or `self` when available so it's\n  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n  // also prevents errors in cases where Lodash is loaded by a script tag in the\n  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n  (freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 6\n ** module chunks = 0\n **/","// knockout-classBindingProvider 0.5.0 | (c) 2013 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license\r\n;(function (factory) {\r\n    //AMD\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define('scalejs.mvvm/classBindingProvider',[\"knockout\", \"exports\"], factory);\r\n        //normal script tag\r\n    } else {\r\n        factory(ko);\r\n    }\r\n}(function (ko, exports, undefined) {\r\n    var objectMap = function (source, mapping) {\r\n        var target, prop;\r\n\r\n        if (!source) {\r\n            return source;\r\n        }\r\n\r\n        target = {};\r\n        for (prop in source) {\r\n            if (source.hasOwnProperty(prop)) {\r\n                target[prop] = mapping(source[prop], prop, source);\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    var makeValueAccessor = function (value) {\r\n        return function () {\r\n            return value;\r\n        };\r\n    };\r\n\r\n    // Make Knockout think that we're using observable view models by adding a \"_subscribable\" function to all binding contexts.\r\n    // This makes Knockout watch any observables accessed in the getBindingAccessors function.\r\n    // Hopefully this hack will be unnecessary in later versions.\r\n    if (ko.version >= \"3.0.0\") {\r\n        (function () {\r\n            // Create and retrieve a binding context object\r\n            var dummyDiv = document.createElement('div');\r\n            ko.applyBindings(null, dummyDiv);\r\n            var context = ko.contextFor(dummyDiv);\r\n\r\n            // Add a dummy _subscribable, with a dummy _addNode, to the binding context prototype\r\n            var isMinified = !ko.storedBindingContextForNode,\r\n                subscribableName = isMinified ? 'A' : '_subscribable',\r\n                addNodeName = isMinified ? 'wb' : '_addNode',\r\n                dummySubscribable = function () { };\r\n            dummySubscribable[addNodeName] = dummySubscribable;\r\n            context.constructor.prototype[subscribableName] = dummySubscribable;\r\n\r\n            ko.cleanNode(dummyDiv);\r\n        })();\r\n    }\r\n\r\n    //a bindingProvider that uses something different than data-bind attributes\r\n    //  bindings - an object that contains the binding classes\r\n    //  options - is an object that can include \"attribute\", \"virtualAttribute\", bindingRouter, and \"fallback\" options\r\n    var classBindingsProvider = function (bindings, options) {\r\n        var existingProvider = new ko.bindingProvider(),\r\n            loggedBindings = {};\r\n\r\n        options = options || {};\r\n\r\n        //override the attribute\r\n        this.attribute = options.attribute || \"data-class\";\r\n\r\n        //override the virtual attribute\r\n        this.virtualAttribute = \"ko \" + (options.virtualAttribute || \"class\") + \":\";\r\n\r\n        //fallback to the existing binding provider, if bindings are not found\r\n        this.fallback = options.fallback;\r\n\r\n        //this object holds the binding classes\r\n        this.bindings = bindings || {};\r\n\r\n        //returns a binding class, given the class name and the bindings object\r\n        this.bindingRouter = options.bindingRouter || function (className, bindings) {\r\n            var i, j, classPath, bindingObject;\r\n\r\n            //if the class name matches a property directly, then return it\r\n            if (bindings[className]) {\r\n                return bindings[className];\r\n            }\r\n\r\n            //search for sub-properites that might contain the bindings\r\n            classPath = className.split(\".\");\r\n            bindingObject = bindings;\r\n\r\n            for (i = 0, j = classPath.length; i < j; i++) {\r\n                bindingObject = bindingObject[classPath[i]];\r\n            }\r\n\r\n            return bindingObject;\r\n        };\r\n\r\n        //allow bindings to be registered after instantiation\r\n        this.registerBindings = function (newBindings) {\r\n            ko.utils.extend(this.bindings, newBindings);\r\n        };\r\n\r\n        //determine if an element has any bindings\r\n        this.nodeHasBindings = function (node) {\r\n            var result, value;\r\n\r\n            if (node.nodeType === 1) {\r\n                result = node.getAttribute(this.attribute);\r\n            }\r\n            else if (node.nodeType === 8) {\r\n                value = \"\" + node.nodeValue || node.text;\r\n                result = value.indexOf(this.virtualAttribute) > -1;\r\n            }\r\n\r\n            if (!result && this.fallback) {\r\n                result = existingProvider.nodeHasBindings(node);\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        //return the bindings given a node and the bindingContext\r\n        this.getBindingsFunction = function (getAccessors) {\r\n            return function (node, bindingContext) {\r\n                var i, j, bindingAccessor, binding,\r\n                    result = {},\r\n                    value, index,\r\n                    classes = \"\";\r\n\r\n                if (node.nodeType === 1) {\r\n                    classes = node.getAttribute(this.attribute);\r\n                }\r\n                else if (node.nodeType === 8) {\r\n                    value = \"\" + node.nodeValue || node.text;\r\n                    index = value.indexOf(this.virtualAttribute);\r\n\r\n                    if (index > -1) {\r\n                        classes = value.substring(index + this.virtualAttribute.length);\r\n                    }\r\n                }\r\n\r\n                if (classes) {\r\n                    classes = classes.replace(/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g, \"\").replace(/(\\s|\\u00A0){2,}/g, \" \").split(' ');\r\n                    //evaluate each class, build a single object to return\r\n                    for (i = 0, j = classes.length; i < j; i++) {\r\n                        bindingAccessor = this.bindingRouter(classes[i], this.bindings);\r\n                        if (bindingAccessor) {\r\n                            binding = typeof bindingAccessor == \"function\" ? bindingAccessor.call(bindingContext.$data, bindingContext, classes) : bindingAccessor;\r\n                            if (getAccessors)\r\n                                binding = objectMap(binding, makeValueAccessor);\r\n                            ko.utils.extend(result, binding);\r\n                        } else {\r\n                            if (options.log) {\r\n                                options.log('No binding function provided for data class \"' +\r\n                                            classes[i] + '\" in element ',\r\n                                            node,\r\n                                            '\\nMake sure data class is spelled correctly ' +\r\n                                            'and that it\\'s binding function is registered.');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (this.fallback) {\r\n                    result = existingProvider[getAccessors ? 'getBindingAccessors' : 'getBindings'](node, bindingContext);\r\n                }\r\n\r\n                if (options.log) {\r\n                    for (var bindingName in result) {\r\n                        if (result.hasOwnProperty(bindingName) &&\r\n                                bindingName !== \"_ko_property_writers\" &&\r\n                                    bindingName !== 'valueUpdate' &&\r\n                                        bindingName !== 'optionsText' &&\r\n                                            bindingName !== 'optionsValue' &&\r\n                                                bindingName !== 'clickBubble' &&\r\n                                                    !ko.bindingHandlers[bindingName] &&\r\n                                                        !loggedBindings[bindingName]) {\r\n                            if (binding) {\r\n                                options.log('Unknown binding handler \"' + bindingName + '\" found in element',\r\n                                            node,\r\n                                            ' defined in data-class \"' + classes + '\" as',\r\n                                            binding,\r\n                                            '\\nMake sure that binding handler\\'s name is spelled correctly ' +\r\n                                            'and that it\\'s properly registered. ' +\r\n                                            '\\nThe binding will be ignored.');\r\n                            } else {\r\n                                options.log('Unknown binding handler \"' + bindingName + '\" in',\r\n                                            node,\r\n                                            '\\nMake sure that it\\'s name spelled correctly and that it\\'s ' +\r\n                                            'properly registered. ' +\r\n                                            '\\nThe binding will be ignored.');\r\n                            }\r\n                            loggedBindings[bindingName] = bindingName;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            };\r\n        };\r\n\r\n        this.getBindings = this.getBindingsFunction(false);\r\n        this.getBindingAccessors = this.getBindingsFunction(true);\r\n    };\r\n\r\n    if (!exports) {\r\n        ko.classBindingProvider = classBindingsProvider;\r\n    }\r\n\r\n    return classBindingsProvider;\r\n}));\r\n\r\n/*global define,document,WinJS*/\r\ndefine('scalejs.mvvm/htmlTemplateSource',[\r\n    'knockout',\r\n    'scalejs.core'\r\n], function (\r\n    ko,\r\n    core\r\n) {\r\n    'use strict';\r\n\r\n    var toArray = core.array.toArray,\r\n        has = core.object.has,\r\n        templateEngine = new ko.nativeTemplateEngine(),\r\n        templates = {\r\n            data: { }\r\n        };\r\n\r\n    function registerTemplates ( templatesHtml ) {\r\n        // iterate through all templates (e.g. children of root in templatesHtml)\r\n        // for every child get its templateId and templateHtml\r\n        // and add it to 'templates'\r\n        var div = document.createElement('div');\r\n\r\n        if (typeof WinJS !== 'undefined') {\r\n            WinJS.Utilities.setInnerHTMLUnsafe(div, templatesHtml);\r\n        } else {\r\n            div.innerHTML = templatesHtml;\r\n        }\r\n\r\n        toArray(div.childNodes).forEach(function ( childNode ) {\r\n            if (childNode.nodeType === 1 && has(childNode, 'id')) {\r\n                templates[childNode.id] = childNode.innerHTML;\r\n            }\r\n        });\r\n    }\r\n\r\n    function getRegisteredTemplates () {\r\n        return templates;\r\n    }\r\n\r\n    function makeTemplateSource ( template ) {\r\n\r\n        if ( template instanceof Element ) {\r\n            return {\r\n                nodes: ko.templateSources.domElement.prototype\r\n                    .nodes.bind({ domElement: template })\r\n            };\r\n        }\r\n\r\n        return {\r\n            data: function ( key, value ) {\r\n                if (!has(templates.data, template)) {\r\n                    templates.data[template] = { };\r\n                }\r\n\r\n                // if called with only key then return the associated value\r\n                if (arguments.length === 1) {\r\n                    return templates.data[template][key];\r\n                }\r\n\r\n                // if called with key and value then store the value\r\n                templates.data[template][key] = value;\r\n            },\r\n            text: function ( value ) {\r\n                // if no value return the template content\r\n                // since that's what KO wants\r\n                if (arguments.length === 0) {\r\n                    return templates[template];\r\n                }\r\n\r\n                throw new Error('An attempt to override template \"' +\r\n                                template + '\" with content \"' + value + '\" ' +\r\n                                'Template overriding is not supported.');\r\n            }\r\n        };\r\n    }\r\n\r\n    templateEngine.makeTemplateSource = makeTemplateSource;\r\n\r\n    ko.setTemplateEngine(templateEngine);\r\n\r\n    return {\r\n        registerTemplates: registerTemplates,\r\n        getRegisteredTemplates : getRegisteredTemplates\r\n    };\r\n});\r\n\r\n/*global define,document,setTimeout*/\r\n/*jslint nomen: true*/\r\n/// <reference path=\"../Scripts/knockout-2.2.1.debug.js\" />\r\ndefine('scalejs.mvvm/selectableArray',[\r\n    'knockout',\r\n    'scalejs.core'\r\n], function (\r\n    ko,\r\n    core\r\n) {\r\n    /// <param name=\"ko\" value=\"window.ko\"/>\r\n    'use strict';\r\n\r\n    var isObservable = ko.isObservable,\r\n        unwrap = ko.utils.unwrapObservable,\r\n        observable = ko.observable,\r\n        computed = ko.computed,\r\n        has = core.object.has,\r\n        array = core.array;\r\n\r\n    return function selectableArray(items, opts) {\r\n        /*selectable(items, {\r\n            selectedItem: selectedTile,\r\n            selectionPolicy: 'single',\r\n            isSelectedPath: 'isSelected'\r\n        });*/\r\n        opts = opts || {};\r\n\r\n        var selectedItem = opts.selectedItem || observable(),\r\n            selectionPolicy = opts.selectionPolicy || 'single',\r\n            result;\r\n\r\n        function ensureIsSelectedExists(item) {\r\n            // if item has isSelected property which is observable and selectedPath is not set\r\n            // then nothing to do\r\n            if (isObservable(item.isSelected) && (!has(opts.isSelectedPath) || opts.isSelectedPath === 'isSelected')) {\r\n                return;\r\n            }\r\n\r\n            if (isObservable(item.isSelected)) {\r\n                throw new Error('item has observable `isSelected` property but `isSelectedPath` specified as \"' +\r\n                                opts.isSelectedPath + '\". `selectable` uses `isSelected` property of an item ' +\r\n                                'to determine whether it\\'s selected. Either don\\'t specify `isSelectedPath` or ' +\r\n                                'rename `isSelected` property to something else.');\r\n            }\r\n\r\n            if (item.hasOwnProperty('isSelected')) {\r\n                throw new Error('item has non-observable `isSelected` property. `selectable` uses `isSelected` ' +\r\n                                'property of an item to determine whether it\\'s selected. Either make `isSelected` ' +\r\n                                'observable or rename it.');\r\n            }\r\n\r\n            item.isSelected = observable();\r\n\r\n            // subscribe isSelectedPath property to isSelected\r\n            if (has(opts.isSelectedPath) &&\r\n                    opts.isSelectedPath !== 'isSelected' &&\r\n                        !isObservable(item[opts.isSelectedPath])) {\r\n                throw new Error('item\\'s property \"' + opts.isSelectedPath + '\" specified by `isSelectedPath` ' +\r\n                                ' isn\\'t observable. Either make it observable or specify different property in ' +\r\n                                ' `isSelectedPath`');\r\n            }\r\n\r\n            if (has(opts.isSelectedPath)) {\r\n                item.isSelected = item[opts.isSelectedPath];\r\n            }\r\n\r\n            item.isSelected.subscribe(function (newValue) {\r\n                if (newValue) {\r\n                    selectedItem(item);\r\n                } else {\r\n                    if (selectedItem() === item) {\r\n                        selectedItem(undefined);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // subscribe to isSelected property of every item if isSelectedPath is specified\r\n        if (isObservable(items)) {\r\n            result = computed(function () {\r\n                var unwrapped = unwrap(items);\r\n                unwrapped.forEach(ensureIsSelectedExists);\r\n                return array.copy(unwrapped);\r\n            });\r\n        } else {\r\n            items.forEach(ensureIsSelectedExists);\r\n            result = array.copy(items);\r\n        }\r\n\r\n        selectedItem.subscribe(function (newItem) {\r\n            unwrap(result).forEach(function (item) {\r\n                item.isSelected(item === newItem);\r\n            });\r\n\r\n            if (selectionPolicy === 'deselect' && newItem) {\r\n                setTimeout(function () { selectedItem(undefined); }, 0);\r\n            }\r\n        });\r\n\r\n        result.selectedItem = selectedItem;\r\n\r\n        return result;\r\n    };\r\n});\r\n\r\n/*global define*/\r\ndefine('scalejs.mvvm/ko.utils',[\r\n    'scalejs.core',\r\n    'knockout'\r\n], function (\r\n    core,\r\n    ko\r\n) {\r\n    'use strict';\r\n\r\n    function cloneNodes(nodesArray, shouldCleanNodes) {\r\n        return core.array.toArray(nodesArray).map(function (node) {\r\n            var clonedNode = node.cloneNode(true);\r\n            return shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode;\r\n        });\r\n    }\r\n\r\n    return {\r\n        cloneNodes: cloneNodes\r\n    };\r\n});\r\n\r\n/*global define,document*/\r\n/*jslint nomen: true*/\r\ndefine('scalejs.mvvm/mvvm',[\r\n    'knockout',\r\n    'knockout.mapping',\r\n    'scalejs.core',\r\n    'scalejs.mvvm/classBindingProvider',\r\n    './htmlTemplateSource',\r\n    './selectableArray',\r\n    './ko.utils'\r\n], function (\r\n    ko,\r\n    mapping,\r\n    core,\r\n    ClassBindingProvider,\r\n    htmlTemplateSource,\r\n    selectableArray,\r\n    koUtils\r\n) {\r\n    'use strict';\r\n\r\n    var merge = core.object.merge,\r\n        toArray = core.array.toArray,\r\n        classBindingProvider = new ClassBindingProvider({}, {\r\n            log: core.log.warn,\r\n            fallback: true\r\n        }),\r\n        root = ko.observable();\r\n\r\n    ko.bindingProvider.instance = classBindingProvider;\r\n\r\n    function observable(initialValue) {\r\n        return ko.observable(initialValue);\r\n    }\r\n\r\n    function observableArray(initialValue) {\r\n        return ko.observableArray(initialValue);\r\n    }\r\n\r\n    function computed(func) {\r\n        return ko.computed(func);\r\n    }\r\n\r\n    function toJson(viewModel) {\r\n        // Extracts underlying value from observables\r\n        return mapping.toJSON(viewModel);\r\n    }\r\n\r\n    function toObject(viewModel) {\r\n        return JSON.parse(toJson(viewModel));\r\n    }\r\n\r\n    function registerBindings() {\r\n        toArray(arguments).forEach(classBindingProvider.registerBindings.bind(classBindingProvider));\r\n    }\r\n\r\n    function toViewModel(data, viewModel, mappings) {\r\n        var knockoutStyleMappings = Object.keys(mappings).reduce(function (o, k) {\r\n            return merge(o, {\r\n                k: k,\r\n                create: function (options) { return mappings[k](options.data); }\r\n            });\r\n        }, {});\r\n\r\n        return mapping.fromJS(data, knockoutStyleMappings, viewModel);\r\n    }\r\n\r\n    function registerTemplates() {\r\n        toArray(arguments).forEach(htmlTemplateSource.registerTemplates);\r\n    }\r\n\r\n    function dataBinding(name, data) {\r\n        var binding = {};\r\n\r\n        binding[name] = data;\r\n\r\n        return binding;\r\n    }\r\n\r\n    function template(name, data) {\r\n        return dataBinding('template', {\r\n            name: name,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    function dataClass(name, data) {\r\n        return {\r\n            dataClass: name,\r\n            viewmodel: data\r\n        };\r\n    }\r\n\r\n    function getElement(name) {\r\n        return document.getElementsByTagName(name)[0];\r\n    }\r\n\r\n    function init(config) {\r\n        var body,\r\n            opening_comment = document.createComment(' ko class: scalejs-shell '),\r\n            closing_comment = document.createComment(' /ko ');\r\n\r\n        // Set the node to the parent element of the currently running script\r\n        body = document.getElementsByTagName('script');\r\n        body = body[body.length - 1].parentElement;\r\n            Array.prototype.slice.call(document.getElementsByTagName(\"script\")).forEach(function (el) {\r\n                if ((el.getAttribute('data-main') || '').indexOf(\"app/app\") != -1) {\r\n                    body = el.parentElement\r\n                }\r\n            });\r\n\r\n        if (body === getElement('html') || body === getElement('head')) {\r\n            body = getElement('body');\r\n        }\r\n\r\n        if (body && !config.doNotRender) {\r\n            body.appendChild(opening_comment);\r\n            body.appendChild(closing_comment);\r\n\r\n            registerBindings({\r\n                'scalejs-shell': function (context) {\r\n                    return {\r\n                        render: context.$data.root\r\n                    };\r\n                }\r\n            });\r\n\r\n            ko.applyBindings({ root: root }, body);\r\n        }\r\n    }\r\n\r\n    return {\r\n        core: {\r\n            mvvm: {\r\n                root: root,\r\n                toJson: toJson,\r\n                registerBindings: registerBindings,\r\n                registerTemplates: registerTemplates,\r\n                dataClass: dataClass,\r\n                template: template,\r\n                dataBinding: dataBinding,\r\n                selectableArray: selectableArray,\r\n                getRegisteredTemplates: htmlTemplateSource.getRegisteredTemplates,\r\n                ko: {\r\n                    utils: koUtils\r\n                }\r\n            }\r\n        },\r\n        sandbox: {\r\n            mvvm: {\r\n                observable: observable,\r\n                observableArray: observableArray,\r\n                computed: computed,\r\n                registerBindings: registerBindings,\r\n                registerTemplates: registerTemplates,\r\n                toJson: toJson,\r\n                toViewModel: toViewModel,\r\n                toObject: toObject,\r\n                dataClass: dataClass,\r\n                template: template,\r\n                dataBinding: dataBinding,\r\n                selectableArray: selectableArray,\r\n                getRegisteredTemplates: htmlTemplateSource.getRegisteredTemplates,\r\n                root: root\r\n            }\r\n        },\r\n        init: init\r\n    };\r\n});\r\n\r\n/*global define*/\r\ndefine('scalejs.bindings/change',[\r\n    'knockout',\r\n    'scalejs.core'\r\n], function (\r\n    ko,\r\n    core\r\n) {\r\n    'use strict';\r\n\r\n    var is = core.type.is,\r\n        has = core.object.has;\r\n\r\n    /*jslint unparam: true*/\r\n    function init(element, valueAccessor, allBindingsAccessor, viewModel) {\r\n        if (!has(viewModel)) {\r\n            return;\r\n        }\r\n\r\n        var unwrap = ko.utils.unwrapObservable,\r\n            value = valueAccessor(),\r\n            properties = unwrap(value),\r\n            property,\r\n            handler,\r\n            //currentValue,\r\n            changeHandler;\r\n\r\n        function bindPropertyChangeHandler(h, currentValue) {\r\n            return function (newValue) {\r\n                if (newValue !== currentValue) {\r\n                    currentValue = newValue;\r\n                    h.call(viewModel, newValue, element);\r\n                }\r\n            };\r\n        }\r\n\r\n        function subscribeChangeHandler(property, changeHandler) {\r\n            ko.computed({\r\n                read: function () {\r\n                    var val = unwrap(viewModel[property]);\r\n                    changeHandler(val);\r\n                },\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n\r\n        for (property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                handler = properties[property];\r\n                if (is(handler.initial, 'function')) {\r\n                    handler.initial.apply(viewModel, [unwrap(viewModel[property]), element]);\r\n                }\r\n                if (is(handler.update, 'function')) {\r\n                    changeHandler = bindPropertyChangeHandler(handler.update, unwrap(viewModel[property]));\r\n                }\r\n                if (is(handler, 'function')) {\r\n                    changeHandler = bindPropertyChangeHandler(handler, unwrap(viewModel[property]));\r\n                }\r\n                if (changeHandler) {\r\n                    subscribeChangeHandler(property, changeHandler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /*jslint unparam: false*/\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});\r\n\r\n/*global define,setTimeout,window*/\r\n/// <reference path=\"../Scripts/_references.js\" />\r\ndefine('scalejs.bindings/render',[\r\n    'scalejs.core',\r\n    'knockout'\r\n], function (\r\n    core,\r\n    ko\r\n) {\r\n    /// <param name=\"ko\" value=\"window.ko\" />\r\n    'use strict';\r\n\r\n    var is = core.type.is,\r\n        has = core.object.has,\r\n        unwrap = ko.utils.unwrapObservable;\r\n\r\n    function init() {\r\n        return { 'controlsDescendantBindings': true };\r\n    }\r\n\r\n    /*jslint unparam: true*/\r\n    function update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var value = unwrap(valueAccessor()),\r\n            bindingAccessor,\r\n            binding,\r\n            context,\r\n            render;\r\n\r\n        function applyBindings() {\r\n            if (binding) {\r\n                ko.applyBindingsToNode(element, binding, viewModel);\r\n            } else {\r\n                ko.virtualElements.emptyNode(element);\r\n            }\r\n        }\r\n\r\n        if (value) {\r\n            if (is(value.dataClass, 'string')) {\r\n                // if dataClass is specified then get the binding from the bindingRouter\r\n                bindingAccessor = ko.bindingProvider.instance.bindingRouter(value.dataClass, ko.bindingProvider.instance.bindings);\r\n                if (!bindingAccessor) {\r\n                    throw new Error('Don\\'t know how to render binding \"' + value.dataClass +\r\n                                    '\" - no such binding registered. ' +\r\n                                    'Either register the bindng or correct its name.');\r\n                }\r\n\r\n                if (bindingAccessor) {\r\n                    binding = is(bindingAccessor, 'function')\r\n                            ? bindingAccessor.call(value.viewmodel || viewModel, bindingContext)\r\n                            : bindingAccessor;\r\n                }\r\n\r\n            } else {\r\n                // otherwise whole object is the binding\r\n                binding = is(value, 'function') ? value.call(viewModel, bindingContext) : value;\r\n            }\r\n        }\r\n\r\n        render = applyBindings;\r\n\r\n        context = {\r\n            getElement: function () {\r\n                return element;\r\n            }\r\n        };\r\n\r\n        render.call(context);\r\n\r\n        ko.utils.domData.set(element, 'binding', binding);\r\n    }\r\n    /*jslint unparam: false*/\r\n\r\n    return {\r\n        init: init,\r\n        update: update\r\n    };\r\n});\r\n\r\n/*global define*/\r\ndefine('scalejs.mvvm',[\r\n    'scalejs.core',\r\n    'knockout',\r\n    'scalejs.mvvm/mvvm',\r\n    './scalejs.bindings/change',\r\n    './scalejs.bindings/render',\r\n    'module'\r\n], function (\r\n    core,\r\n    ko,\r\n    mvvm,\r\n    changeBinding,\r\n    renderBinding,\r\n    module\r\n) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.change = changeBinding;\r\n    ko.bindingHandlers.render = renderBinding;\r\n\r\n    ko.virtualElements.allowedBindings.change = true;\r\n    ko.virtualElements.allowedBindings.render = true;\r\n\r\n    if(module.config && core.type.is(module.config, 'function')) {\r\n        mvvm.init(module.config());\r\n    } else {\r\n        mvvm.init({});\r\n    }\r\n\r\n    core.registerExtension(mvvm);\r\n});\r\n\r\n\r\n/*global define*/\r\n/*jslint unparam:true*/\r\ndefine('scalejs.mvvm.bindings',[],function () {\r\n    'use strict';\r\n\r\n    return {\r\n        load: function (name, req, onLoad, config) {\r\n            /*jslint regexp: true*/\r\n            var names = name.match(/([^,]+)/g) || [];\r\n            /*jslint regexp: false*/\r\n\r\n            names = names.map(function (n) {\r\n                if (n.indexOf('.js', n.length - 3) > -1) {\r\n                    return n;\r\n                }\r\n\r\n                if (n.indexOf('Bindings', n.length - 'Bindings'.length) === -1) {\r\n                    n = n + 'Bindings';\r\n                }\r\n\r\n                if (n.indexOf('/') === -1) {\r\n                    return './bindings/' + n;\r\n                }\r\n\r\n                return n;\r\n            });\r\n\r\n            names.push('scalejs.mvvm', 'scalejs.core');\r\n\r\n            req(names, function () {\r\n                var core = arguments[arguments.length - 1],\r\n                    bindings = Array.prototype.slice.call(arguments, 0, arguments.length - 2);\r\n\r\n                if (!config.isBuild) {\r\n                    core.mvvm.registerBindings.apply(null, bindings);\r\n                }\r\n\r\n                onLoad(bindings);\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\n/*global define*/\r\n/*jslint unparam:true*/\r\ndefine('scalejs.mvvm.views',[],function () {\r\n    'use strict';\r\n\r\n    return {\r\n        load: function (name, req, onLoad, config) {\r\n            /*jslint regexp: true*/\r\n            var names = name.match(/([^,]+)/g) || [];\r\n            /*jslint regexp: false*/\r\n\r\n            names = names.map(function (n) {\r\n                if (n.indexOf('.html', n.length - 5) === -1) {\r\n                    n = n + '.html';\r\n                }\r\n\r\n                if (n.indexOf('/') === -1) {\r\n                    n = './views/' + n;\r\n                }\r\n\r\n                return 'text!' + n;\r\n            });\r\n\r\n            names.push('scalejs.mvvm', 'scalejs.core');\r\n\r\n            req(names, function () {\r\n                var core = arguments[arguments.length - 1],\r\n                    views = Array.prototype.slice.call(arguments, 0, arguments.length - 2);\r\n\r\n                if (!config.isBuild) {\r\n                    core.mvvm.registerTemplates.apply(null, views);\r\n                }\r\n\r\n                onLoad(views);\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs.mvvm/dist/scalejs.mvvm.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\r\n/**\r\n * Provides type functionality to scalejs base\r\n * @namespace scalejs.base\r\n * @module type\r\n */\r\n\r\n/*global define*/\r\n\r\n/**\r\n * Detects the type of the passed object\r\n *\r\n * @param {Any} obj object to find the type of\r\n * @memberOf type\r\n * @return {String} type of the passed object\r\n */\r\nfunction typeOf(obj) {\r\n    if (obj === undefined) {\r\n        return 'undefined';\r\n    }\r\n\r\n    if (obj === null) {\r\n        return 'null';\r\n    }\r\n\r\n    var t = Object.prototype.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase(),\r\n        m;\r\n\r\n    if (t !== 'object') {\r\n        return t;\r\n    }\r\n\r\n    m = obj.constructor.toString().match(/^function\\s*([$A-Z_][0-9A-Z_$]*)/i);\r\n    if (m === null) {\r\n        return 'object';\r\n    }\r\n\r\n    return m[1];\r\n}\r\n\r\n/**\r\n * Determines if an object (and possibly a chain of properties within\r\n * that object actually are of the passed type\r\n * (no type will be null/undefined)\r\n *\r\n * @param {Any}        value     object to test\r\n * @param {String}     [prop...] property chain to test within value\r\n * @param {Any|String} [type]    type of the object to test for\r\n * @memberOf type\r\n * @return {Boolean} if the object 'is' (see inline documentation)\r\n */\r\nfunction is(value) {\r\n    // If more than two arguments are provided, the value is considered to be\r\n    // nested within a chain of properties starting with the first argument:\r\n    // | is(object,'parent','child','leaf','boolean')\r\n    // will check whether the property object.parent.child.leaf exists and is\r\n    // a boolean.\r\n    //\r\n    // The intent of this method is to replace unsafe guard conditions that\r\n    // rely on type coercion:\r\n    // | if (object && object.parent && object.parent.child) {\r\n    // |   // Issue: all falsy values are treated like null and undefined:\r\n    // |   // '', 0, false...\r\n    // | }\r\n    // with a safer check in a single call:\r\n    // | if ( is(object,'parent','child','number') ) {\r\n    // |   // only null and undefined values are rejected\r\n    // |   // and the type expected (here 'number') is explicit\r\n    // | }\r\n    //\r\n    // Returns:\r\n    //   * false, if no argument is provided\r\n    //   * false, if a single argument is provided which is null or undefined\r\n    //   * true, if a single argument is provided, which is not null/undefined\r\n    //   * if the type argument is a non-empty string, it is compared with the\r\n    //     internal class of the value, put in lower case\r\n    //   * if the type argument is a function, the instanceof operator is used\r\n    //     to check if the value is considered an instance of the function\r\n    //   * otherwise, the value is compared with the provided type using the\r\n    //     strict equality operator ===\r\n    //\r\n    // Notes:\r\n    // This method retrieves the internal class of the provided value using\r\n    // | Object.prototype.toString.call(value).slice(8, -1)\r\n    // The class is then converted to lower case.\r\n    //\r\n    // See \"The Class of an Object\" section in the JavaScript Garden for\r\n    // more details on the internal class:\r\n    // http://bonsaiden.github.com/JavaScript-Garden/#types.typeof\r\n    //\r\n    // The internal class is only guaranteed to be the same in all browsers for\r\n    // Core JavaScript classes defined in ECMAScript. It differs for classes\r\n    // part of the Browser Object Model (BOM) and Document Object Model (DOM):\r\n    // window, document, DOM nodes:\r\n    //\r\n    //   window        - 'Object' (IE), 'Window' (Firefox,Opera),\r\n    //                   'global' (Chrome), 'DOMWindow' (Safari)\r\n    //   document      - 'Object' (IE),\r\n    //                   'HTMLDocument' (Firefox,Chrome,Safari,Opera)\r\n    //   document.body - 'Object' (IE),\r\n    //                   'HTMLBodyElement' (Firefox,Chrome,Safari,Opera)\r\n    //   document.createElement('div') - 'Object' (IE)\r\n    //                   'HTMLDivElement' (Firefox,Chrome,Safari,Opera)\r\n    //   document.createComment('') - 'Object' (IE),\r\n    //                   'Comment' (Firefox,Chrome,Safari,Opera)\r\n\r\n    // do not trust global undefined, which may be overridden\r\n    var undef = void 0,\r\n        i,\r\n        // iterative variable\r\n    length = arguments.length,\r\n        last = length - 1,\r\n        type,\r\n        typeOfType,\r\n        internalClass,\r\n        v = value;\r\n\r\n    if (length === 0) {\r\n        return false; // no argument\r\n    }\r\n\r\n    if (length === 1) {\r\n        return value !== null && value !== undef;\r\n    }\r\n\r\n    if (length > 2) {\r\n        for (i = 0; i < last - 1; i += 1) {\r\n            if (!is(v)) {\r\n                return false;\r\n            }\r\n            v = v[arguments[i + 1]];\r\n        }\r\n    }\r\n\r\n    type = arguments[last];\r\n    if (v === null) {\r\n        return type === null || type === 'null';\r\n    }\r\n    if (v === undef) {\r\n        return type === undef || type === 'undefined';\r\n    }\r\n    if (type === '') {\r\n        return v === type;\r\n    }\r\n\r\n    typeOfType = typeof type === 'undefined' ? 'undefined' : _typeof(type);\r\n    if (typeOfType === 'string') {\r\n        internalClass = Object.prototype.toString.call(v).slice(8, -1).toLowerCase();\r\n        return internalClass === type;\r\n    }\r\n\r\n    if (typeOfType === 'function') {\r\n        return v instanceof type;\r\n    }\r\n\r\n    return v === type;\r\n}\r\n\r\nexports.default = {\r\n    is: is,\r\n    typeOf: typeOf\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.base.type.js\n ** module id = 8\n ** module chunks = 0\n **/","/* global require */\r\n//import extensions from 'scalejs.extensions';\r\n//import common from 'scalejs.metadataFactory-common';\r\nimport modules from 'app/modules';\r\nimport app from 'scalejs.application';\r\nimport ko from 'knockout';\r\n\r\n    app.registerModules(...modules);\r\n    app.run();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./es6/app/app.js\n **/","/*global define,sandbox,mainViewModel */\r\nimport sandbox from 'scalejs.sandbox';\r\nimport mainTemplate from 'html!./main.html';\r\nimport _ from 'lodash';\r\n\r\nsandbox.mvvm.registerTemplates(mainTemplate);    \r\n\r\n    export default function main() {\r\n        var root = sandbox.mvvm.root,\r\n            template = sandbox.mvvm.template,\r\n            // properties\r\n            metadata = sandbox.mvvm.observable({}); // needs to be initialized or currently throws exception\r\n            \r\n        root(template('main_template', {\r\n            metadata: metadata\r\n        }));  \r\n        \r\n        function walkGetTypes(nodes) {\r\n            return (nodes || [])\r\n                .reduce( (types, node) => types.concat([node.type])\r\n                .concat(walkGetTypes(node.children)), []);\r\n        }\r\n        \r\n        function resolveModule(moduleType, done) {\r\n            switch (moduleType) {\r\n                case 'dynamic': \r\n                    require.ensure([], function (require) {\r\n                        require('../dynamic/dynamicModule.js').default();\r\n                        done();\r\n                    });\r\n            }            \r\n        }\r\n        function loadMetadata(md) {\r\n            // first, walk through metadata to gather all types\r\n            var types = _.uniq(walkGetTypes(Array.isArray(md) ? md : [md])).filter(function (type) {\r\n                return type && sandbox.metadataFactory.getRegisteredTypes().indexOf(type) === -1\r\n            });\r\n            console.log(types);\r\n            \r\n            if (types.length === 0) {\r\n                metadata(md);\r\n            } else {\r\n                let counter = 0;\r\n                \r\n                types.forEach(function (type) {\r\n                    resolveModule(type, function () {\r\n                        counter++;\r\n                        if (counter === types.length) {\r\n                            //we loaded all the types! now we can load metadata\r\n                            metadata(md);\r\n                        }\r\n                    })\r\n                });\r\n                \r\n            }    \r\n        }\r\n        \r\n        \r\n        loadMetadata([\r\n            {\r\n                type: 'template',\r\n                template: 'example_children_template',\r\n                children: [\r\n                    {\r\n                        type: 'template',\r\n                        template: 'hello_template',\r\n                        name: 'Erica'\r\n                    },\r\n                    {\r\n                        type: 'template',\r\n                        template: 'hello_template',\r\n                        name: 'Jim'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'template',\r\n                template: 'json_stringify_template',\r\n                message: 'This is a message that got passed',\r\n                endpoint: {\r\n                    url: 'http://jsonplaceholder.typicode.com/posts/1',\r\n                    type: 'get'\r\n                }\r\n            }\r\n        ]);\r\n        \r\n        window.loadMetadata = loadMetadata;\r\n    };\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./es6/app/main/mainModule.js\n **/","import mainModule from 'app/main/mainModule';\r\nimport templateModule from 'app/template/templateModule';\r\n\r\n    export default [\r\n        mainModule,\r\n        templateModule\r\n    ]\n\n\n/** WEBPACK FOOTER **\n ** ./es6/app/modules.js\n **/","import sanbox from 'scalejs.sandbox';\r\nimport templateViewModel from './templateViewModel';\r\nimport template from 'html!./template.html';\r\n\r\nsanbox.mvvm.registerTemplates(template);\r\n\r\nsanbox.metadataFactory.registerViewModels({\r\n    template: templateViewModel\r\n});\n\n\n/** WEBPACK FOOTER **\n ** ./es6/app/template/templateModule.js\n **/","import sandbox from 'scalejs.sandbox';\r\nimport ko from 'knockout';\r\nimport $ from 'jquery';\r\n\r\nvar merge = sandbox.object.merge;\r\n\r\n\r\n    // node is a configuration object from json\r\n    export default function(node) {\r\n        var createViewModels = sandbox.metadataFactory.createViewModels.bind(this), // pass context \r\n            data = ko.observable(),\r\n            mappedChildNodes = createViewModels(node.children || []);\r\n      \r\n        window.data = data;\r\n        \r\n        if (node.endpoint) {\r\n            $.ajax(merge(node.endpoint, {\r\n                success: function (results) {\r\n                    data(results);\r\n                },\r\n                error: function (error) {\r\n                    console.error(error);\r\n                }\r\n            }))\r\n        }\r\n              \r\n        \r\n        return merge(node, {\r\n            data: data,\r\n            mappedChildNodes: mappedChildNodes\r\n        });\r\n    }\n\n\n/** WEBPACK FOOTER **\n ** ./es6/app/template/templateViewModel.js\n **/","import 'scalejs.mvvm';\r\nimport 'extensions/scalejs.metadataFactory';\n\n\n/** WEBPACK FOOTER **\n ** ./es6/extensions/scalejs.extensions.js\n **/","import core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport _ from 'lodash';\r\nimport view from 'html!./metadataFactory.html';\r\n//import moment from 'moment';\r\nimport 'scalejs.mvvm';\r\n//import 'scalejs.expression-jsep';\r\n    \r\n\r\n    core.mvvm.registerTemplates(view);\r\n\r\n    var has = core.object.has,\r\n        is = core.type.is,\r\n        computed = ko.computed,\r\n        evaluate = function () {}, //core.expression.evaluate,\r\n        observable = ko.observable,\r\n        observableArray = ko.observableArray,\r\n        identifiers = {},\r\n        useDefault = true,\r\n        viewModels = {\r\n            '': defaultViewModel,\r\n            context: contextViewModel,\r\n            //template: function (node) {\r\n                // does nothing, provide template\r\n              //  return node;\r\n            //}\r\n        },\r\n        metadataFactory = {};\r\n        \r\n    /*\r\n     * Metadata Creation Functions\r\n     */\r\n\r\n    function createViewModel(node) {\r\n        var rendered = observable(true),\r\n            context = this;\r\n\r\n        node = _.cloneDeep(node); //clone the node to stop mutation issues\r\n\r\n        // if(!this || !this.metadata) {\r\n        //     console.warn('Creating viewmodel without metadata context. If metadata context is desired, call this function using \"this\"');\r\n        // }\r\n        if (node && node.type === 'ignore' ) {\r\n            console.log('ignored node ', node);\r\n        } else {\r\n            var mappedNode = viewModels[node.type] ? viewModels[node.type].call(this, node) : defaultViewModel.call(this, node);\r\n\r\n\r\n            if (mappedNode && has(node.rendered)) {\r\n                rendered = is(node.rendered, 'boolean') ? observable(node.rendered)\r\n                    : computed(function() {\r\n                        return evaluate(node.rendered, function (id) {\r\n                            if (context.getValue && has(context.getValue(id))) {\r\n                                return context.getValue(id);\r\n                            }\r\n                            if (id === 'role') {\r\n                                return core.userservice.role();\r\n                            }\r\n                            return '';\r\n                        })\r\n                    });\r\n            }\r\n            if (mappedNode) {\r\n                mappedNode.type = mappedNode.type || node.type;\r\n                mappedNode.rendered = rendered;\r\n            }\r\n            return mappedNode;\r\n        }\r\n    }\r\n\r\n    function createViewModels(metadata) {\r\n        var metadataContext;\r\n\r\n        // if(!this || !this.metadata) {\r\n        //     console.warn('A new instance of metadata has been detected, therefore a new context will be created');\r\n        // }\r\n\r\n        // allows all viewmodels created in the same instane of metadata\r\n        // to share context (as long as createViewModels is called correctly)\r\n        if (this && this.metadata) {\r\n            metadataContext = this;\r\n        } else {\r\n            metadataContext = {\r\n                metadata: metadata,\r\n                // default getValue can grab from the store\r\n                getValue: function (id) {\r\n                    if (id === 'store' && core.noticeboard.global) {\r\n                        return ko.unwrap(core.noticeboard.global.dictionary);\r\n                    }\r\n                    if (id === '_') {\r\n                        return _;\r\n                    }\r\n                    // if (id == 'Date') {\r\n                    //     return function (d) {\r\n                    //         return  moment(d).toDate().getTime();\r\n                    //     }\r\n                    // }\r\n                    // if (id == 'IncrementDate') {\r\n                    //     return function (d,t,s) {\r\n                    //         return moment(d).add(t,s).toDate().getTime();\r\n                    //     }\r\n                    // }\r\n                    return identifiers[id];\r\n                }\r\n            };\r\n        }\r\n\r\n        return metadata.map(function (item) {\r\n            return createViewModel.call(metadataContext, item)\r\n        }).filter(function (vm) {\r\n            // filter undefined or null from the viewmodels array\r\n            return has(vm);\r\n        });\r\n    }\r\n\r\n    function createTemplate(metadata, context) {\r\n        if(!metadata) {\r\n            return core.mvvm.template('metadata_loading_template');\r\n        }\r\n        if (!Array.isArray(metadata)) {\r\n            metadata = [metadata];\r\n        }\r\n\r\n        var viewModels =  !context ? createViewModels(metadata) : createViewModels.call(context, metadata);\r\n\r\n        return core.mvvm.template('metadata_items_template', viewModels);\r\n    }\r\n    \r\n    function dispose(metadata) {\r\n        // clean up clean up everybody everywhere\r\n        ko.unwrap(metadata).forEach(function (node) {\r\n            if(node.dispose) {\r\n                node.dispose();\r\n            }\r\n            dispose(node.mappedChildNodes || []);\r\n        })\r\n    }\r\n    \r\n    /*\r\n     * Default ViewModels\r\n     */\r\n\r\n    function contextViewModel(node) {\r\n        var newContextProps = {};\r\n        Object.keys(node).forEach(function (prop) {\r\n            if (prop === 'type') { return; }\r\n            if (Array.isArray(node[prop])) {\r\n                newContextProps[prop] = observableArray(node[prop]);\r\n            } else {\r\n                newContextProps[prop] = observable(node[prop]);\r\n            }\r\n        });\r\n        core.object.extend(this, newContextProps);\r\n    }\r\n    \r\n    function defaultViewModel(node) {\r\n        if(!useDefault) {\r\n            return;\r\n        }\r\n        return core.object.merge(node, {\r\n            template: 'metadata_default_template'\r\n        });\r\n    }\r\n    \r\n    /*\r\n     * Registration Functions\r\n     */\r\n\r\n    function registerViewModels(newViewModels) {\r\n        core.object.extend(viewModels, newViewModels);\r\n    }\r\n    \r\n    function getRegisteredTypes() {\r\n        return Object.keys(viewModels);\r\n    }\r\n    \r\n\r\n    function registerIdentifiers(ids) {\r\n        core.object.extend(identifiers, ids);\r\n    }\r\n\r\n\r\n    /*\r\n     * Knockout Binding\r\n     */\r\n    ko.bindingHandlers.metadataFactory = {\r\n        init: function () {\r\n            return { controlsDescendantBindings: true };\r\n        },\r\n        update: function (\r\n            element,\r\n            valueAccessor,\r\n            allBindings,\r\n            viewModel,\r\n            bindingContext\r\n        ) {\r\n\r\n\r\n            var metadata = ko.unwrap(valueAccessor()).metadata ? ko.unwrap(valueAccessor()).metadata : ko.unwrap(valueAccessor()),\r\n                context = ko.unwrap(valueAccessor()).context ? ko.unwrap(valueAccessor()).context : null,\r\n                prevMetadata;\r\n\r\n            function disposeMetadata() {\r\n                prevMetadata = ko.utils.domData.get(element, 'metadata');\r\n\r\n                if (prevMetadata) {\r\n                    prevMetadata = Array.isArray(prevMetadata) ? prevMetadata : [prevMetadata];\r\n                    dispose(prevMetadata);\r\n                }\r\n            }\r\n\r\n\r\n            setTimeout(function () {\r\n                var metadataTemplate = createTemplate(metadata, context).template;\r\n\r\n                disposeMetadata();\r\n\r\n                ko.utils.domData.set(element,'metadata', metadataTemplate.data);\r\n\r\n                ko.bindingHandlers.template.update(\r\n                    element,\r\n                    function () {\r\n                        return metadataTemplate;\r\n                    },\r\n                    allBindings,\r\n                    viewModel,\r\n                    bindingContext\r\n                );\r\n\r\n                // first time running - set dom node disposal\r\n                if (!prevMetadata) {\r\n                    ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n                        disposeMetadata();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    \r\n    export default core.registerExtension({\r\n        metadataFactory: {\r\n            createTemplate,\r\n            registerViewModels,\r\n            createViewModels,\r\n            createViewModel,\r\n            useDefault,\r\n            registerIdentifiers,\r\n            getRegisteredTypes\r\n        }\r\n    })\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./es6/extensions/scalejs.metadataFactory.js\n **/","module.exports = \"<div id=main_template> Hello World I am a es6/webpack Scalejs Application! <div data-bind=\\\"metadataFactory: metadata\\\"></div> </div> <div id=test_template> I am a metadata-driven template. Hi, <span data-bind=\\\"text: $data.name\\\"></span> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-loader!./es6/app/main/main.html\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = \"<div id=hello_template> Hello <span data-bind=\\\"text: name\\\"></span>. </div> <div id=example_children_template> I welcome my children. </div> <div id=json_stringify_template> <pre data-bind=\\\"text: JSON.stringify(data(), null, 2)\\\"></pre> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-loader!./es6/app/template/template.html\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = \"<div id=metadata_items_template> </div> <div id=metadata_item_template> </div> <div id=metadata_default_template> <div data-bind=\\\"text: JSON.stringify($data)\\\"></div> </div> <div id=metadata_loading_template> <div class=\\\"loader hexdots-loader\\\"> loading... </div> </div> <div id=no_template> <div data-bind=\\\"template: { name: 'metadata_items_template', data: mappedChildNodes}\\\"></div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-loader!./es6/extensions/metadataFactory.html\n ** module id = 21\n ** module chunks = 0\n **/","/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t// Support: Opera 12.1x only\n\t// Fall back to style even without computed\n\t// computed is undefined for elems on document fragments\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\tret = jQuery.style( elem, name );\n\t}\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jquery/dist/jquery.js\n ** module id = 22\n ** module chunks = 0\n **/","(function (factory) {\r\n    // Module systems magic dance.\r\n\r\n    if (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\r\n        // CommonJS or Node: hard-coded dependency on \"knockout\"\r\n        factory(require(\"knockout\"), exports);\r\n    } else if (typeof define === \"function\" && define[\"amd\"]) {\r\n        // AMD anonymous module with hard-coded dependency on \"knockout\"\r\n        define([\"knockout\", \"exports\"], factory);\r\n    } else {\r\n        // <script> tag: use the global `ko` object, attaching a `mapping` property\r\n        factory(ko, ko.mapping = {});\r\n    }\r\n}(function (ko, exports) {\r\n    var DEBUG = true;\r\n    var mappingProperty = \"__ko_mapping__\";\r\n    var realKoDependentObservable = ko.dependentObservable;\r\n    var mappingNesting = 0;\r\n    var dependentObservables;\r\n    var visitedObjects;\r\n    var recognizedRootProperties = [\"create\", \"update\", \"key\", \"arrayChanged\"];\r\n    var emptyReturn = {};\r\n\r\n    var _defaultOptions = {\r\n        include: [\"_destroy\"],\r\n        ignore: [],\r\n        copy: [],\r\n        observe: []\r\n    };\r\n    var defaultOptions = _defaultOptions;\r\n\r\n    function unionArrays() {\r\n        var args = arguments,\r\n        l = args.length,\r\n        obj = {},\r\n        res = [],\r\n        i, j, k;\r\n\r\n        while (l--) {\r\n            k = args[l];\r\n            i = k.length;\r\n\r\n            while (i--) {\r\n                j = k[i];\r\n                if (!obj[j]) {\r\n                    obj[j] = 1;\r\n                    res.push(j);\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function extendObject(destination, source) {\r\n        var destType;\r\n\r\n        for (var key in source) {\r\n            if (source.hasOwnProperty(key) && source[key]) {\r\n                destType = exports.getType(destination[key]);\r\n                if (key && destination[key] && destType !== \"array\" && destType !== \"string\") {\r\n                    extendObject(destination[key], source[key]);\r\n                } else {\r\n                    var bothArrays = exports.getType(destination[key]) === \"array\" && exports.getType(source[key]) === \"array\";\r\n                    if (bothArrays) {\r\n                        destination[key] = unionArrays(destination[key], source[key]);\r\n                    } else {\r\n                        destination[key] = source[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function merge(obj1, obj2) {\r\n        var merged = {};\r\n        extendObject(merged, obj1);\r\n        extendObject(merged, obj2);\r\n\r\n        return merged;\r\n    }\r\n\r\n    exports.isMapped = function (viewModel) {\r\n        var unwrapped = ko.utils.unwrapObservable(viewModel);\r\n        return unwrapped && unwrapped[mappingProperty];\r\n    };\r\n\r\n    exports.fromJS = function (jsObject /*, inputOptions, target*/ ) {\r\n        if (!arguments.length) throw new Error(\"When calling ko.mapping.fromJS, pass the object you want to convert.\");\r\n\r\n        try {\r\n            if (!mappingNesting++) {\r\n                dependentObservables = [];\r\n                visitedObjects = new objectLookup();\r\n            }\r\n\r\n            var options;\r\n            var target;\r\n\r\n            if (arguments.length == 2) {\r\n                if (arguments[1][mappingProperty]) {\r\n                    target = arguments[1];\r\n                } else {\r\n                    options = arguments[1];\r\n                }\r\n            }\r\n            if (arguments.length == 3) {\r\n                options = arguments[1];\r\n                target = arguments[2];\r\n            }\r\n\r\n            if (target) {\r\n                options = merge(options, target[mappingProperty]);\r\n            }\r\n            options = fillOptions(options);\r\n\r\n            var result = updateViewModel(target, jsObject, options);\r\n            if (target) {\r\n                result = target;\r\n            }\r\n\r\n            // Evaluate any dependent observables that were proxied.\r\n            // Do this after the model's observables have been created\r\n            if (!--mappingNesting) {\r\n                while (dependentObservables.length) {\r\n                    var DO = dependentObservables.pop();\r\n                    if (DO) {\r\n                        DO();\r\n\r\n                        // Move this magic property to the underlying dependent observable\r\n                        DO.__DO[\"throttleEvaluation\"] = DO[\"throttleEvaluation\"];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Save any new mapping options in the view model, so that updateFromJS can use them later.\r\n            result[mappingProperty] = merge(result[mappingProperty], options);\r\n\r\n            return result;\r\n        } catch(e) {\r\n            mappingNesting = 0;\r\n            throw e;\r\n        }\r\n    };\r\n\r\n    exports.fromJSON = function (jsonString /*, options, target*/ ) {\r\n        var parsed = ko.utils.parseJson(jsonString);\r\n        var argArray = Array.prototype.slice.call(arguments);\r\n        argArray[0] = parsed;\r\n        return exports.fromJS.apply(this, argArray);\r\n    };\r\n\r\n    exports.updateFromJS = function (viewModel) {\r\n        throw new Error(\"ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!\");\r\n    };\r\n\r\n    exports.updateFromJSON = function (viewModel) {\r\n        throw new Error(\"ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!\");\r\n    };\r\n\r\n    exports.toJS = function (rootObject, options) {\r\n        if (!defaultOptions) exports.resetDefaultOptions();\r\n\r\n        if (!arguments.length) throw new Error(\"When calling ko.mapping.toJS, pass the object you want to convert.\");\r\n        if (exports.getType(defaultOptions.ignore) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().ignore should be an array.\");\r\n        if (exports.getType(defaultOptions.include) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().include should be an array.\");\r\n        if (exports.getType(defaultOptions.copy) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().copy should be an array.\");\r\n\r\n        // Merge in the options used in fromJS\r\n        options = fillOptions(options, rootObject[mappingProperty]);\r\n\r\n        // We just unwrap everything at every level in the object graph\r\n        return exports.visitModel(rootObject, function (x) {\r\n            return ko.utils.unwrapObservable(x);\r\n        }, options);\r\n    };\r\n\r\n    exports.toJSON = function (rootObject, options) {\r\n        var plainJavaScriptObject = exports.toJS(rootObject, options);\r\n        return ko.utils.stringifyJson(plainJavaScriptObject);\r\n    };\r\n\r\n    exports.defaultOptions = function () {\r\n        if (arguments.length > 0) {\r\n            defaultOptions = arguments[0];\r\n        } else {\r\n            return defaultOptions;\r\n        }\r\n    };\r\n\r\n    exports.resetDefaultOptions = function () {\r\n        defaultOptions = {\r\n            include: _defaultOptions.include.slice(0),\r\n            ignore: _defaultOptions.ignore.slice(0),\r\n            copy: _defaultOptions.copy.slice(0),\r\n            observe: _defaultOptions.observe.slice(0)\r\n        };\r\n    };\r\n\r\n    exports.getType = function(x) {\r\n        if ((x) && (typeof (x) === \"object\")) {\r\n            if (x.constructor === Date) return \"date\";\r\n            if (x.constructor === Array) return \"array\";\r\n        }\r\n        return typeof x;\r\n    };\r\n\r\n    function fillOptions(rawOptions, otherOptions) {\r\n        var options = merge({}, rawOptions);\r\n\r\n        // Move recognized root-level properties into a root namespace\r\n        for (var i = recognizedRootProperties.length - 1; i >= 0; i--) {\r\n            var property = recognizedRootProperties[i];\r\n\r\n            // Carry on, unless this property is present\r\n            if (!options[property]) continue;\r\n\r\n            // Move the property into the root namespace\r\n            if (!(options[\"\"] instanceof Object)) options[\"\"] = {};\r\n            options[\"\"][property] = options[property];\r\n            delete options[property];\r\n        }\r\n\r\n        if (otherOptions) {\r\n            options.ignore = mergeArrays(otherOptions.ignore, options.ignore);\r\n            options.include = mergeArrays(otherOptions.include, options.include);\r\n            options.copy = mergeArrays(otherOptions.copy, options.copy);\r\n            options.observe = mergeArrays(otherOptions.observe, options.observe);\r\n        }\r\n        options.ignore = mergeArrays(options.ignore, defaultOptions.ignore);\r\n        options.include = mergeArrays(options.include, defaultOptions.include);\r\n        options.copy = mergeArrays(options.copy, defaultOptions.copy);\r\n        options.observe = mergeArrays(options.observe, defaultOptions.observe);\r\n\r\n        options.mappedProperties = options.mappedProperties || {};\r\n        options.copiedProperties = options.copiedProperties || {};\r\n        return options;\r\n    }\r\n\r\n    function mergeArrays(a, b) {\r\n        if (exports.getType(a) !== \"array\") {\r\n            if (exports.getType(a) === \"undefined\") a = [];\r\n            else a = [a];\r\n        }\r\n        if (exports.getType(b) !== \"array\") {\r\n            if (exports.getType(b) === \"undefined\") b = [];\r\n            else b = [b];\r\n        }\r\n\r\n        return ko.utils.arrayGetDistinctValues(a.concat(b));\r\n    }\r\n\r\n    // When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.\r\n    // The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.\r\n    function withProxyDependentObservable(dependentObservables, callback) {\r\n        var localDO = ko.dependentObservable;\r\n        ko.dependentObservable = function (read, owner, options) {\r\n            options = options || {};\r\n\r\n            if (read && typeof read == \"object\") { // mirrors condition in knockout implementation of DO's\r\n                options = read;\r\n            }\r\n\r\n            var realDeferEvaluation = options.deferEvaluation;\r\n\r\n            var isRemoved = false;\r\n\r\n            // We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has\r\n            // completed if the user already evaluated the DO themselves in the meantime.\r\n            var wrap = function (DO) {\r\n                // Temporarily revert ko.dependentObservable, since it is used in ko.isWriteableObservable\r\n                var tmp = ko.dependentObservable;\r\n                ko.dependentObservable = realKoDependentObservable;\r\n                var isWriteable = ko.isWriteableObservable(DO);\r\n                ko.dependentObservable = tmp;\r\n\r\n                var wrapped = realKoDependentObservable({\r\n                    read: function () {\r\n                        if (!isRemoved) {\r\n                            ko.utils.arrayRemoveItem(dependentObservables, DO);\r\n                            isRemoved = true;\r\n                        }\r\n                        return DO.apply(DO, arguments);\r\n                    },\r\n                    write: isWriteable && function (val) {\r\n                        return DO(val);\r\n                    },\r\n                    deferEvaluation: true\r\n                });\r\n                if (DEBUG) wrapped._wrapper = true;\r\n                wrapped.__DO = DO;\r\n                return wrapped;\r\n            };\r\n\r\n            options.deferEvaluation = true; // will either set for just options, or both read/options.\r\n            var realDependentObservable = new realKoDependentObservable(read, owner, options);\r\n\r\n            if (!realDeferEvaluation) {\r\n                realDependentObservable = wrap(realDependentObservable);\r\n                dependentObservables.push(realDependentObservable);\r\n            }\r\n\r\n            return realDependentObservable;\r\n        };\r\n        ko.dependentObservable.fn = realKoDependentObservable.fn;\r\n        ko.computed = ko.dependentObservable;\r\n        var result = callback();\r\n        ko.dependentObservable = localDO;\r\n        ko.computed = ko.dependentObservable;\r\n        return result;\r\n    }\r\n\r\n    function updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName, mappedParent) {\r\n        var isArray = exports.getType(ko.utils.unwrapObservable(rootObject)) === \"array\";\r\n\r\n        parentPropertyName = parentPropertyName || \"\";\r\n\r\n        // If this object was already mapped previously, take the options from there and merge them with our existing ones.\r\n        if (exports.isMapped(mappedRootObject)) {\r\n            var previousMapping = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];\r\n            options = merge(previousMapping, options);\r\n        }\r\n\r\n        var callbackParams = {\r\n            data: rootObject,\r\n            parent: mappedParent || parent\r\n        };\r\n\r\n        var hasCreateCallback = function () {\r\n            return options[parentName] && options[parentName].create instanceof Function;\r\n        };\r\n\r\n        var createCallback = function (data) {\r\n            return withProxyDependentObservable(dependentObservables, function () {\r\n\r\n                if (ko.utils.unwrapObservable(parent) instanceof Array) {\r\n                    return options[parentName].create({\r\n                        data: data || callbackParams.data,\r\n                        parent: callbackParams.parent,\r\n                        skip: emptyReturn\r\n                    });\r\n                } else {\r\n                    return options[parentName].create({\r\n                        data: data || callbackParams.data,\r\n                        parent: callbackParams.parent\r\n                    });\r\n                }\r\n            });\r\n        };\r\n\r\n        var hasUpdateCallback = function () {\r\n            return options[parentName] && options[parentName].update instanceof Function;\r\n        };\r\n\r\n        var updateCallback = function (obj, data) {\r\n            var params = {\r\n                data: data || callbackParams.data,\r\n                parent: callbackParams.parent,\r\n                target: ko.utils.unwrapObservable(obj)\r\n            };\r\n\r\n            if (ko.isWriteableObservable(obj)) {\r\n                params.observable = obj;\r\n            }\r\n\r\n            return options[parentName].update(params);\r\n        };\r\n\r\n        var alreadyMapped = visitedObjects.get(rootObject);\r\n        if (alreadyMapped) {\r\n            return alreadyMapped;\r\n        }\r\n\r\n        parentName = parentName || \"\";\r\n\r\n        if (!isArray) {\r\n            // For atomic types, do a direct update on the observable\r\n            if (!canHaveProperties(rootObject)) {\r\n                switch (exports.getType(rootObject)) {\r\n                case \"function\":\r\n                    if (hasUpdateCallback()) {\r\n                        if (ko.isWriteableObservable(rootObject)) {\r\n                            rootObject(updateCallback(rootObject));\r\n                            mappedRootObject = rootObject;\r\n                        } else {\r\n                            mappedRootObject = updateCallback(rootObject);\r\n                        }\r\n                    } else {\r\n                        mappedRootObject = rootObject;\r\n                    }\r\n                    break;\r\n                default:\r\n                    var valueToWrite;\r\n                    if (ko.isWriteableObservable(mappedRootObject)) {\r\n                        if (hasUpdateCallback()) {\r\n                            valueToWrite = updateCallback(mappedRootObject);\r\n                            mappedRootObject(valueToWrite);\r\n                            return valueToWrite;\r\n                        } else {\r\n                            valueToWrite = ko.utils.unwrapObservable(rootObject);\r\n                            mappedRootObject(valueToWrite);\r\n                            return valueToWrite;\r\n                        }\r\n                    } else {\r\n                        var hasCreateOrUpdateCallback = hasCreateCallback() || hasUpdateCallback();\r\n\r\n                        if (hasCreateCallback()) {\r\n                            mappedRootObject = createCallback();\r\n                        } else {\r\n                            mappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));\r\n                        }\r\n\r\n                        if (hasUpdateCallback()) {\r\n                            mappedRootObject(updateCallback(mappedRootObject));\r\n                        }\r\n\r\n                        if (hasCreateOrUpdateCallback) return mappedRootObject;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                mappedRootObject = ko.utils.unwrapObservable(mappedRootObject);\r\n                if (!mappedRootObject) {\r\n                    if (hasCreateCallback()) {\r\n                        var result = createCallback();\r\n\r\n                        if (hasUpdateCallback()) {\r\n                            result = updateCallback(result);\r\n                        }\r\n\r\n                        return result;\r\n                    } else {\r\n                        if (hasUpdateCallback()) {\r\n                            return updateCallback(result);\r\n                        }\r\n\r\n                        mappedRootObject = {};\r\n                    }\r\n                }\r\n\r\n                if (hasUpdateCallback()) {\r\n                    mappedRootObject = updateCallback(mappedRootObject);\r\n                }\r\n\r\n                visitedObjects.save(rootObject, mappedRootObject);\r\n                if (hasUpdateCallback()) return mappedRootObject;\r\n\r\n                // For non-atomic types, visit all properties and update recursively\r\n                visitPropertiesOrArrayEntries(rootObject, function (indexer) {\r\n                    var fullPropertyName = parentPropertyName.length ? parentPropertyName + \".\" + indexer : indexer;\r\n\r\n                    if (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {\r\n                        return;\r\n                    }\r\n\r\n                    if (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {\r\n                        mappedRootObject[indexer] = rootObject[indexer];\r\n                        return;\r\n                    }\r\n\r\n                    if(typeof rootObject[indexer] != \"object\" && typeof rootObject[indexer] != \"array\" && options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\r\n                    {\r\n                        mappedRootObject[indexer] = rootObject[indexer];\r\n                        options.copiedProperties[fullPropertyName] = true;\r\n                        return;\r\n                    }\r\n\r\n                    // In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.\r\n                    // If this is a property that was generated by fromJS, we should use the options specified there\r\n                    var prevMappedProperty = visitedObjects.get(rootObject[indexer]);\r\n                    var retval = updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName, mappedRootObject);\r\n                    var value = prevMappedProperty || retval;\r\n\r\n                    if(options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\r\n                    {\r\n                        mappedRootObject[indexer] = ko.utils.unwrapObservable(value);\r\n                        options.copiedProperties[fullPropertyName] = true;\r\n                        return;\r\n                    }\r\n\r\n                    if (ko.isWriteableObservable(mappedRootObject[indexer])) {\r\n                        value = ko.utils.unwrapObservable(value);\r\n                        if (mappedRootObject[indexer]() !== value) {\r\n                            mappedRootObject[indexer](value);\r\n                        }\r\n                    } else {\r\n                        value = mappedRootObject[indexer] === undefined ? value : ko.utils.unwrapObservable(value);\r\n                        mappedRootObject[indexer] = value;\r\n                    }\r\n\r\n                    options.mappedProperties[fullPropertyName] = true;\r\n                });\r\n            }\r\n        } else { //mappedRootObject is an array\r\n            var changes = [];\r\n\r\n            var hasKeyCallback = false;\r\n            var keyCallback = function (x) {\r\n                return x;\r\n            };\r\n            if (options[parentName] && options[parentName].key) {\r\n                keyCallback = options[parentName].key;\r\n                hasKeyCallback = true;\r\n            }\r\n\r\n            if (!ko.isObservable(mappedRootObject)) {\r\n                // When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.\r\n                mappedRootObject = ko.observableArray([]);\r\n\r\n                mappedRootObject.mappedRemove = function (valueOrPredicate) {\r\n                    var predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\r\n                            return value === keyCallback(valueOrPredicate);\r\n                        };\r\n                    return mappedRootObject.remove(function (item) {\r\n                        return predicate(keyCallback(item));\r\n                    });\r\n                };\r\n\r\n                mappedRootObject.mappedRemoveAll = function (arrayOfValues) {\r\n                    var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\r\n                    return mappedRootObject.remove(function (item) {\r\n                        return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\r\n                    });\r\n                };\r\n\r\n                mappedRootObject.mappedDestroy = function (valueOrPredicate) {\r\n                    var predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\r\n                            return value === keyCallback(valueOrPredicate);\r\n                        };\r\n                    return mappedRootObject.destroy(function (item) {\r\n                        return predicate(keyCallback(item));\r\n                    });\r\n                };\r\n\r\n                mappedRootObject.mappedDestroyAll = function (arrayOfValues) {\r\n                    var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\r\n                    return mappedRootObject.destroy(function (item) {\r\n                        return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\r\n                    });\r\n                };\r\n\r\n                mappedRootObject.mappedIndexOf = function (item) {\r\n                    var keys = filterArrayByKey(mappedRootObject(), keyCallback);\r\n                    var key = keyCallback(item);\r\n                    return ko.utils.arrayIndexOf(keys, key);\r\n                };\r\n\r\n                mappedRootObject.mappedGet = function (item) {\r\n                    return mappedRootObject()[mappedRootObject.mappedIndexOf(item)];\r\n                };\r\n\r\n                mappedRootObject.mappedCreate = function (value) {\r\n                    if (mappedRootObject.mappedIndexOf(value) !== -1) {\r\n                        throw new Error(\"There already is an object with the key that you specified.\");\r\n                    }\r\n\r\n                    var item = hasCreateCallback() ? createCallback(value) : value;\r\n                    if (hasUpdateCallback()) {\r\n                        var newValue = updateCallback(item, value);\r\n                        if (ko.isWriteableObservable(item)) {\r\n                            item(newValue);\r\n                        } else {\r\n                            item = newValue;\r\n                        }\r\n                    }\r\n                    mappedRootObject.push(item);\r\n                    return item;\r\n                };\r\n            }\r\n\r\n            var currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();\r\n            var newArrayKeys = filterArrayByKey(rootObject, keyCallback);\r\n            if (hasKeyCallback) newArrayKeys.sort();\r\n            var editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);\r\n\r\n            var ignoreIndexOf = {};\r\n\r\n            var i;\r\n            var j;\r\n\r\n            var key;\r\n            var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\r\n            var itemsByKey = {};\r\n            var optimizedKeys = true;\r\n            for (i = 0, j = unwrappedRootObject.length; i < j; i++) {\r\n                key = keyCallback(unwrappedRootObject[i]);\r\n                if (key === undefined || key instanceof Object) {\r\n                    optimizedKeys = false;\r\n                    break;\r\n                }\r\n                itemsByKey[key] = unwrappedRootObject[i];\r\n            }\r\n\r\n            var newContents = [];\r\n            var passedOver = 0;\r\n            for (i = 0, j = editScript.length; i < j; i++) {\r\n                key = editScript[i];\r\n                var mappedItem;\r\n                var fullPropertyName = parentPropertyName + \"[\" + i + \"]\";\r\n                var item;\r\n                var index;\r\n                switch (key.status) {\r\n                case \"added\":\r\n                    item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\r\n                    mappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName, parent);\r\n                    if(!hasCreateCallback()) {\r\n                        mappedItem = ko.utils.unwrapObservable(mappedItem);\r\n                    }\r\n\r\n                    index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\r\n\r\n                    if (mappedItem === emptyReturn) {\r\n                        passedOver++;\r\n                    } else {\r\n                        newContents[index - passedOver] = mappedItem;\r\n                    }\r\n\r\n                    ignoreIndexOf[index] = true;\r\n                    break;\r\n                case \"retained\":\r\n                    item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\r\n                    mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\r\n                    updateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName, parent);\r\n\r\n                    index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\r\n                    newContents[index] = mappedItem;\r\n                    ignoreIndexOf[index] = true;\r\n                    break;\r\n                case \"deleted\":\r\n                    mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\r\n                    break;\r\n                }\r\n\r\n                changes.push({\r\n                    event: key.status,\r\n                    item: mappedItem\r\n                });\r\n            }\r\n\r\n            mappedRootObject(newContents);\r\n\r\n            if (options[parentName] && options[parentName].arrayChanged) {\r\n                ko.utils.arrayForEach(changes, function (change) {\r\n                    options[parentName].arrayChanged(change.event, change.item);\r\n                });\r\n            }\r\n        }\r\n\r\n        return mappedRootObject;\r\n    }\r\n\r\n    function ignorableIndexOf(array, item, ignoreIndices) {\r\n        for (var i = 0, j = array.length; i < j; i++) {\r\n            if (ignoreIndices[i] === true) continue;\r\n            if (array[i] === item) return i;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function mapKey(item, callback) {\r\n        var mappedItem;\r\n        if (callback) mappedItem = callback(item);\r\n        if (exports.getType(mappedItem) === \"undefined\") mappedItem = item;\r\n\r\n        return ko.utils.unwrapObservable(mappedItem);\r\n    }\r\n\r\n    function getItemByKey(array, key, callback) {\r\n        array = ko.utils.unwrapObservable(array);\r\n        for (var i = 0, j = array.length; i < j; i++) {\r\n            var item = array[i];\r\n            if (mapKey(item, callback) === key) return item;\r\n        }\r\n\r\n        throw new Error(\"When calling ko.update*, the key '\" + key + \"' was not found!\");\r\n    }\r\n\r\n    function filterArrayByKey(array, callback) {\r\n        return ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {\r\n            if (callback) {\r\n                return mapKey(item, callback);\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n    }\r\n\r\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\r\n        if (exports.getType(rootObject) === \"array\") {\r\n            for (var i = 0; i < rootObject.length; i++)\r\n            visitorCallback(i);\r\n        } else {\r\n            for (var propertyName in rootObject)\r\n            visitorCallback(propertyName);\r\n        }\r\n    }\r\n\r\n    function canHaveProperties(object) {\r\n        var type = exports.getType(object);\r\n        return ((type === \"object\") || (type === \"array\")) && (object !== null);\r\n    }\r\n\r\n    // Based on the parentName, this creates a fully classified name of a property\r\n\r\n    function getPropertyName(parentName, parent, indexer) {\r\n        var propertyName = parentName || \"\";\r\n        if (exports.getType(parent) === \"array\") {\r\n            if (parentName) {\r\n                propertyName += \"[\" + indexer + \"]\";\r\n            }\r\n        } else {\r\n            if (parentName) {\r\n                propertyName += \".\";\r\n            }\r\n            propertyName += indexer;\r\n        }\r\n        return propertyName;\r\n    }\r\n\r\n    exports.visitModel = function (rootObject, callback, options) {\r\n        options = options || {};\r\n        options.visitedObjects = options.visitedObjects || new objectLookup();\r\n\r\n        var mappedRootObject;\r\n        var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\r\n\r\n        if (!canHaveProperties(unwrappedRootObject)) {\r\n            return callback(rootObject, options.parentName);\r\n        } else {\r\n            options = fillOptions(options, unwrappedRootObject[mappingProperty]);\r\n\r\n            // Only do a callback, but ignore the results\r\n            callback(rootObject, options.parentName);\r\n            mappedRootObject = exports.getType(unwrappedRootObject) === \"array\" ? [] : {};\r\n        }\r\n\r\n        options.visitedObjects.save(rootObject, mappedRootObject);\r\n\r\n        var parentName = options.parentName;\r\n        visitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {\r\n            if (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;\r\n\r\n            var propertyValue = unwrappedRootObject[indexer];\r\n            options.parentName = getPropertyName(parentName, unwrappedRootObject, indexer);\r\n\r\n            // If we don't want to explicitly copy the unmapped property...\r\n            if (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {\r\n                // ...find out if it's a property we want to explicitly include\r\n                if (ko.utils.arrayIndexOf(options.include, indexer) === -1) {\r\n                    // The mapped properties object contains all the properties that were part of the original object.\r\n                    // If a property does not exist, and it is not because it is part of an array (e.g. \"myProp[3]\"), then it should not be unmapped.\r\n                    if (unwrappedRootObject[mappingProperty] &&\r\n                        unwrappedRootObject[mappingProperty].mappedProperties &&\r\n                        !unwrappedRootObject[mappingProperty].mappedProperties[indexer] &&\r\n                        unwrappedRootObject[mappingProperty].copiedProperties &&\r\n                        !unwrappedRootObject[mappingProperty].copiedProperties[indexer] &&\r\n                        exports.getType(unwrappedRootObject) !== \"array\")\r\n                    {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var outputProperty;\r\n            switch (exports.getType(ko.utils.unwrapObservable(propertyValue))) {\r\n            case \"object\":\r\n            case \"array\":\r\n            case \"undefined\":\r\n                var previouslyMappedValue = options.visitedObjects.get(propertyValue);\r\n                mappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== \"undefined\") ? previouslyMappedValue : exports.visitModel(propertyValue, callback, options);\r\n                break;\r\n            default:\r\n                mappedRootObject[indexer] = callback(propertyValue, options.parentName);\r\n            }\r\n        });\r\n\r\n        return mappedRootObject;\r\n    };\r\n\r\n    function simpleObjectLookup() {\r\n        var keys = [];\r\n        var values = [];\r\n        this.save = function (key, value) {\r\n            var existingIndex = ko.utils.arrayIndexOf(keys, key);\r\n            if (existingIndex >= 0) values[existingIndex] = value;\r\n            else {\r\n                keys.push(key);\r\n                values.push(value);\r\n            }\r\n        };\r\n        this.get = function (key) {\r\n            var existingIndex = ko.utils.arrayIndexOf(keys, key);\r\n            var value = (existingIndex >= 0) ? values[existingIndex] : undefined;\r\n            return value;\r\n        };\r\n    }\r\n\r\n    function objectLookup() {\r\n        var buckets = {};\r\n\r\n        var findBucket = function(key) {\r\n            var bucketKey;\r\n            try {\r\n                bucketKey = key;//JSON.stringify(key);\r\n            }\r\n            catch (e) {\r\n                bucketKey = \"$$$\";\r\n            }\r\n\r\n            var bucket = buckets[bucketKey];\r\n            if (bucket === undefined) {\r\n                bucket = new simpleObjectLookup();\r\n                buckets[bucketKey] = bucket;\r\n            }\r\n            return bucket;\r\n        };\r\n\r\n        this.save = function (key, value) {\r\n            findBucket(key).save(key, value);\r\n        };\r\n        this.get = function (key) {\r\n            return findBucket(key).get(key);\r\n        };\r\n    }\r\n}));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/knockout.mapping/knockout.mapping.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _scalejs = require('scalejs.core');\r\n\r\nvar _scalejs2 = _interopRequireDefault(_scalejs);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar addOne = _scalejs2.default.array.addOne,\r\n    toArray = _scalejs2.default.array.toArray,\r\n    error = _scalejs2.default.log.error,\r\n    debug = _scalejs2.default.log.debug,\r\n\r\n\r\n/**\r\n * Holds modules that have been registered to the application\r\n * @property moduleRegistrations\r\n * @type Array\r\n * @memberOf applciation\r\n * @private\r\n */\r\nmoduleRegistrations = [],\r\n\r\n/**\r\n * Holds instances of running modules\r\n * @property moduleInstances\r\n * @type Array\r\n * @memberOf applciation\r\n * @private\r\n */\r\nmoduleInstances = [];\r\n\r\n/**\r\n * Registers a series of modules to the application\r\n *\r\n * @param {Function|Object} [module...] modules to register\r\n * @memberOf application\r\n */\r\n/**\r\n * Application manages the life cycle of modules.\r\n * @namespace scalejs.application\r\n * @module application\r\n */\r\n\r\n/*global define*/\r\nfunction registerModules() {\r\n    // Dynamic module loading is no longer supported for simplicity.\r\n    // Module is free to load any of its resources dynamically.\r\n    // Or an extension can provide dynamic module loading capabilities as needed.\r\n    if (_scalejs2.default.isApplicationRunning()) {\r\n        throw new Error('Can\\'t register module since the application is already running.', 'Dynamic module loading is not supported.');\r\n    }\r\n\r\n    Array.prototype.push.apply(moduleRegistrations, toArray(arguments).filter(function (m) {\r\n        return m;\r\n    }));\r\n}\r\n\r\n/**\r\n * Creates a module instance from the passed framework\r\n * @private\r\n *\r\n * @param {Function|Object} module what to obtain an instance of\r\n * @memberOf application\r\n * @return the module instance\r\n */\r\nfunction createModule(module) {\r\n    var moduleInstance, moduleId;\r\n\r\n    if (typeof module === 'function') {\r\n        try {\r\n            moduleInstance = module();\r\n        } catch (ex) {\r\n            if (module.getId) {\r\n                moduleId = module.getId();\r\n            } else {\r\n                moduleId = module.name;\r\n            }\r\n\r\n            error('Failed to create an instance of module \"' + moduleId + '\".', 'Application will continue running without the module. ' + 'See following exception stack for more details.', ex.stack);\r\n        }\r\n    } else {\r\n        moduleInstance = module;\r\n    }\r\n\r\n    addOne(moduleInstances, moduleInstance);\r\n\r\n    return moduleInstance;\r\n}\r\n\r\n/**\r\n * Creates all modules currently registered to this applciation\r\n * @private\r\n *\r\n * @memberOf application\r\n */\r\nfunction createAll() {\r\n    moduleRegistrations.forEach(createModule);\r\n}\r\n\r\n/**\r\n * Starts all of the attached module instances\r\n * @private\r\n *\r\n * @memberOf application\r\n */\r\nfunction startAll() {\r\n    debug('Application started.');\r\n\r\n    _scalejs2.default.notifyApplicationStarted();\r\n}\r\n\r\n/**\r\n * Stops all of the attached module instances\r\n * @private\r\n *\r\n * @memberOf application\r\n */\r\nfunction stopAll() {\r\n    debug('Application exited.');\r\n\r\n    _scalejs2.default.notifyApplicationStopped();\r\n}\r\n\r\n/**\r\n * Launches the application by creating all module instances\r\n * and launching them all\r\n *\r\n * @memberOf application\r\n */\r\nfunction run() {\r\n    createAll();\r\n    startAll();\r\n}\r\n\r\n/**\r\n * Exits the application by stopping all running modules\r\n *\r\n * @memberOf application\r\n */\r\nfunction exit() {\r\n    stopAll();\r\n}\r\n\r\nexports.default = {\r\n    registerModules: registerModules,\r\n    run: run,\r\n    exit: exit\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.application.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _scalejsBase = require('./scalejs.base.object');\r\n\r\nvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar valueOrDefault = _scalejsBase2.default.valueOrDefault;\r\n\r\n/**\r\n * Adds an item to the passed array if it doesn't already exist\r\n *\r\n * @param {Array} array list to add the item to\r\n * @param {Any}   item  thing to add to the list\r\n * @memberOf array\r\n */\r\n/**\r\n * Provides array functionality to scalejs base\r\n * @namespace scalejs.base\r\n * @module array\r\n */\r\n\r\n/*global define*/\r\nfunction addOne(array, item) {\r\n    if (array.indexOf(item) < 0) {\r\n        array.push(item);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes the first occurrance of the passed item from the passed array\r\n *\r\n * @param {Array} array list remove the item from\r\n * @param {Any}   item  item to be removed from the list\r\n * @memberOf array\r\n */\r\nfunction removeOne(array, item) {\r\n    var found = array.indexOf(item);\r\n    if (found > -1) {\r\n        array.splice(found, 1);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes all items from an array\r\n *\r\n * @param {Array} array list to remove items from\r\n * @memberOf array\r\n */\r\nfunction removeAll(array) {\r\n    array.splice(0, array.length);\r\n}\r\n\r\n/**\r\n * Copy the items from the array into a new one\r\n *\r\n * @param {Array}  array   list to copy from\r\n * @param {Number} [first] starting index to copy from (defult:0)\r\n * @param {Number} [count] number of items to copy (default:array.length)\r\n * @memberOf array\r\n * @return {Array} copied list\r\n */\r\nfunction copy(array, first, count) {\r\n    first = valueOrDefault(first, 0);\r\n    count = valueOrDefault(count, array.length);\r\n    return Array.prototype.slice.call(array, first, count);\r\n}\r\n\r\n/**\r\n * Finds the passed item in the array\r\n *\r\n * @param {Array}    array   list in which to search\r\n * @param {Function} f       function to seach with\r\n * @param {Any}      content context on which to call the function\r\n * @memberOf array\r\n * @return {Any|Object} item if found, null if not\r\n */\r\nfunction find(array, f, context) {\r\n    var i, // iterative variable\r\n    l; // array length variable\r\n\r\n    for (i = 0, l = array.length; i < l; i += 1) {\r\n        if (array.hasOwnProperty(i) && f.call(context, array[i], i, array)) {\r\n            return array[i];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Converts object structured like array into an array\r\n *\r\n * @param {Any}    list    object structred with numerical keys\r\n * @param {Number} [first] starting index to copy from (defult:0)\r\n * @param {Number} [count] number of items to copy (default:array.length)\r\n * @memberOf array\r\n * @return {Array} result of the array conversion\r\n */\r\nfunction toArray(list, start, count) {\r\n    return copy(list, start, count);\r\n}\r\n\r\nexports.default = {\r\n    addOne: addOne,\r\n    removeOne: removeOne,\r\n    removeAll: removeAll,\r\n    copy: copy,\r\n    find: find,\r\n    toArray: toArray\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.base.array.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _scalejsBase = require('./scalejs.base.array');\r\n\r\nvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\r\nvar _scalejsBase3 = require('./scalejs.base.log');\r\n\r\nvar _scalejsBase4 = _interopRequireDefault(_scalejsBase3);\r\n\r\nvar _scalejsBase5 = require('./scalejs.base.object');\r\n\r\nvar _scalejsBase6 = _interopRequireDefault(_scalejsBase5);\r\n\r\nvar _scalejsBase7 = require('./scalejs.base.type');\r\n\r\nvar _scalejsBase8 = _interopRequireDefault(_scalejsBase7);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/*\r\n * Minimal base implementation.\r\n */\r\n\r\n/*global define*/\r\nexports.default = {\r\n    type: _scalejsBase8.default,\r\n    object: _scalejsBase6.default,\r\n    array: _scalejsBase2.default,\r\n    log: _scalejsBase4.default\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.base.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _scalejsBase = require('./scalejs.base.object');\r\n\r\nvar _scalejsBase2 = _interopRequireDefault(_scalejsBase);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n// Workaround for IE8 and IE9 - in these browsers console.log exists but it's not a real JS function.\r\n// See http://stackoverflow.com/a/5539378/201958 for more details\r\n\r\n/*jslint sub:true*/\r\n/**\r\n * Aliases the built in console log function for IE support\r\n *\r\n * @property log\r\n * @type Function\r\n * @memberOf log\r\n * @private\r\n */\r\nvar log = Function.prototype.call.bind(console['log'], console),\r\n\r\n\r\n/**\r\n * Detects if the current browser is IE\r\n *\r\n * IMPORTANT: the method for obtaining this information is\r\n *            subject to change and this functionality may\r\n *            break at any time\r\n *\r\n * @property IE\r\n * @type Boolean\r\n * @memberOf log\r\n * @private\r\n */\r\nIE = navigator.userAgent.indexOf('MSIE') > 0 || navigator.userAgent.indexOf('Trident') > 0;\r\n\r\n/*jslint sub:false*/\r\n\r\n/**\r\n * Creates a new log function with the passed level\r\n * @private\r\n *\r\n * @param {String} level log level\r\n * @memberOf log\r\n * @return {Function} decorated log function\r\n */\r\n/**\r\n * Provides logging functionality to scalejs base\r\n * @namespace scalejs.base\r\n * @module log\r\n */\r\n\r\n/*global define,console,navigator*/\r\nfunction create(level) {\r\n    return function () {\r\n        var args, outstring;\r\n\r\n        args = Array.prototype.slice.call(arguments, 0);\r\n\r\n        if (!IE) {\r\n            args.unshift(level);\r\n        } else {\r\n            outstring = level + ' ';\r\n            args.forEach(function (arg) {\r\n                outstring += _scalejsBase2.default.stringify(arg) + ' ';\r\n            });\r\n            args = [outstring];\r\n        }\r\n\r\n        log.apply(this, arguments);\r\n    };\r\n}\r\n\r\n/**\r\n * Formats an exception for better output\r\n *\r\n * @param {Object} ex exception object\r\n * @memberOf log\r\n * @return {String} formatted exception\r\n */\r\nfunction formatException(ex) {\r\n    var stack = ex.stack ? String(ex.stack) : '',\r\n        message = ex.message || '';\r\n    return 'Error: ' + message + '\\nStack: ' + stack;\r\n}\r\n\r\nexports.default = {\r\n    /**\r\n     * Logs to the console with no level\r\n     * @method log\r\n     * @param {Any} [message...] items to print to the console\r\n     * @memberOf log\r\n     */\r\n    log: create('      '),\r\n    /**\r\n     * Logs to the console with info level\r\n     * @method info\r\n     * @param {Any} [message...] items to print to the console\r\n     * @memberOf log\r\n     */\r\n    info: create('info: '),\r\n    /**\r\n     * Logs to the console with error level\r\n     * @method error\r\n     * @param {Any} [message...] items to print to the console\r\n     * @memberOf log\r\n     */\r\n    error: create('error:'),\r\n    /**\r\n     * Logs to the console with warn level\r\n     * @method warn\r\n     * @param {Any} [message...] items to print to the console\r\n     * @memberOf log\r\n     */\r\n    warn: create('warn: '),\r\n    /**\r\n     * Logs to the console with debug level\r\n     * @method debug\r\n     * @param {Any} [message...] items to print to the console\r\n     * @memberOf log\r\n     */\r\n    debug: create('debug:'),\r\n    /** */\r\n    formatException: formatException\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.base.log.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _scalejs = require('./scalejs.base');\r\n\r\nvar _scalejs2 = _interopRequireDefault(_scalejs);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n// Imports\r\nvar has = _scalejs2.default.object.has,\r\n    is = _scalejs2.default.type.is,\r\n    extend = _scalejs2.default.object.extend,\r\n    addOne = _scalejs2.default.array.addOne,\r\n    error = _scalejs2.default.log.error,\r\n\r\n\r\n/**\r\n * Holds the core\r\n * @property self\r\n * @type Object\r\n * @memberOf core\r\n * @private\r\n */\r\nself = {},\r\n\r\n/**\r\n * Holds extensions for the core and sandbox\r\n * @property extensions\r\n * @type Array\r\n * @memberOf core\r\n * @private\r\n */\r\nextensions = [],\r\n\r\n/**\r\n * Holds application event listeners\r\n * @property applicationEventListeners\r\n * @type Array\r\n * @memberOf core\r\n * @private\r\n */\r\napplicationEventListeners = [],\r\n\r\n/**\r\n * Holds the current application state\r\n * @property isApplicationRunning\r\n * @type Boolean\r\n * @memberOf core\r\n * @private\r\n */\r\n_isApplicationRunning = false;\r\n\r\n/**\r\n * Registers an extension to the sandbox\r\n *\r\n * @param {Function|Object} extension function to create the extension or\r\n *                                    object representing the extension\r\n * @memberOf core\r\n */\r\n/**\r\n * Provides core functionality of scalejs\r\n * @namespace scalejs.core\r\n * @module core\r\n */\r\n\r\n/*global define*/\r\nfunction registerExtension(extension) {\r\n    try {\r\n        var ext; // Actual extension\r\n\r\n        if (is(extension, 'buildCore', 'function')) {\r\n            // If extension has buildCore function then give it an instance of the core.\r\n            extension.buildCore(self);\r\n            addOne(extensions, extension);\r\n            return; // No need to extend as that will be handled in buildCore\r\n        }\r\n\r\n        if (is(extension, 'function')) {\r\n            // If extension is a function then give it an instance of the core.\r\n            ext = extension(self);\r\n        } else if (has(extension, 'core')) {\r\n            // If extension has `core` property then extend core with it.\r\n            ext = extension.core;\r\n        } else {\r\n            // Otherwise extend core with the extension itself.\r\n            ext = extension;\r\n        }\r\n\r\n        if (ext) {\r\n            extend(self, ext);\r\n            addOne(extensions, extension);\r\n        }\r\n    } catch (ex) {\r\n        error('Fatal error during application initialization. ', 'Failed to build core with extension \"', extension, 'See following exception for more details.', ex);\r\n    }\r\n\r\n    return extension;\r\n}\r\n\r\n/**\r\n * Builds a sandbox from the current list of extensions\r\n *\r\n * @param {String} id identifier for the sandbox\r\n * @memberOf core\r\n * @return {Object} object representing the built sandbox\r\n */\r\nfunction buildSandbox(id) {\r\n    if (!has(id)) {\r\n        throw new Error('Sandbox name is required to build a sandbox.');\r\n    }\r\n\r\n    // Create module instance specific sandbox\r\n    var sandbox = {\r\n        type: self.type,\r\n        object: self.object,\r\n        array: self.array,\r\n        log: self.log\r\n    };\r\n\r\n    // Add extensions to sandbox\r\n    extensions.forEach(function (extension) {\r\n        try {\r\n\r\n            // If extension has buildSandbox method use it to build sandbox\r\n            if (is(extension, 'buildSandbox', 'function')) {\r\n                extension.buildSandbox(sandbox);\r\n            }\r\n\r\n            // If extension has a sandbox object add it\r\n            else if (has(extension, 'sandbox')) {\r\n                    extend(sandbox, extension.sandbox);\r\n                }\r\n\r\n                // Otherwise extend the sandbox with the extension\r\n                else {\r\n                        extend(sandbox, extension);\r\n                    }\r\n        } catch (ex) {\r\n            error('Fatal error during application initialization. ', 'Failed to build sandbox with extension \"', extension, 'See following exception for more details.', ex);\r\n            throw ex;\r\n        }\r\n    });\r\n\r\n    return sandbox;\r\n}\r\n\r\n/**\r\n * Adds a listener to the application event\r\n *\r\n * @param {Function} listener called on application event\r\n * @param {String}   listener.message event description\r\n * @memberOf core\r\n */\r\nfunction onApplicationEvent(listener) {\r\n    applicationEventListeners.push(listener);\r\n}\r\n\r\n/**\r\n * Notify the event listeners the application has started\r\n *\r\n * @memberOf core\r\n */\r\nfunction notifyApplicationStarted() {\r\n    if (_isApplicationRunning) {\r\n        return;\r\n    }\r\n\r\n    _isApplicationRunning = true;\r\n    applicationEventListeners.forEach(function (listener) {\r\n        listener('started');\r\n    });\r\n}\r\n\r\n/**\r\n * Notify the event listeners the application has stopped\r\n *\r\n * @memberOf core\r\n */\r\nfunction notifyApplicationStopped() {\r\n    if (!_isApplicationRunning) {\r\n        return;\r\n    }\r\n\r\n    _isApplicationRunning = false;\r\n    applicationEventListeners.forEach(function (listener) {\r\n        listener('stopped');\r\n    });\r\n}\r\n\r\n/**\r\n * Constant for notifying application start\r\n *\r\n * @property STARTED\r\n * @type String\r\n * @memberOf core\r\n */\r\nObject.defineProperty(self, 'STARTED', {\r\n    value: 'started',\r\n    writable: false\r\n});\r\n\r\n/**\r\n * Constant for notifying application stop\r\n *\r\n * @property STOPPED\r\n * @type String\r\n * @memberOf core\r\n */\r\nObject.defineProperty(self, 'STOPPED', {\r\n    value: 'stopped',\r\n    writable: false\r\n});\r\n\r\nexports.default = extend(self, {\r\n    type: _scalejs2.default.type,\r\n    object: _scalejs2.default.object,\r\n    array: _scalejs2.default.array,\r\n    log: _scalejs2.default.log,\r\n    buildSandbox: buildSandbox,\r\n    notifyApplicationStarted: notifyApplicationStarted,\r\n    notifyApplicationStopped: notifyApplicationStopped,\r\n    onApplicationEvent: onApplicationEvent,\r\n    registerExtension: registerExtension,\r\n    /**\r\n     * Accesses the current state of the application\r\n     *\r\n     * @memberOf core\r\n     * @return {Boolean} state of the application\r\n     */\r\n    isApplicationRunning: function isApplicationRunning() {\r\n        return _isApplicationRunning;\r\n    }\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scalejs/dist/scalejs.es6.core.js\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-define.js\n ** module id = 29\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastData;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check(true, function(err, updatedModules) {\r\n\t\t\tif(err) {\r\n\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t}) {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\r\n\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!upToDate()) {\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\r\n\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\r\n\r\n\t\t\tif(upToDate()) {\r\n\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t};\r\n\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\r\n\t\twindow.addEventListener(eventName, listener, false);\r\n\t} : function(eventName, listener) {\r\n\t\twindow.attachEvent(\"on\" + eventName, listener);\r\n\t};\r\n\taddEventListener(\"message\", function(event) {\r\n\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\r\n\t\t\tlastData = event.data;\r\n\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\r\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/hot/dev-server.js\n ** module id = 30\n ** module chunks = 0\n **/"],"sourceRoot":""}